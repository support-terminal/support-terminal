{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/angular.material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bot-commands/bot-commands-routing.module.ts","webpack:///./src/app/bot-commands/bot-commands.module.ts","webpack:///./src/app/bot-commands/bus/Сhannel.ts","webpack:///./src/app/bot-commands/commands/add-bot-command/add-bot-command.component.html","webpack:///./src/app/bot-commands/commands/add-bot-command/add-bot-command.component.scss","webpack:///./src/app/bot-commands/commands/add-bot-command/add-bot-command.component.ts","webpack:///./src/app/bot-commands/commands/bot-command-form/bot-command-form.component.html","webpack:///./src/app/bot-commands/commands/bot-command-form/bot-command-form.component.scss","webpack:///./src/app/bot-commands/commands/bot-command-form/bot-command-form.component.ts","webpack:///./src/app/bot-commands/commands/bot-command-form/sql-command/sql-command-form.component.html","webpack:///./src/app/bot-commands/commands/bot-command-form/sql-command/sql-command-form.component.ts","webpack:///./src/app/bot-commands/commands/bot-command-form/sql-in-excel-file-command/sql-in-excel-file-command.component.html","webpack:///./src/app/bot-commands/commands/bot-command-form/sql-in-excel-file-command/sql-in-excel-file-command.component.ts","webpack:///./src/app/bot-commands/commands/bot-commands-list/bot-command-item/bot-command-item.component.html","webpack:///./src/app/bot-commands/commands/bot-commands-list/bot-command-item/bot-command-item.component.scss","webpack:///./src/app/bot-commands/commands/bot-commands-list/bot-command-item/bot-command-item.component.ts","webpack:///./src/app/bot-commands/commands/bot-commands-list/bot-commands-list.component.html","webpack:///./src/app/bot-commands/commands/bot-commands-list/bot-commands-list.component.scss","webpack:///./src/app/bot-commands/commands/bot-commands-list/bot-commands-list.component.ts","webpack:///./src/app/bot-commands/commands/edit-bot-command/edit-bot-command.component.html","webpack:///./src/app/bot-commands/commands/edit-bot-command/edit-bot-command.component.scss","webpack:///./src/app/bot-commands/commands/edit-bot-command/edit-bot-command.component.ts","webpack:///./src/app/bot-commands/commands/models/Action.ts","webpack:///./src/app/bot-commands/commands/models/BotCommand.ts","webpack:///./src/app/bot-commands/commands/services/bot-commands.bus.ts","webpack:///./src/app/bot-commands/commands/services/bot-commands.service.ts","webpack:///./src/app/bot-monitoring/bot-monitoring-task-routing.module.ts","webpack:///./src/app/bot-monitoring/bot-monitoring-task.module.ts.ts","webpack:///./src/app/bot-monitoring/bus/Сhannel.ts","webpack:///./src/app/bot-monitoring/tasks/add-bot-task/add-bot-task.component.html","webpack:///./src/app/bot-monitoring/tasks/add-bot-task/add-bot-task.component.scss","webpack:///./src/app/bot-monitoring/tasks/add-bot-task/add-bot-task.component.ts","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/bot-monitoring-task-condition-item/bot-monitoring-task-condition-item.component.html","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/bot-monitoring-task-condition-item/bot-monitoring-task-condition-item.component.ts","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/bot-monitoring-task-notify-item/bot-monitoring-task-notify-item.component.html","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/bot-monitoring-task-notify-item/bot-monitoring-task-notify-item.component.ts","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/bot-task-form.component.html","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/bot-task-form.component.scss","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/bot-task-form.component.ts","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/select-one-numeric-value-task/select-one-numeric-value-task.component.html","webpack:///./src/app/bot-monitoring/tasks/bot-task-form/select-one-numeric-value-task/select-one-numeric-value-task.component.ts","webpack:///./src/app/bot-monitoring/tasks/bot-tasks-list/bot-task-item/bot-task-item.component.html","webpack:///./src/app/bot-monitoring/tasks/bot-tasks-list/bot-task-item/bot-task-item.component.scss","webpack:///./src/app/bot-monitoring/tasks/bot-tasks-list/bot-task-item/bot-task-item.component.ts","webpack:///./src/app/bot-monitoring/tasks/bot-tasks-list/bot-tasks-list.component.html","webpack:///./src/app/bot-monitoring/tasks/bot-tasks-list/bot-tasks-list.component.scss","webpack:///./src/app/bot-monitoring/tasks/bot-tasks-list/bot-tasks-list.component.ts","webpack:///./src/app/bot-monitoring/tasks/edit-bot-task/edit-bot-task.component.html","webpack:///./src/app/bot-monitoring/tasks/edit-bot-task/edit-bot-task.component.scss","webpack:///./src/app/bot-monitoring/tasks/edit-bot-task/edit-bot-task.component.ts","webpack:///./src/app/bot-monitoring/tasks/models/BotMonitoringTask.ts","webpack:///./src/app/bot-monitoring/tasks/models/Notify.ts","webpack:///./src/app/bot-monitoring/tasks/services/bot-monitoring-tasks.bus.ts","webpack:///./src/app/bot-monitoring/tasks/services/bot-monitoring-tasks.service.ts","webpack:///./src/app/config.ts","webpack:///./src/app/core/api/Message.ts","webpack:///./src/app/core/api/index.ts","webpack:///./src/app/core/api/messaging-bus.service.ts","webpack:///./src/app/core/bots/add-bot/add-bot.component.html","webpack:///./src/app/core/bots/add-bot/add-bot.component.scss","webpack:///./src/app/core/bots/add-bot/add-bot.component.ts","webpack:///./src/app/core/bots/bot-access-list/bot-access-list.component.html","webpack:///./src/app/core/bots/bot-access-list/bot-access-list.component.scss","webpack:///./src/app/core/bots/bot-access-list/bot-access-list.component.ts","webpack:///./src/app/core/bots/bot-form/bot-form.component.html","webpack:///./src/app/core/bots/bot-form/bot-form.component.scss","webpack:///./src/app/core/bots/bot-form/bot-form.component.ts","webpack:///./src/app/core/bots/bot-form/slack-form/slack-bot-form.component.html","webpack:///./src/app/core/bots/bot-form/slack-form/slack-bot-form.component.ts","webpack:///./src/app/core/bots/bot-form/telegram-form/telegram-bot-form.component.html","webpack:///./src/app/core/bots/bot-form/telegram-form/telegram-bot-form.component.ts","webpack:///./src/app/core/bots/bots-list/bot-item/bot-item.component.html","webpack:///./src/app/core/bots/bots-list/bot-item/bot-item.component.scss","webpack:///./src/app/core/bots/bots-list/bot-item/bot-item.component.ts","webpack:///./src/app/core/bots/bots-list/bots-list.component.html","webpack:///./src/app/core/bots/bots-list/bots-list.component.scss","webpack:///./src/app/core/bots/bots-list/bots-list.component.ts","webpack:///./src/app/core/bots/edit-bot/edit-bot.component.html","webpack:///./src/app/core/bots/edit-bot/edit-bot.component.scss","webpack:///./src/app/core/bots/edit-bot/edit-bot.component.ts","webpack:///./src/app/core/bots/models/Bot.ts","webpack:///./src/app/core/bots/models/SlackBot.ts","webpack:///./src/app/core/bots/models/TelegramBot.ts","webpack:///./src/app/core/bots/services/bots.bus.ts","webpack:///./src/app/core/bots/services/bots.service.ts","webpack:///./src/app/core/bus/Сhannel.ts","webpack:///./src/app/core/core-routing.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/dbs/add-db-connection/add-db-connection.component.html","webpack:///./src/app/core/dbs/add-db-connection/add-db-connection.component.scss","webpack:///./src/app/core/dbs/add-db-connection/add-db-connection.component.ts","webpack:///./src/app/core/dbs/db-connection-form/db-connection-form.component.html","webpack:///./src/app/core/dbs/db-connection-form/db-connection-form.component.scss","webpack:///./src/app/core/dbs/db-connection-form/db-connection-form.component.ts","webpack:///./src/app/core/dbs/db-connection-form/mysql-form/mysql-db-connection-form.component.html","webpack:///./src/app/core/dbs/db-connection-form/mysql-form/mysql-db-connection-form.component.ts","webpack:///./src/app/core/dbs/db-connection-form/oracle-form/oracle-db-connection-form.component.html","webpack:///./src/app/core/dbs/db-connection-form/oracle-form/oracle-db-connection-form.component.ts","webpack:///./src/app/core/dbs/db-connection-form/postgres-form/postgres-db-connection-form.component.html","webpack:///./src/app/core/dbs/db-connection-form/postgres-form/postgres-db-connection-form.component.ts","webpack:///./src/app/core/dbs/dbs-list/db-item/db-item.component.html","webpack:///./src/app/core/dbs/dbs-list/db-item/db-item.component.scss","webpack:///./src/app/core/dbs/dbs-list/db-item/db-item.component.ts","webpack:///./src/app/core/dbs/dbs-list/dbs-list.component.html","webpack:///./src/app/core/dbs/dbs-list/dbs-list.component.scss","webpack:///./src/app/core/dbs/dbs-list/dbs-list.component.ts","webpack:///./src/app/core/dbs/edit-db-connection/edit-db-connection.component.html","webpack:///./src/app/core/dbs/edit-db-connection/edit-db-connection.component.scss","webpack:///./src/app/core/dbs/edit-db-connection/edit-db-connection.component.ts","webpack:///./src/app/core/dbs/models/DbConnection.ts","webpack:///./src/app/core/dbs/services/db-connections.bus.ts","webpack:///./src/app/core/dbs/services/db-connections.service.ts","webpack:///./src/app/core/processor/text/add-text-processor-handler/add-text-processor-handler.component.html","webpack:///./src/app/core/processor/text/add-text-processor-handler/add-text-processor-handler.component.scss","webpack:///./src/app/core/processor/text/add-text-processor-handler/add-text-processor-handler.component.ts","webpack:///./src/app/core/processor/text/edit-text-processor-handler/edit-text-processor-handler.component.html","webpack:///./src/app/core/processor/text/edit-text-processor-handler/edit-text-processor-handler.component.scss","webpack:///./src/app/core/processor/text/edit-text-processor-handler/edit-text-processor-handler.component.ts","webpack:///./src/app/core/processor/text/execute-text-handler/execute-text-handler.component.html","webpack:///./src/app/core/processor/text/execute-text-handler/execute-text-handler.component.scss","webpack:///./src/app/core/processor/text/execute-text-handler/execute-text-handler.component.ts","webpack:///./src/app/core/processor/text/models/TextProcessorAddDelimiter.ts","webpack:///./src/app/core/processor/text/models/TextProcessorFindByKey.ts","webpack:///./src/app/core/processor/text/models/TextProcessorFindNumberWithPrefix.ts","webpack:///./src/app/core/processor/text/models/TextProcessorHandler.ts","webpack:///./src/app/core/processor/text/services/text-process-handler.resolver.ts","webpack:///./src/app/core/processor/text/services/text-processors-handlers.bus.ts","webpack:///./src/app/core/processor/text/services/text-processors-handlers.service.ts","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-add-delimiter/text-processor-add-delimiter.component.html","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-add-delimiter/text-processor-add-delimiter.component.ts","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-find-by-key/text-processor-find-by-key.component.html","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-find-by-key/text-processor-find-by-key.component.ts","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-find-numbers-with-prefix/text-processor-find-numbers-with-prefix.component.html","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-find-numbers-with-prefix/text-processor-find-numbers-with-prefix.component.ts","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-handler-form.component.html","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-handler-form.component.scss","webpack:///./src/app/core/processor/text/text-processor-handler-form/text-processor-handler-form.component.ts","webpack:///./src/app/core/processor/text/text-processor-handlers-list/text-processor-item/text-processor-item.component.html","webpack:///./src/app/core/processor/text/text-processor-handlers-list/text-processor-item/text-processor-item.component.scss","webpack:///./src/app/core/processor/text/text-processor-handlers-list/text-processor-item/text-processor-item.component.ts","webpack:///./src/app/core/processor/text/text-processor-handlers-list/text-processors-handlers-list.component.html","webpack:///./src/app/core/processor/text/text-processor-handlers-list/text-processors-handlers-list.component.scss","webpack:///./src/app/core/processor/text/text-processor-handlers-list/text-processors-handlers-list.component.ts","webpack:///./src/app/core/settings/settings.component.html","webpack:///./src/app/core/settings/settings.component.scss","webpack:///./src/app/core/settings/settings.component.ts","webpack:///./src/app/core/settings/settings.service.ts","webpack:///./src/app/core/web-users/add-web-user/add-web-user.component.html","webpack:///./src/app/core/web-users/add-web-user/add-web-user.component.scss","webpack:///./src/app/core/web-users/add-web-user/add-web-user.component.ts","webpack:///./src/app/core/web-users/edit-web-user/edit-web-user.component.html","webpack:///./src/app/core/web-users/edit-web-user/edit-web-user.component.scss","webpack:///./src/app/core/web-users/edit-web-user/edit-web-user.component.ts","webpack:///./src/app/core/web-users/models/WebUser.ts","webpack:///./src/app/core/web-users/services/web-users.bus.ts","webpack:///./src/app/core/web-users/services/web-users.service.ts","webpack:///./src/app/core/web-users/web-user-form/web-user-form.component.html","webpack:///./src/app/core/web-users/web-user-form/web-user-form.component.scss","webpack:///./src/app/core/web-users/web-user-form/web-user-form.component.ts","webpack:///./src/app/core/web-users/web-users-list/web-user-item/web-user-item.component.html","webpack:///./src/app/core/web-users/web-users-list/web-user-item/web-user-item.component.scss","webpack:///./src/app/core/web-users/web-users-list/web-user-item/web-user-item.component.ts","webpack:///./src/app/core/web-users/web-users-list/web-users-list.component.html","webpack:///./src/app/core/web-users/web-users-list/web-users-list.component.scss","webpack:///./src/app/core/web-users/web-users-list/web-users-list.component.ts","webpack:///./src/app/data-forms/bus/Сhannel.ts","webpack:///./src/app/data-forms/data-forms-routing.module.ts","webpack:///./src/app/data-forms/data-forms.module.ts","webpack:///./src/app/data-forms/forms/add-data-form/add-data-form.component.html","webpack:///./src/app/data-forms/forms/add-data-form/add-data-form.component.scss","webpack:///./src/app/data-forms/forms/add-data-form/add-data-form.component.ts","webpack:///./src/app/data-forms/forms/data-form-form/data-form-form.component.html","webpack:///./src/app/data-forms/forms/data-form-form/data-form-form.component.scss","webpack:///./src/app/data-forms/forms/data-form-form/data-form-form.component.ts","webpack:///./src/app/data-forms/forms/data-form-form/parameters/data-form-parameter-item.component.html","webpack:///./src/app/data-forms/forms/data-form-form/parameters/data-form-parameter-item.component.ts","webpack:///./src/app/data-forms/forms/data-form-form/parameters/data-form-parameters.component.html","webpack:///./src/app/data-forms/forms/data-form-form/parameters/data-form-parameters.component.ts","webpack:///./src/app/data-forms/forms/data-form-form/results/data-form-results.component.html","webpack:///./src/app/data-forms/forms/data-form-form/results/data-form-results.component.ts","webpack:///./src/app/data-forms/forms/data-form-form/results/types/data-form-table-results.component.html","webpack:///./src/app/data-forms/forms/data-form-form/results/types/data-form-table-results.component.ts","webpack:///./src/app/data-forms/forms/data-form-form/steps/data-form-step-item.component.html","webpack:///./src/app/data-forms/forms/data-form-form/steps/data-form-step-item.component.ts","webpack:///./src/app/data-forms/forms/data-form-form/steps/data-form-steps.component.html","webpack:///./src/app/data-forms/forms/data-form-form/steps/data-form-steps.component.ts","webpack:///./src/app/data-forms/forms/data-forms-list/data-form-item/data-form-item.component.html","webpack:///./src/app/data-forms/forms/data-forms-list/data-form-item/data-form-item.component.scss","webpack:///./src/app/data-forms/forms/data-forms-list/data-form-item/data-form-item.component.ts","webpack:///./src/app/data-forms/forms/data-forms-list/data-forms-list.component.html","webpack:///./src/app/data-forms/forms/data-forms-list/data-forms-list.component.scss","webpack:///./src/app/data-forms/forms/data-forms-list/data-forms-list.component.ts","webpack:///./src/app/data-forms/forms/edit-data-form/edit-data-form.component.html","webpack:///./src/app/data-forms/forms/edit-data-form/edit-data-form.component.scss","webpack:///./src/app/data-forms/forms/edit-data-form/edit-data-form.component.ts","webpack:///./src/app/data-forms/forms/execute-data-form/execute-data-form.component.html","webpack:///./src/app/data-forms/forms/execute-data-form/execute-data-form.component.scss","webpack:///./src/app/data-forms/forms/execute-data-form/execute-data-form.component.ts","webpack:///./src/app/data-forms/forms/execute-data-form/parameters-values/data-form-execute-parameters.component.html","webpack:///./src/app/data-forms/forms/execute-data-form/parameters-values/data-form-execute-parameters.component.ts","webpack:///./src/app/data-forms/forms/execute-data-form/parameters-values/string-parameter-field.component.html","webpack:///./src/app/data-forms/forms/execute-data-form/parameters-values/string-parameter-field.component.ts","webpack:///./src/app/data-forms/forms/execute-data-form/results/data-form-view-results.component.html","webpack:///./src/app/data-forms/forms/execute-data-form/results/data-form-view-results.component.scss","webpack:///./src/app/data-forms/forms/execute-data-form/results/data-form-view-results.component.ts","webpack:///./src/app/data-forms/forms/models/DataForExecution.ts","webpack:///./src/app/data-forms/forms/models/DataForm.ts","webpack:///./src/app/data-forms/forms/models/DataFormExecuteRequest.ts","webpack:///./src/app/data-forms/forms/models/DataFormParameterValue.ts","webpack:///./src/app/data-forms/forms/services/data-form.resolver.ts","webpack:///./src/app/data-forms/forms/services/data-forms.bus.ts","webpack:///./src/app/data-forms/forms/services/data-forms.service.ts","webpack:///./src/app/enevts/events-console.component.html","webpack:///./src/app/enevts/events-console.component.scss","webpack:///./src/app/enevts/events-console.component.ts","webpack:///./src/app/enevts/services/events.service.ts","webpack:///./src/app/login/auth.guard.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.html","webpack:///./src/app/login/login.scss","webpack:///./src/app/login/login.ts","webpack:///./src/app/main.component.html","webpack:///./src/app/main.component.scss","webpack:///./src/app/main.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatCodemirrorModule} from \"ngx-mat-codemirror\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\n\nconst modules = [\n  MatCodemirrorModule,\n  MatSnackBarModule,\n  MatSlideToggleModule,\n  ReactiveFormsModule,\n  FormsModule,\n  MatTooltipModule,\n  MatSelectModule,\n  MatInputModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatButtonModule,\n  MatCheckboxModule,\n  MatCardModule,\n  FlexLayoutModule,\n  MatMenuModule,\n  MatListModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatExpansionModule,\n  MatProgressSpinnerModule\n];\n\n\n@NgModule({\n  imports: [...modules],\n  exports: [...modules],\n})\nexport class AngularMaterialModule{ }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MainComponent} from \"./main.component\";\nimport {Config} from \"./config\";\nimport {AuthGuard} from \"./login/auth.guard\";\nimport {LoginComponent} from \"./login/login.component\";\n\nconst routes: Routes = [];\n\n@NgModule({\n  providers:[\n    Config\n  ],\n  imports: [RouterModule.forRoot(\n    [{\n      path: '',\n      canActivate: [AuthGuard],\n      component:  MainComponent,\n      children: []\n    },\n      {\n        path: 'login',\n        component: LoginComponent\n      }]\n  )],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n      <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent {\n}\n","import {AppRoutingModule} from './app-routing.module';\n\n\nimport {AppComponent} from \"./app.component\";\nimport {MainComponent} from \"./main.component\";\n\nimport {NgModule} from \"@angular/core\";\nimport {AuthService, ConfigService, Ng2UiAuthModule, SharedService} from \"ng2-ui-auth\";\nimport {EventsService} from \"./enevts/services/events.service\";\nimport {AuthGuard} from \"./login/auth.guard\";\nimport {EventsConsoleComponent} from \"./enevts/events-console.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {AngularSplitModule} from \"angular-split\";\nimport {CodemirrorModule} from \"@ctrl/ngx-codemirror\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {CoreModule} from \"./core/core.module\";\nimport {AngularMaterialModule} from \"./angular.material.module\";\nimport {MessagingBusService} from \"./core/api\";\nimport {BotCommandsModule} from \"./bot-commands/bot-commands.module\";\nimport {BotMonitoringTasksModule} from \"./bot-monitoring/bot-monitoring-task.module.ts\";\n\nimport 'codemirror/mode/sql/sql';\nimport {DataFormsModule} from \"./data-forms/data-forms.module\";\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    AppComponent,\n    EventsConsoleComponent,\n    LoginComponent\n  ],\n  imports: [\n    AngularSplitModule,\n    CodemirrorModule,\n    Ng2UiAuthModule.forRoot({}),\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    AppRoutingModule,\n    CoreModule,\n    BotMonitoringTasksModule,\n    DataFormsModule,\n    BotCommandsModule\n  ],\n  providers: [\n    AuthGuard,\n    EventsService,\n    AuthService,\n    ConfigService,\n    SharedService,\n    MessagingBusService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BotCommandsListComponent} from \"./commands/bot-commands-list/bot-commands-list.component\";\nimport {MainComponent} from \"../main.component\";\nimport {AuthGuard} from \"../login/auth.guard\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:  MainComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'bot-commands', component: BotCommandsListComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BotCommandsRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {BotCommandsListComponent} from \"./commands/bot-commands-list/bot-commands-list.component\";\nimport {BotCommandsService} from \"./commands/services/bot-commands.service\";\nimport {BotCommandsRoutingModule} from \"./bot-commands-routing.module\";\nimport {BotCommandItemComponent} from \"./commands/bot-commands-list/bot-command-item/bot-command-item.component\";\nimport {AddBotCommandComponent} from \"./commands/add-bot-command/add-bot-command.component\";\nimport {EditBotCommandComponent} from \"./commands/edit-bot-command/edit-bot-command.component\";\nimport {BotCommandsBus} from \"./commands/services/bot-commands.bus\";\nimport {BotCommandFormComponent} from \"./commands/bot-command-form/bot-command-form.component\";\nimport {SqlInExcelFileCommandComponent} from \"./commands/bot-command-form/sql-in-excel-file-command/sql-in-excel-file-command.component\";\nimport {SqlCommandFormComponent} from \"./commands/bot-command-form/sql-command/sql-command-form.component\";\nimport {CodemirrorModule} from '@ctrl/ngx-codemirror';\nimport {AngularMaterialModule} from \"../angular.material.module\";\n\n@NgModule({\n    imports: [\n        AngularMaterialModule,\n        CodemirrorModule,\n        CommonModule,\n        BotCommandsRoutingModule\n    ],\n    providers: [ BotCommandsBus, BotCommandsService],\n    declarations: [\n       AddBotCommandComponent, BotCommandFormComponent,\n       SqlInExcelFileCommandComponent, SqlCommandFormComponent, EditBotCommandComponent,\n        BotCommandsListComponent,\n        BotCommandItemComponent,\n    ],\n     entryComponents: [ AddBotCommandComponent, EditBotCommandComponent]\n})\nexport class BotCommandsModule {\n  constructor(private botCommandsBus: BotCommandsBus) { }\n}\n","class Channel{\n    public static BOT_COMMANDS_WERE_UPDATED = \"BOT_COMMANDS_WERE_UPDATED\";\n    public static OPEN_ADD_BOT_COMMAND_DIALOG = \"OPEN_ADD_BOT_COMMAND_DIALOG\";\n    public static OPEN_EDIT_BOT_COMMAND_DIALOG = \"OPEN_EDIT_BOT_COMMAND_DIALOG\";\n    public static DB_CONNECTIONS_WERE_UPDATED = \"DB_CONNECTIONS_WERE_UPDATED\";\n    public static BOTS_WERE_UPDATED = \"BOTS_WERE_UPDATED\";\n\n}\n\nexport default Channel;\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Новая бот комманда</h2>\\n  <button mat-icon-button matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content>\\n  <bot-command-form (onSubmitEvent)=\\\"add($event)\\\"\\n                      submitButtonText=\\\"Добавить бот комманду\\\">\\n  </bot-command-form>\\n</mat-dialog-content>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1jb21tYW5kcy9jb21tYW5kcy9hZGQtYm90LWNvbW1hbmQvYWRkLWJvdC1jb21tYW5kLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport BotCommand from \"../models/BotCommand\";\nimport {BotCommandsService} from \"../services/bot-commands.service\";\n\n@Component({\n  selector: 'add-bot-command',\n  templateUrl: './add-bot-command.component.html',\n  styleUrls: ['./add-bot-command.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class AddBotCommandComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddBotCommandComponent>,\n              private botCommandsService: BotCommandsService,\n              private snackBar: MatSnackBar ) { }\n\n  add(command: BotCommand ):void{\n    this.botCommandsService.add(command)\n      .subscribe( command => {\n        this.dialogRef.close();\n          this.snackBar.open(\"Команда добавлена\", '', {\n              duration: 3000,\n              panelClass: 'colorGreen',\n              horizontalPosition: 'right'\n          });\n      });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n\n}\n","module.exports = \"<form [formGroup]=\\\"botCommandForm\\\" (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\">\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Наименование команды\\\"\\n           id=\\\"name\\\" name=\\\"name\\\"\\n           formControlName=\\\"name\\\"/>\\n    <mat-error *ngIf=\\\" (botCommandForm.controls['name'].dirty || botCommandForm.controls['name'].touched)\\n                       && botCommandForm.controls['name'].errors && botCommandForm.controls['name'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Команда\\\"\\n           id=\\\"cmd\\\" name=\\\"cmd\\\"\\n           formControlName=\\\"cmd\\\"/>\\n    <mat-error *ngIf=\\\" (botCommandForm.controls['cmd'].dirty || botCommandForm.controls['cmd'].touched)\\n                       && botCommandForm.controls['cmd'].errors && botCommandForm.controls['cmd'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Бот API\\\"\\n                multiple\\n                formControlName=\\\"botIds\\\">\\n      <mat-option *ngFor=\\\"let bot of bots\\\" [value]=\\\"bot.id\\\">\\n        {{ bot.label }}\\n      </mat-option>\\n    </mat-select>\\n\\n    <mat-error *ngIf=\\\"(botCommandForm.controls['botIds'].dirty || botCommandForm.controls['botIds'].touched)\\n                       && botCommandForm.controls['botIds'].errors && botCommandForm.controls['botIds'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field [formGroup]=\\\"botCommandForm.controls['action']\\\">\\n    <mat-select placeholder=\\\"Тип команды\\\"\\n                id=\\\"type\\\" name=\\\"type\\\"\\n                formControlName=\\\"type\\\">\\n      <mat-option *ngFor=\\\"let t of actionTypes\\\" [value]=\\\"t.type\\\">\\n        {{ t.name }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"(botCommandForm.controls['action'].controls['type'].dirty || botCommandForm.controls['action'].controls['type'].touched)\\n                       && botCommandForm.controls['action'].controls['type'].errors && botCommandForm.controls['action'].controls['type'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <sql-command-form *ngIf=\\\"botCommandForm.controls['action'].value.type == 'SQL_SELECT'\\\"\\n                    [actionForm]=\\\"botCommandForm.controls['action']\\\"\\n                    [actionModel]=\\\"botCommandModel.action\\\">\\n  </sql-command-form>\\n\\n  <sql-in-excel-file-command *ngIf=\\\"botCommandForm.controls['action'].value.type == 'SQL_SELECT_IN_EXCEL_FILE'\\\"\\n                             [actionForm]=\\\"botCommandForm.controls['action']\\\"\\n                             [actionModel]=\\\"botCommandModel.action\\\">\\n  </sql-in-excel-file-command>\\n\\n  <div fxLayout fxFlexAlign=\\\"center\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\n              [disabled]=\\\"botCommandForm.invalid\\\">{{submitButtonText}}</button>\\n\\n    <ng-content select=\\\".ng-content-bottom-buttons\\\"></ng-content>\\n\\n  </div>\\n\\n</form>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1jb21tYW5kcy9jb21tYW5kcy9ib3QtY29tbWFuZC1mb3JtL2JvdC1jb21tYW5kLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, Input, OnDestroy, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport BotCommand from \"../models/BotCommand\";\nimport Bot from \"../models/Bot\";\nimport {BotCommandsService} from \"../services/bot-commands.service\";\nimport * as Rx from \"rxjs\";\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'bot-command-form',\n    templateUrl: './bot-command-form.component.html',\n    styleUrls: ['./bot-command-form.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotCommandFormComponent implements OnDestroy {\n\n    @Output() onSubmitEvent: EventEmitter<BotCommand> = new EventEmitter();\n    @Input() initial: BotCommand;\n    @Input() submitButtonText: string;\n\n    private botsSubscription: Rx.Subscription;\n\n    private bots: Bot[];\n\n    private botCommandModel: BotCommand = new BotCommand();\n    private botCommandForm: FormGroup;\n\n    constructor(private botCommandsService: BotCommandsService,\n                private fb: FormBuilder) {\n\n        this.initForm();\n        this.botsSubscription = this.botCommandsService.botsSubject.subscribe((bots)=>{\n            this.bots = bots;\n        });\n    }\n\n    initForm() {\n      this.botCommandForm = this.fb.group({\n        name: ['', Validators.required ],\n        cmd: ['', Validators.required ],\n        botIds: [null, Validators.compose([Validators.minLength(1), Validators.required])],\n        action: this.fb.group({\n          type: [''],\n        })\n      });\n    }\n\n    onSubmit(): void {\n      this.botCommandModel = this.botCommandForm.value;\n      this.botCommandModel.action = this.botCommandForm.controls['action'].value;\n      this.onSubmitEvent.emit(this.botCommandModel);\n    }\n\n    actionTypes = [\n        {name: 'Выборка SQL', type: 'SQL_SELECT'},\n        {name: 'Выборка SQL в excel файл', type: 'SQL_SELECT_IN_EXCEL_FILE'},\n    ];\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['initial']) {\n            if (this.initial != null) {\n\n              this.botCommandModel = this.initial;\n\n              let id = <FormArray>this.botCommandForm.controls['id']\n              if(id == null){\n                this.botCommandForm.addControl('id', this.fb.control({}));\n              }\n              this.botCommandForm.controls['id'].setValue(this.botCommandModel.id);\n              this.botCommandForm.controls['name'].setValue(this.botCommandModel.name);\n              this.botCommandForm.controls['cmd'].setValue(this.botCommandModel.cmd);\n              this.botCommandForm.controls['botIds'].setValue(this.botCommandModel.botIds);\n              (<FormGroup>this.botCommandForm.controls['action']).controls['type'].setValue(this.botCommandModel.action.type)\n\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.botsSubscription.unsubscribe();\n    }\n\n\n}\n","module.exports = \"<div id=\\\"actionFormDiv\\\" fxLayout=\\\"column\\\" *ngIf=\\\"actionForm\\\" [formGroup]=\\\"actionForm\\\">\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"База данных\\\"\\n                id=\\\"dataBaseId\\\" name=\\\"dataBaseId\\\"\\n                formControlName=\\\"dataBaseId\\\">\\n      <mat-option *ngFor=\\\"let bd of dataBases\\\" [value]=\\\"bd.id\\\">\\n        {{ bd.name }}\\n      </mat-option>\\n    </mat-select>\\n\\n    <mat-error *ngIf=\\\"(actionForm.controls['dataBaseId'].dirty || actionForm.controls['dataBaseId'].touched)\\n                       && actionForm.controls['dataBaseId'].errors && actionForm.controls['dataBaseId'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-codemirror formControlName=\\\"select\\\"\\n                    id=\\\"select\\\" name=\\\"select\\\"\\n                    required\\n                    [options]=\\\"{\\n          theme: 'idea',\\n          mode: 'text/x-sql'\\n        }\\\" placeholder=\\\"Sql select\\\"></mat-codemirror>\\n    <mat-error *ngIf=\\\"(actionForm.controls['select'].dirty || actionForm.controls['select'].touched)\\n                     && actionForm.controls['select'].errors && actionForm.controls['select'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Шаблон ответа\\\"\\n           id=\\\"resultTemplate\\\" name=\\\"resultTemplate\\\"\\n           formControlName=\\\"resultTemplate\\\"/>\\n    <mat-error *ngIf=\\\"(actionForm.controls['resultTemplate'].dirty || actionForm.controls['resultTemplate'].touched)\\n                       && actionForm.controls['resultTemplate'].errors && actionForm.controls['resultTemplate'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n</div>\\n\"","import {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  Input, OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {BotCommandsService} from \"../../services/bot-commands.service\";\nimport DbConnection from \"../../models/DbConnection\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport * as Rx from \"rxjs\";\nimport Action from \"../../models/Action\";\n\n@Component({\n  selector: 'sql-command-form',\n  templateUrl: './sql-command-form.component.html',\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class SqlCommandFormComponent implements OnDestroy, OnChanges {\n\n  @Input() actionModel: Action;\n  @Input() actionForm: FormGroup;\n  private dataBases: DbConnection[];\n  private dataBasesSubscription: Rx.Subscription;\n\n  constructor(private botCommandsService: BotCommandsService,\n              private fb: FormBuilder) {\n\n  this.dataBasesSubscription = this.botCommandsService.dataBasesSubject.subscribe((dataBases) => {\n      this.dataBases = dataBases;\n    });\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['actionForm']) {\n      this.actionForm.addControl('dataBaseId',  this.fb.control('', [Validators.required]));\n      this.actionForm.addControl('select',  this.fb.control('', [Validators.required]));\n      this.actionForm.addControl('resultTemplate',  this.fb.control('', [Validators.required]));\n    }\n    if (changes['actionModel']) {\n      if (this.actionModel != null) {\n        this.actionForm.controls['dataBaseId'].setValue(this.actionModel.dataBaseId);\n        this.actionForm.controls['select'].setValue(this.actionModel.select);\n        this.actionForm.controls['type'].setValue('SQL_SELECT');\n        this.actionForm.controls['resultTemplate'].setValue(this.actionModel.resultTemplate);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.dataBasesSubscription.unsubscribe();\n  }\n\n}\n","module.exports = \"<div id=\\\"actionFormDiv\\\" fxLayout=\\\"column\\\" *ngIf=\\\"actionForm\\\" [formGroup]=\\\"actionForm\\\">\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"База данных\\\"\\n                id=\\\"dataBaseId\\\" name=\\\"dataBaseId\\\"\\n                formControlName=\\\"dataBaseId\\\">\\n      <mat-option *ngFor=\\\"let bd of dataBases\\\" [value]=\\\"bd.id\\\">\\n        {{ bd.name }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"(actionForm.controls['dataBaseId'].dirty || actionForm.controls['dataBaseId'].touched)\\n                       && actionForm.controls['dataBaseId'].errors && actionForm.controls['dataBaseId'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-codemirror formControlName=\\\"select\\\"\\n                    id=\\\"select\\\" name=\\\"select\\\"\\n                    required\\n                    [options]=\\\"{\\n          theme: 'idea',\\n          mode: 'text/x-sql'\\n        }\\\" placeholder=\\\"Sql select\\\"></mat-codemirror>\\n    <mat-error *ngIf=\\\"(actionForm.controls['select'].dirty || actionForm.controls['select'].touched)\\n                     && actionForm.controls['select'].errors && actionForm.controls['select'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Шаблон имени файла\\\"\\n           id=\\\"fileNameTemplate\\\" name=\\\"fileNameTemplate\\\"\\n           formControlName=\\\"fileNameTemplate\\\"/>\\n    <mat-error *ngIf=\\\"(actionForm.controls['fileNameTemplate'].dirty || actionForm.controls['fileNameTemplate'].touched)\\n                       && actionForm.controls['fileNameTemplate'].errors && actionForm.controls['fileNameTemplate'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n</div>\\n\"","import {Component, Input, OnChanges, OnDestroy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {BotCommandsService} from \"../../services/bot-commands.service\";\nimport DbConnection from \"../../models/DbConnection\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport * as Rx from \"rxjs\";\nimport Action from \"../../models/Action\";\n\n@Component({\n    selector: 'sql-in-excel-file-command',\n    templateUrl: './sql-in-excel-file-command.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class SqlInExcelFileCommandComponent implements OnDestroy, OnChanges {\n\n  @Input() actionModel: Action;\n  @Input() actionForm: FormGroup;\n  private dataBases: DbConnection[];\n  private dataBasesSubscription: Rx.Subscription;\n\n  constructor(private botCommandsService: BotCommandsService,\n              private fb: FormBuilder) {\n    this.dataBasesSubscription = this.botCommandsService.dataBasesSubject.subscribe((dataBases) => {\n      this.dataBases = dataBases;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['actionForm']) {\n      this.actionForm.addControl('dataBaseId',  this.fb.control('', [Validators.required]));\n      this.actionForm.addControl('select',  this.fb.control('', [Validators.required]));\n      this.actionForm.addControl('fileNameTemplate',  this.fb.control('', [Validators.required]));\n    }\n    if (changes['actionModel']) {\n      if (this.actionModel != null) {\n        this.actionForm.controls['dataBaseId'].setValue(this.actionModel.dataBaseId);\n        this.actionForm.controls['select'].setValue(this.actionModel.select);\n        this.actionForm.controls['type'].setValue('SQL_SELECT_IN_EXCEL_FILE');\n        this.actionForm.controls['fileNameTemplate'].setValue(this.actionModel.fileNameTemplate);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.dataBasesSubscription.unsubscribe();\n  }\n\n}\n","module.exports = \"<mat-list-item style=\\\"background-color: #fff;\\\">\\n  <span matLine> <span style=\\\"font-size: 18px; font-weight: 600;\\\">{{command.cmd}}</span> - <span>{{command.name}}</span></span>\\n  <button mat-icon-button (click)=\\\"edit()\\\">\\n    <mat-icon aria-label=\\\"Редактировать\\\">edit</mat-icon>\\n  </button>\\n</mat-list-item>\\n<mat-divider></mat-divider>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1jb21tYW5kcy9jb21tYW5kcy9ib3QtY29tbWFuZHMtbGlzdC9ib3QtY29tbWFuZC1pdGVtL2JvdC1jb21tYW5kLWl0ZW0uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport Channel from \"../../../bus/Сhannel\";\nimport BotCommand from \"../../models/BotCommand\";\nimport {MessagingBusService} from \"../../../../core/api\";\n\n\n@Component({\n  selector: 'bot-command-item',\n  templateUrl: './bot-command-item.component.html',\n  styleUrls: ['./bot-command-item.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotCommandItemComponent{\n\n  @Input() command: BotCommand;\n\n  constructor(private messagingBusService: MessagingBusService) {\n\n  }\n\n  edit(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_EDIT_BOT_COMMAND_DIALOG, data:{id: this.command.id}});\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Список команд для ботов</span>\\n      <span fxFlex=\\\"100%\\\"></span>\\n      <span fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"end\\\">\\n        <button mat-button (click)=\\\"add()\\\">\\n          <mat-icon aria-label=\\\"Добавить новую команду\\\">playlist_add</mat-icon>\\n          Добавить новую команду\\n        </button>\\n      </span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-list>\\n    <bot-command-item *ngFor=\\\"let command of commandsList\\\" [command]=\\\"command\\\"></bot-command-item>\\n  </mat-list>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1jb21tYW5kcy9jb21tYW5kcy9ib3QtY29tbWFuZHMtbGlzdC9ib3QtY29tbWFuZHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnDestroy, ViewEncapsulation} from '@angular/core';\n\n\nimport BotCommand from \"../models/BotCommand\";\nimport Channel from \"../../bus/Сhannel\";\nimport {BotCommandsService} from \"../services/bot-commands.service\";\nimport {MessagingBusService} from \"../../../core/api\";\nimport {Subscription} from \"rxjs\";\n\n\n@Component({\n  selector: 'bot-commands-list',\n  templateUrl: './bot-commands-list.component.html',\n  styleUrls: ['./bot-commands-list.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotCommandsListComponent implements OnDestroy{\n\n  private commandsList: BotCommand[];\n  private commandsListSubscription: Subscription;\n\n  constructor(private messagingBusService: MessagingBusService,\n              private botCommandsService: BotCommandsService) {\n\n    this.getBotsList();\n    this.commandsListSubscription = this.messagingBusService.getMessage().subscribe(message => {\n      if(message.channel == Channel.BOT_COMMANDS_WERE_UPDATED){\n        this.getBotsList();\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.commandsListSubscription.unsubscribe();\n  }\n\n  add(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_ADD_BOT_COMMAND_DIALOG});\n  }\n\n  getBotsList(){\n    this.botCommandsService.getAll().subscribe(commands => {\n      this.commandsList = commands;\n    });\n  }\n\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Редактировать: {{command.name}} </h2>\\n  <button mat-icon-button matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content *ngIf=\\\"command\\\">\\n\\n  <mat-slide-toggle\\n          color=\\\"primary\\\"\\n          (change)=\\\"changeCommandState($event)\\\"\\n          [checked]=\\\"command.state == 'ENABLED'\\\">\\n   <span *ngIf=\\\"command.state == 'ENABLED'\\\">Включен</span>\\n   <span *ngIf=\\\"command.state != 'ENABLED'\\\">Выключен</span>\\n  </mat-slide-toggle>\\n\\n  <bot-command-form (onSubmitEvent)=\\\"edit($event)\\\"\\n                      [initial]=\\\"command\\\"\\n                      submitButtonText=\\\"Сохранить изменения\\\">\\n\\n    <div class=\\\"ng-content-bottom-buttons\\\">\\n      <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"delete()\\\">Удалить команду</button>\\n    </div>\\n\\n  </bot-command-form>\\n</mat-dialog-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1jb21tYW5kcy9jb21tYW5kcy9lZGl0LWJvdC1jb21tYW5kL2VkaXQtYm90LWNvbW1hbmQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport BotCommand from \"../models/BotCommand\";\nimport {BotCommandsService} from \"../services/bot-commands.service\";\n\n\n@Component({\n    selector: 'edit-bot-command',\n    templateUrl: './edit-bot-command.component.html',\n    styleUrls: ['./edit-bot-command.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class EditBotCommandComponent {\n\n    private command: BotCommand;\n\n    constructor(public dialogRef: MatDialogRef<EditBotCommandComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any,\n                private botCommandsService: BotCommandsService,\n                private snackBar: MatSnackBar) {\n        this.command = data.command;\n    }\n\n    edit(command: BotCommand): void {\n        this.botCommandsService.update(command)\n            .subscribe(command => {\n                this.snackBar.open(\"Изменения сохранены\", '', {\n                    duration: 3000,\n                    panelClass: 'colorGreen',\n                    horizontalPosition: 'right'\n                });\n            });\n    }\n\n    changeCommandState(changeEvent: any) {\n        if(changeEvent.checked){\n            this.command.state = 'ENABLED';\n        }else{\n            this.command.state = 'DISABLED';\n        }\n    }\n\n    delete() {\n        console.log(\"delete\")\n        this.botCommandsService.delete(this.command.id)\n            .subscribe(command => {\n                this.dialogRef.close();\n                this.snackBar.open(\"Удалено\", '', {\n                    duration: 3000,\n                    panelClass: 'colorGreen',\n                    horizontalPosition: 'right'\n                });\n            });\n    }\n\n    close() {\n        this.dialogRef.close();\n    }\n\n}\n","import Condition from \"./Condition\";\n\nexport default class Action {\n  type: string;\n  select?: string;\n  dataBaseId?: string;\n  resultTemplate?: string;\n  fileNameTemplate?: string;\n  conditions?: Condition[];\n}\n","import Action from \"./Action\";\n\nexport default class BotCommand {\n    id: string;\n    name: string;\n    cmd: string;\n    botIds: string;\n    state: string;\n    action: Action;\n\n    constructor() {\n        this.action = new Action();\n    }\n}\n","import {MatDialog} from \"@angular/material\";\n\nimport {Subscription} from 'rxjs';\nimport Channel from \"../../bus/Сhannel\";\n\n\nimport {BotCommandsService} from \"./bot-commands.service\";\nimport {AddBotCommandComponent} from \"../add-bot-command/add-bot-command.component\";\nimport {EditBotCommandComponent} from \"../edit-bot-command/edit-bot-command.component\";\nimport {MessagingBusService} from \"../../../core/api\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class BotCommandsBus {\n\n  private subscription: Subscription;\n\n\n  constructor(@Inject(MatDialog) public dialog: MatDialog,\n              private messagingBusService: MessagingBusService,\n              private telegramCommandsService: BotCommandsService) {\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n\n      if(message.channel == Channel.OPEN_ADD_BOT_COMMAND_DIALOG){\n        this.openAddDialog();\n      }else if(message.channel == Channel.OPEN_EDIT_BOT_COMMAND_DIALOG){\n          this.openEditDialog(message.data.id);\n      }\n    });\n  }\n\n  openAddDialog(): void {\n    let dialogRef = this.dialog.open(AddBotCommandComponent, {\n      width: '900px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.messagingBusService.sendMessage({channel: Channel.BOT_COMMANDS_WERE_UPDATED})\n    });\n  }\n\n\n  openEditDialog(id:string): void {\n    this.telegramCommandsService.get(id)\n      .subscribe(command => {\n        let dialogRef = this.dialog.open(EditBotCommandComponent, {\n          width: '900px',\n          data:{\n            command: command\n          }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          this.messagingBusService.sendMessage({channel: Channel.BOT_COMMANDS_WERE_UPDATED})\n        });\n\n      });\n  }\n\n}\n","import BotCommand from \"../models/BotCommand\";\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport DbConnection from \"../models/DbConnection\";\nimport Bot from \"../models/Bot\";\nimport Channel from \"../../bus/Сhannel\";\nimport * as Rx from \"rxjs\";\nimport {Observable} from \"rxjs\";\nimport {MessagingBusService} from \"../../../core/api\";\nimport {Config} from \"../../../config\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class BotCommandsService {\n\n  private headers = {headers:new HttpHeaders({'Content-Type': 'application/json'})};\n  private url;\n  private dataBasesUrl;\n  private botsUrl;\n\n  public botsSubject: Rx.BehaviorSubject<Bot[]> = new Rx.BehaviorSubject<Bot[]>(new Array());\n  public dataBasesSubject: Rx.BehaviorSubject<DbConnection[]> = new Rx.BehaviorSubject<DbConnection[]>(new Array());\n\n  private subscription: Rx.Subscription;\n\n  constructor(@Inject(HttpClient) private http: HttpClient,\n              private messagingBusService: MessagingBusService,\n              private config: Config) {\n    this.url = config.api+'/bot-commands/commands';\n    this.dataBasesUrl = config.api+'/db-connections';\n    this.botsUrl = config.api+'/bots';\n\n    this.requestDataBases();\n    this.requestBots();\n\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n        if (message.channel == Channel.BOTS_WERE_UPDATED) {\n            this.requestBots();\n        }else if (message.channel == Channel.DB_CONNECTIONS_WERE_UPDATED) {\n            console.log(\"DB_CONNECTIONS_WERE_UPDATED\")\n            this.requestDataBases();\n        }\n    });\n  }\n\n  requestDataBases(){\n   this.http.get<DbConnection[]>(this.dataBasesUrl, this.headers)\n       .subscribe(dbs => {\n           this.dataBasesSubject.next(dbs);\n   });\n  }\n\n  requestBots() {\n      this.http.get<Bot[]>(this.botsUrl, this.headers)\n          .subscribe(bots => {\n              this.botsSubject.next(bots);\n      });\n  }\n\n\n  add(command:BotCommand): Observable<BotCommand> {\n   return this.http\n      .post<BotCommand>(this.url, command, this.headers);\n  }\n\n  getAll(): Observable<BotCommand[]>{\n    return this.http.get<BotCommand[]>(this.url,this.headers);\n  }\n\n  get(commandId: string): Observable<BotCommand> {\n    return this.http\n      .get<BotCommand>(this.url+`/${commandId}`);\n  }\n\n  delete(commandId: string): Observable<any> {\n    return this.http\n      .delete(this.url+`/${commandId}`);\n  }\n\n  update(command:BotCommand): Observable<BotCommand> {\n    return this.http\n      .put<BotCommand>(this.url+`/${command.id}`, command, this.headers);\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BotTasksListComponent} from \"./tasks/bot-tasks-list/bot-tasks-list.component\";\nimport {MainComponent} from \"../main.component\";\nimport {AuthGuard} from \"../login/auth.guard\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:  MainComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'bot-monitoring', component: BotTasksListComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BotTasksRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {AngularMaterialModule} from \"../angular.material.module\";\n\nimport {BotTasksListComponent} from \"./tasks/bot-tasks-list/bot-tasks-list.component\";\nimport {BotMonitoringTasksService} from \"./tasks/services/bot-monitoring-tasks.service\";\nimport {BotTasksRoutingModule} from \"./bot-monitoring-task-routing.module\";\nimport {BotTaskItemComponent} from \"./tasks/bot-tasks-list/bot-task-item/bot-task-item.component\";\nimport {AddBotTaskComponent} from \"./tasks/add-bot-task/add-bot-task.component\";\nimport {EditBotTaskComponent} from \"./tasks/edit-bot-task/edit-bot-task.component\";\nimport {BotMonitoringTasksBus} from \"./tasks/services/bot-monitoring-tasks.bus\";\nimport {BotTaskFormComponent} from \"./tasks/bot-task-form/bot-task-form.component\";\nimport {SelectOneNumericValueTaskComponent} from \"./tasks/bot-task-form/select-one-numeric-value-task/select-one-numeric-value-task.component\";\nimport {CodemirrorModule} from '@ctrl/ngx-codemirror';\nimport {BotMonitoringTaskConditionItem} from \"./tasks/bot-task-form/bot-monitoring-task-condition-item/bot-monitoring-task-condition-item.component\";\nimport {BotMonitoringTaskNotifyItemComponent} from \"./tasks/bot-task-form/bot-monitoring-task-notify-item/bot-monitoring-task-notify-item.component\";\n\n\n@NgModule({\n    imports: [\n        CodemirrorModule,\n        CommonModule,\n        BotTasksRoutingModule,\n        AngularMaterialModule\n    ],\n    providers: [ BotMonitoringTasksBus,BotMonitoringTasksService],\n    declarations: [\n      AddBotTaskComponent, BotTaskFormComponent,\n      SelectOneNumericValueTaskComponent, EditBotTaskComponent,\n      BotMonitoringTaskConditionItem, BotMonitoringTaskNotifyItemComponent,\n\n  BotTasksListComponent,\n        BotTaskItemComponent,\n    ],\n  entryComponents: [ AddBotTaskComponent, EditBotTaskComponent]\n})\nexport class BotMonitoringTasksModule {\n  constructor(private botTasksBus: BotMonitoringTasksBus){ }\n}\n\n","class Channel{\n    public static BOT_TASKS_WERE_UPDATED = \"BOT_TASKS_WERE_UPDATED\";\n    public static OPEN_ADD_BOT_TASK_DIALOG = \"OPEN_ADD_BOT_TASK_DIALOG\";\n    public static OPEN_EDIT_BOT_TASKS_DIALOG = \"OPEN_EDIT_BOT_TASKS_DIALOG\";\n    public static DB_CONNECTIONS_WERE_UPDATED = \"DB_CONNECTIONS_WERE_UPDATED\";\n    public static BOTS_WERE_UPDATED = \"BOTS_WERE_UPDATED\";\n\n}\n\nexport default Channel;\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Новая задача мониторинга</h2>\\n  <button mat-icon-button matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content>\\n  <bot-task-form (onSubmitEvent)=\\\"add($event)\\\"\\n                      submitButtonText=\\\"Добавить задачу\\\">\\n  </bot-task-form>\\n</mat-dialog-content>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1tb25pdG9yaW5nL3Rhc2tzL2FkZC1ib3QtdGFzay9hZGQtYm90LXRhc2suY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport BotMonitoringTask from \"../models/BotMonitoringTask\";\nimport {BotMonitoringTasksService} from \"../services/bot-monitoring-tasks.service\";\n\n@Component({\n  selector: 'add-bot-task',\n  templateUrl: './add-bot-task.component.html',\n  styleUrls: ['./add-bot-task.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class AddBotTaskComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddBotTaskComponent>,\n              private botTasksService: BotMonitoringTasksService,\n              private snackBar: MatSnackBar ) { }\n\n  add(task: BotMonitoringTask ):void{\n    this.botTasksService.add(task)\n      .subscribe( task => {\n        this.dialogRef.close();\n          this.snackBar.open(\"Задача добавлена\", '', {\n              duration: 3000,\n              panelClass: 'colorGreen',\n              horizontalPosition: 'right'\n          });\n      });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\"  [formGroup]=\\\"condition\\\" >\\n    <mat-card-title>{{getConditionName(condition.controls['type'].value)}}</mat-card-title>\\n    <mat-card-content>\\n        <div fxFlex=\\\"60%\\\">\\n            <input matInput placeholder=\\\"Чем значение\\\"\\n                   id=\\\"expectedValue\\\" name=\\\"expectedValue\\\"\\n                   formControlName=\\\"expectedValue\\\"\\n                   required/>\\n          <mat-error *ngIf=\\\" (condition.controls['expectedValue'].dirty || condition.controls['expectedValue'].touched)\\n                       && condition.controls['expectedValue'].errors && condition.controls['expectedValue'].errors.required\\\">\\n            Необходимое значение\\n          </mat-error>\\n        </div>\\n    </mat-card-content>\\n    <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n        <button type=\\\"submit\\\" mat-button color=\\\"warn\\\" (click)=\\\"submitRemoveMe()\\\">\\n            Убрать проверку\\n        </button>\\n    </mat-card-actions>\\n</mat-card>\\n\"","import {Component, EventEmitter, Input, Output, ViewEncapsulation} from '@angular/core';\nimport Condition from \"../../models/Condition\";\nimport {ControlContainer, FormGroup, NgForm} from \"@angular/forms\";\n\n@Component({\n    selector: 'bot-monitoring-task-condition-item',\n    templateUrl: './bot-monitoring-task-condition-item.component.html',\n    viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotMonitoringTaskConditionItem{\n\n    @Output() removeMeEvent: EventEmitter<number> = new EventEmitter();\n    @Input() condition: FormGroup;\n    @Input() index: number;\n\n    getConditionName(type: string){\n        if(type == 'NUMERIC_MORE_THAN'){\n            return ' Больше чем';\n        }else if(type == 'NUMERIC_LESS_THAN'){\n            return ' Меньше чем';\n        }else if(type == 'NUMERIC_EQUAL'){\n            return ' Равно';\n        }\n    }\n\n    submitRemoveMe(): void {\n        this.removeMeEvent.emit(this.index);\n    }\n\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\" [formGroup]=\\\"notifyForm\\\" >\\n    <mat-card-title>{{getNotifyName(notifyForm.controls['type'].value)}}</mat-card-title>\\n    <mat-card-content>\\n\\n         <mat-form-field  *ngIf=\\\"notifyForm.controls['type'].value == 'SLACK_BOT_API'\\\">\\n            <mat-select placeholder=\\\"Бот API\\\"\\n                        id=\\\"botId\\\" name=\\\"botId\\\"\\n                        formControlName=\\\"botId\\\"\\n                        required>\\n                <mat-option *ngFor=\\\"let bot of slackBots\\\" [value]=\\\"bot.id\\\">\\n                    {{ bot.label }}\\n                </mat-option>\\n            </mat-select>\\n          <mat-error *ngIf=\\\"(notifyForm.controls['botId'].dirty || notifyForm.controls['botId'].touched)\\n                       && notifyForm.controls['botId'].errors && notifyForm.controls['botId'].errors.required\\\">\\n            Необходимое значение\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <div>\\n            <input matInput placeholder=\\\"Шаблон уведомления\\\"\\n                   id=\\\"messageTemplate\\\" name=\\\"messageTemplate\\\"\\n                   formControlName=\\\"messageTemplate\\\"\\n                   required/>\\n          <mat-error *ngIf=\\\"(notifyForm.controls['messageTemplate'].dirty || notifyForm.controls['messageTemplate'].touched)\\n                       && notifyForm.controls['messageTemplate'].errors && notifyForm.controls['messageTemplate'].errors.required\\\">\\n            Необходимое значение\\n          </mat-error>\\n        </div>\\n\\n    </mat-card-content>\\n    <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n        <button type=\\\"submit\\\" mat-button color=\\\"warn\\\" (click)=\\\"submitRemoveMe()\\\">\\n            Убрать уведомление\\n        </button>\\n    </mat-card-actions>\\n</mat-card>\\n\"","import {Component, EventEmitter, Input, OnDestroy, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {BotMonitoringTasksService} from \"../../services/bot-monitoring-tasks.service\";\nimport Notify from \"../../models/Notify\";\nimport Bot from \"../../models/Bot\";\nimport * as Rx from \"rxjs\";\nimport {ControlContainer, FormBuilder, FormGroup, NgForm, Validators} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'bot-monitoring-task-notify-item',\n    templateUrl: './bot-monitoring-task-notify-item.component.html',\n    viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotMonitoringTaskNotifyItemComponent implements OnDestroy{\n\n    private slackBots: Bot[];\n    private slackBotsSubscription: Rx.Subscription;\n\n    @Output() removeMeEvent: EventEmitter<number> = new EventEmitter();\n    @Input() notifyForm: FormGroup;\n    @Input() notifyModel: Notify;\n    @Input() index: number;\n\n    constructor(private botMonitoringTasksService: BotMonitoringTasksService,\n                private fb: FormBuilder) {\n        this.slackBotsSubscription = this.botMonitoringTasksService.slackBotsSubject.subscribe((slackBots)=>{\n            this.slackBots = slackBots;\n        });\n    }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['notifyForm']) {\n      this.notifyForm.addControl('botId',  this.fb.control('', [Validators.required]));\n      this.notifyForm.addControl('messageTemplate',  this.fb.control('', [Validators.required]));\n    }\n    if (changes['notifyModel']) {\n      if (this.notifyModel != null) {\n        this.notifyForm.controls['botId'].setValue(this.notifyModel.botId);\n        this.notifyForm.controls['messageTemplate'].setValue(this.notifyModel.messageTemplate);\n      }\n    }\n  }\n\n    getNotifyName(type: string){\n        if(type == 'SLACK_BOT_API'){\n            return 'Уведомить через Slack';\n        }\n    }\n\n    submitRemoveMe(): void {\n        this.removeMeEvent.emit(this.index);\n    }\n\n    ngOnDestroy() {\n        this.slackBotsSubscription.unsubscribe();\n    }\n}\n","module.exports = \"<form [formGroup]=\\\"botTaskForm\\\" (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\">\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Наименование задачи\\\"\\n           id=\\\"name\\\" name=\\\"name\\\"\\n           formControlName=\\\"name\\\"/>\\n    <mat-error *ngIf=\\\" (botTaskForm.controls['name'].dirty || botTaskForm.controls['name'].touched)\\n                       && botTaskForm.controls['name'].errors && botTaskForm.controls['name'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field [formGroup]=\\\"botTaskForm.controls['cronFrequency']\\\">\\n    <mat-select placeholder=\\\"Периодичность выполнения задания\\\"\\n                id=\\\"cronFrequency\\\" name=\\\"cronFrequency\\\"\\n                formControlName=\\\"type\\\">\\n      <mat-option *ngFor=\\\"let f of cronFrequencies\\\" [value]=\\\"f.frequency\\\">\\n        {{ f.label }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"(botTaskForm.controls['cronFrequency'].dirty || botTaskForm.controls['cronFrequency'].touched)\\n                       && botTaskForm.controls['cronFrequency'].errors && botTaskForm.controls['cronFrequency'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field [formGroup]=\\\"botTaskForm.controls['action']\\\">\\n    <mat-select placeholder=\\\"Тип выполняемой проверки\\\"\\n                id=\\\"type\\\" name=\\\"type\\\"\\n                formControlName=\\\"type\\\">\\n      <mat-option *ngFor=\\\"let t of actionTypes\\\" [value]=\\\"t.type\\\">\\n        {{ t.name }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"(botTaskForm.controls['action'].controls['type'].dirty || botTaskForm.controls['action'].controls['type'].touched)\\n                       && botTaskForm.controls['action'].controls['type'].errors && botTaskForm.controls['action'].controls['type'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <!--Отслеживание единичного значения из базы данных-->\\n  <select-one-numeric-value-task *ngIf=\\\"botTaskForm.controls['action'].value.type == 'SQL_SELECT_ONE_NUMERIC_VALUE'\\\"\\n                                 [actionForm]=\\\"botTaskForm.controls['action']\\\"\\n                                 [actionModel]=\\\"botTaskModel.action\\\"></select-one-numeric-value-task>\\n\\n  <fieldset>\\n    <legend>Выполняемые проверки</legend>\\n    <div>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" [matMenuTriggerFor]=\\\"conditionsTypesMenu\\\">Проверить, что\\n        результат\\n      </button>\\n      <mat-menu #conditionsTypesMenu=\\\"matMenu\\\">\\n        <button type=\\\"button\\\" *ngFor=\\\"let conditionType of conditionsTypes\\\"\\n                (click)=\\\"addCondition(conditionType.type)\\\"\\n                mat-menu-item>{{conditionType.name}}\\n        </button>\\n      </mat-menu>\\n    </div>\\n    <br/>\\n    <bot-monitoring-task-condition-item\\n      *ngFor=\\\"let condition of this.botTaskForm.controls['conditions'].controls; let i = index\\\"\\n      (removeMeEvent)=\\\"dropCondition(i)\\\" [condition]=\\\"condition\\\">\\n    </bot-monitoring-task-condition-item>\\n  </fieldset>\\n\\n  <br/>\\n  <fieldset>\\n    <legend>Действия после проверки</legend>\\n    <div>\\n      <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" [matMenuTriggerFor]=\\\"notifyTypesMenu\\\">\\n        В случае не выполнения условий\\n      </button>\\n      <mat-menu #notifyTypesMenu=\\\"matMenu\\\">\\n        <button type=\\\"button\\\" *ngFor=\\\"let notifyType of notifyTypes\\\" (click)=\\\"addNotify(notifyType.type)\\\"\\n                mat-menu-item>{{notifyType.name}}\\n        </button>\\n      </mat-menu>\\n    </div>\\n    <br/>\\n    <bot-monitoring-task-notify-item\\n      *ngFor=\\\"let notify of botTaskForm.controls['notifyList'].controls; let i = index\\\"\\n      [notifyForm]=\\\"notify\\\"\\n      [notifyModel]=\\\"botTaskModel.notifyList[i]\\\"\\n      (removeMeEvent)=\\\"dropNotify(i)\\\">\\n    </bot-monitoring-task-notify-item>\\n  </fieldset>\\n\\n  <div fxLayout fxFlexAlign=\\\"center\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\n            >{{submitButtonText}}</button>\\n\\n    <ng-content select=\\\".ng-content-bottom-buttons\\\"></ng-content>\\n\\n  </div>\\n\\n</form>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1tb25pdG9yaW5nL3Rhc2tzL2JvdC10YXNrLWZvcm0vYm90LXRhc2stZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport BotMonitoringTask from \"../models/BotMonitoringTask\";\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {BotCommandsService} from \"../../../bot-commands/commands/services/bot-commands.service\";\n\n\n@Component({\n  selector: 'bot-task-form',\n  templateUrl: './bot-task-form.component.html',\n  styleUrls: ['./bot-task-form.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotTaskFormComponent {\n\n  @Output() onSubmitEvent: EventEmitter<BotMonitoringTask> = new EventEmitter();\n  @Input() initial: BotMonitoringTask;\n  @Input() submitButtonText: string;\n\n  private botTaskModel: BotMonitoringTask = new BotMonitoringTask();\n  private botTaskForm: FormGroup;\n\n  onSubmit(): void {\n    this.botTaskModel = this.botTaskForm.value;\n    this.onSubmitEvent.emit(this.botTaskModel);\n  }\n\n  constructor(private botCommandsService: BotCommandsService,\n              private fb: FormBuilder) {\n\n    this.initForm();\n  }\n\n  initForm() {\n    this.botTaskForm = this.fb.group({\n      id: [''],\n      state: [''],\n      name: ['', Validators.required],\n      cronFrequency: this.fb.group({\n        type: ['']\n      }),\n      action: this.fb.group({\n        type: ['']\n      }),\n      conditions: this.fb.array([]),\n      notifyList: this.fb.array([])\n    });\n  }\n\n  actionTypes = [\n    {name: 'Выборка единичного числового значения из базы данных', type: 'SQL_SELECT_ONE_NUMERIC_VALUE'},\n  ];\n\n  cronFrequencies = [\n    {label: 'Каждую минуту', frequency: 'EVERY_1_MINUTE'},\n    {label: 'Каждые 5 минут', frequency: 'EVERY_5_MINUTES'},\n    {label: 'Каждые 15 минут', frequency: 'EVERY_15_MINUTES'},\n    {label: 'Каждый час', frequency: 'EVERY_HOUR'}\n  ];\n\n  notifyTypes = [\n    {name: 'Уведомить через Slack', type: 'SLACK_BOT_API'}\n  ];\n\n  addNotify(type: string) {\n    (<FormArray>this.botTaskForm.controls['notifyList']).push(this.fb.group({\n      type: [type, Validators.required]\n    }))\n  }\n\n  dropNotify(index: number) {\n    if ((<FormArray>this.botTaskForm.controls['notifyList']).length != 0) {\n      (<FormArray>this.botTaskForm.controls['notifyList']).removeAt(index);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['initial']) {\n      if (this.initial != null) {\n        this.botTaskModel = this.initial;\n        this.botTaskForm.controls['id'].setValue(this.botTaskModel.id);\n        this.botTaskForm.controls['name'].setValue(this.botTaskModel.name);\n        this.botTaskForm.controls['state'].setValue(this.botTaskModel.state);\n\n        (<FormGroup>this.botTaskForm.controls['cronFrequency']).controls['type'].setValue(this.botTaskModel.cronFrequency.type);\n        (<FormGroup>this.botTaskForm.controls['action']).controls['type'].setValue(this.botTaskModel.action.type);\n\n        if (Array.isArray(this.botTaskModel.conditions) && this.botTaskModel.conditions.length > 0) {\n          this.botTaskModel.conditions.forEach((c) => {\n            (<FormArray>this.botTaskForm.controls['conditions']).push(this.fb.group({\n              type: [c.type, Validators.required],\n              expectedValue: [c.expectedValue, Validators.required]\n            }))\n          })\n        }\n\n        if (Array.isArray(this.botTaskModel.notifyList) && this.botTaskModel.notifyList.length > 0) {\n          this.botTaskModel.notifyList.forEach((n) => {\n            (<FormArray>this.botTaskForm.controls['notifyList']).push(this.fb.group({\n              type: [n.type, Validators.required],\n              messageTemplate: [n.messageTemplate, Validators.required]\n            }))\n          })\n        }\n\n      }\n    }\n  }\n\n  addCondition(type: string) {\n    (<FormArray>this.botTaskForm.controls['conditions']).push(this.fb.group({\n      type: [type, Validators.required],\n      expectedValue: ['', Validators.required]\n    }))\n  }\n\n  dropCondition(index: number) {\n    if ((<FormArray>this.botTaskForm.controls['conditions']).length != 0) {\n      (<FormArray>this.botTaskForm.controls['conditions']).removeAt(index);\n    }\n  }\n\n  conditionsTypes = [\n    {name: 'Больше чем', type: 'NUMERIC_MORE_THAN'},\n    {name: 'Меньше чем', type: 'NUMERIC_LESS_THAN'},\n    {name: 'Равно', type: 'NUMERIC_EQUAL'},\n  ];\n\n\n}\n","module.exports = \"<div id=\\\"actionFormDiv\\\" fxLayout=\\\"column\\\" *ngIf=\\\"actionForm\\\" [formGroup]=\\\"actionForm\\\">\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Из какой базы данных делаем выборку\\\"\\n                id=\\\"dataBaseId\\\" name=\\\"dataBaseId\\\"\\n                formControlName=\\\"dataBaseId\\\">\\n      <mat-option *ngFor=\\\"let bd of dataBases\\\" [value]=\\\"bd.id\\\">\\n        {{ bd.name }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"(actionForm.controls['dataBaseId'].dirty || actionForm.controls['dataBaseId'].touched)\\n                       && actionForm.controls['dataBaseId'].errors && actionForm.controls['dataBaseId'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-codemirror formControlName=\\\"select\\\"\\n                    id=\\\"select\\\" name=\\\"select\\\"\\n                    required\\n                    [options]=\\\"{\\n          theme: 'idea',\\n          mode: 'text/x-sql'\\n        }\\\" placeholder=\\\"SQL select\\\"></mat-codemirror>\\n    <mat-error *ngIf=\\\"(actionForm.controls['select'].dirty || actionForm.controls['select'].touched)\\n                     && actionForm.controls['select'].errors && actionForm.controls['select'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n</div>\\n\"","import {Component, Input, OnDestroy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport BotMonitoringTask from \"../../models/BotMonitoringTask\";\nimport {BotMonitoringTasksService} from \"../../services/bot-monitoring-tasks.service\";\nimport DbConnection from \"../../models/DbConnection\";\nimport Condition from \"../../models/Condition\";\nimport * as Rx from \"rxjs\";\nimport {ControlContainer, FormArray, FormBuilder, FormGroup, NgForm, Validators} from \"@angular/forms\";\nimport Action from \"../../../../bot-commands/commands/models/Action\";\nimport {BotCommandsService} from \"../../../../bot-commands/commands/services/bot-commands.service\";\n\n@Component({\n  selector: 'select-one-numeric-value-task',\n  templateUrl: './select-one-numeric-value-task.component.html',\n  viewProviders: [{provide: ControlContainer, useExisting: NgForm}],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class SelectOneNumericValueTaskComponent implements OnDestroy {\n\n  @Input() actionForm: FormGroup;\n  @Input() actionModel: Action;\n\n  private dataBases: DbConnection[];\n  private dataBasesSubscription: Rx.Subscription;\n\n  constructor(private botTasksService: BotMonitoringTasksService,\n              private fb: FormBuilder) {\n    this.dataBasesSubscription = this.botTasksService.dataBasesSubject.subscribe((dataBases) => {\n      this.dataBases = dataBases;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['actionForm']) {\n      this.actionForm.addControl('dataBaseId',  this.fb.control('', [Validators.required]));\n      this.actionForm.addControl('select',  this.fb.control('', [Validators.required]));\n    }\n    if (changes['actionModel']) {\n      if (this.actionModel != null) {\n        this.actionForm.controls['dataBaseId'].setValue(this.actionModel.dataBaseId);\n        this.actionForm.controls['select'].setValue(this.actionModel.select);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.dataBasesSubscription.unsubscribe();\n  }\n}\n","module.exports = \"<mat-list-item style=\\\"background-color: #fff;\\\">\\n  <span matLine><span>{{task.name}}</span></span>\\n  <button mat-icon-button (click)=\\\"edit()\\\">\\n    <mat-icon aria-label=\\\"Редактировать\\\">edit</mat-icon>\\n  </button>\\n</mat-list-item>\\n<mat-divider></mat-divider>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1tb25pdG9yaW5nL3Rhc2tzL2JvdC10YXNrcy1saXN0L2JvdC10YXNrLWl0ZW0vYm90LXRhc2staXRlbS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport Channel from \"../../../bus/Сhannel\";\nimport BotMonitoringTask from \"../../models/BotMonitoringTask\";\nimport {MessagingBusService} from \"../../../../core/api\";\n\n\n@Component({\n  selector: 'bot-task-item',\n  templateUrl: './bot-task-item.component.html',\n  styleUrls: ['./bot-task-item.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotTaskItemComponent{\n\n  @Input() task: BotMonitoringTask;\n\n  constructor(private messagingBusService: MessagingBusService) {\n\n  }\n\n  edit(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_EDIT_BOT_TASKS_DIALOG, data:{id: this.task.id}});\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Задачи мониторинга</span>\\n      <span fxFlex=\\\"100%\\\"></span>\\n      <span fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"end\\\">\\n        <button mat-button (click)=\\\"add()\\\">\\n          <mat-icon aria-label=\\\"Добавить новую задачу\\\">playlist_add</mat-icon>\\n          Добавить новую задачу\\n        </button>\\n      </span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-list>\\n    <bot-task-item *ngFor=\\\"let task of tasksList\\\" [task]=\\\"task\\\"></bot-task-item>\\n  </mat-list>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1tb25pdG9yaW5nL3Rhc2tzL2JvdC10YXNrcy1saXN0L2JvdC10YXNrcy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnDestroy, ViewEncapsulation} from '@angular/core';\n\nimport {Subscription} from \"rxjs\";\n\n\nimport BotMonitoringTask from \"../models/BotMonitoringTask\";\nimport Channel from \"../../bus/Сhannel\";\nimport {BotMonitoringTasksService} from \"../services/bot-monitoring-tasks.service\";\nimport {MessagingBusService} from \"../../../core/api\";\n\n\n@Component({\n  selector: 'bot-tasks-list',\n  templateUrl: './bot-tasks-list.component.html',\n  styleUrls: ['./bot-tasks-list.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotTasksListComponent implements OnDestroy{\n\n  private tasksList: BotMonitoringTask[];\n  private commandsListSubscription: Subscription;\n\n  constructor(private messagingBusService: MessagingBusService,\n              private botTasksService: BotMonitoringTasksService) {\n\n    this.getBotsList();\n    this.commandsListSubscription = this.messagingBusService.getMessage().subscribe(message => {\n      if(message.channel == Channel.BOT_TASKS_WERE_UPDATED){\n        this.getBotsList();\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.commandsListSubscription.unsubscribe();\n  }\n\n  add(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_ADD_BOT_TASK_DIALOG});\n  }\n\n  getBotsList(){\n    this.botTasksService.getAll().subscribe(commands => {\n      this.tasksList = commands;\n    });\n  }\n\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Редактировать: {{task.name}} </h2>\\n  <button mat-icon-button  matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content *ngIf=\\\"task\\\">\\n\\n  <mat-slide-toggle\\n          color=\\\"primary\\\"\\n          (change)=\\\"changeCommandState($event)\\\"\\n          [checked]=\\\"task.state == 'ENABLED'\\\">\\n<!--   <span *ngIf=\\\"task.state == 'ENABLED'\\\">Включен</span>\\n   <span *ngIf=\\\"task.state != 'ENABLED'\\\">Выключен</span>-->\\n  </mat-slide-toggle>\\n\\n  <bot-task-form (onSubmitEvent)=\\\"edit($event)\\\"\\n                      [initial]=\\\"task\\\"\\n                      submitButtonText=\\\"Сохранить изменения\\\">\\n    <div class=\\\"ng-content-bottom-buttons\\\">\\n      <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"delete()\\\">Удалить задачу</button>\\n    </div>\\n  </bot-task-form>\\n</mat-dialog-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvdC1tb25pdG9yaW5nL3Rhc2tzL2VkaXQtYm90LXRhc2svZWRpdC1ib3QtdGFzay5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport BotTask from \"../models/BotMonitoringTask\";\nimport {BotMonitoringTasksService} from \"../services/bot-monitoring-tasks.service\";\n\n\n@Component({\n    selector: 'edit-bot-task',\n    templateUrl: './edit-bot-task.component.html',\n    styleUrls: ['./edit-bot-task.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class EditBotTaskComponent {\n\n    private task: BotTask;\n\n    constructor(public dialogRef: MatDialogRef<EditBotTaskComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any,\n                private botTasksService: BotMonitoringTasksService,\n                private snackBar: MatSnackBar) {\n        this.task = data.task;\n    }\n\n    edit(task: BotTask): void {\n        this.botTasksService.update(task)\n            .subscribe(task => {\n                this.snackBar.open(\"Изменения сохранены\", '', {\n                    duration: 3000,\n                    panelClass: 'colorGreen',\n                    horizontalPosition: 'right'\n                });\n            });\n    }\n\n    changeCommandState(changeEvent: any) {\n        if(changeEvent.checked){\n            this.task.state = 'ENABLED';\n        }else{\n            this.task.state = 'DISABLED';\n        }\n    }\n\n    delete() {\n        console.log(\"delete\")\n        this.botTasksService.delete(this.task.id)\n            .subscribe(task => {\n                this.dialogRef.close();\n                this.snackBar.open(\"Удалено\", '', {\n                    duration: 3000,\n                    panelClass: 'colorGreen',\n                    horizontalPosition: 'right'\n                });\n            });\n    }\n\n    close() {\n        this.dialogRef.close();\n    }\n\n}\n","import Action from \"./Action\";\nimport CronFrequency from \"./Cron\";\nimport Notify from \"./Notify\";\nimport Condition from \"./Condition\";\n\nexport default class BotMonitoringTask {\n  id: string;\n  name: string;\n  state: string;\n  action: Action;\n  cronFrequency: CronFrequency;\n  conditions: Condition[] = [];\n  notifyList: Notify[] = [];\n}\n\n","export default class Notify{\n  type: string;\n  botId?: string;\n  messageTemplate?: string;\n  constructor(type: string) {\n     this.type = type;\n  }\n}\n","import {MatDialog} from \"@angular/material\";\n\nimport {Subscription} from 'rxjs';\nimport Channel from \"../../bus/Сhannel\";\n\n\nimport {BotMonitoringTasksService} from \"./bot-monitoring-tasks.service\";\nimport {AddBotTaskComponent} from \"../add-bot-task/add-bot-task.component\";\nimport {EditBotTaskComponent} from \"../edit-bot-task/edit-bot-task.component\";\nimport {MessagingBusService} from \"../../../core/api\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class BotMonitoringTasksBus {\n\n  private subscription: Subscription;\n\n\n  constructor(@Inject(MatDialog) public dialog: MatDialog,\n              private messagingBusService: MessagingBusService,\n              private botTasksService: BotMonitoringTasksService) {\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n\n      if(message.channel == Channel.OPEN_ADD_BOT_TASK_DIALOG){\n        this.openAddDialog();\n      }else if(message.channel == Channel.OPEN_EDIT_BOT_TASKS_DIALOG){\n          this.openEditDialog(message.data.id);\n      }\n    });\n  }\n\n  openAddDialog(): void {\n    let dialogRef = this.dialog.open(AddBotTaskComponent, {\n      width: '1000px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.messagingBusService.sendMessage({channel: Channel.BOT_TASKS_WERE_UPDATED})\n    });\n  }\n\n\n  openEditDialog(id:string): void {\n    this.botTasksService.get(id)\n      .subscribe(task => {\n        let dialogRef = this.dialog.open(EditBotTaskComponent, {\n          width: '1000px',\n          data:{\n              task: task\n          }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          this.messagingBusService.sendMessage({channel: Channel.BOT_TASKS_WERE_UPDATED})\n        });\n\n      });\n  }\n\n}\n","import BotMonitoringTask from \"../models/BotMonitoringTask\";\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport DbConnection from \"../models/DbConnection\";\nimport Bot from \"../models/Bot\";\nimport Channel from \"../../bus/Сhannel\";\nimport * as Rx from \"rxjs\";\nimport {Config} from \"../../../config\";\nimport {MessagingBusService} from \"../../../core/api\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class BotMonitoringTasksService {\n\n  private headers = {headers:new HttpHeaders({'Content-Type': 'application/json'})};\n  private url;\n  private dataBasesUrl;\n  private botsUrl;\n\n  public botsSubject: Rx.BehaviorSubject<Bot[]> = new Rx.BehaviorSubject<Bot[]>(new Array());\n  public slackBotsSubject: Rx.BehaviorSubject<Bot[]> = new Rx.BehaviorSubject<Bot[]>(new Array());\n  public dataBasesSubject: Rx.BehaviorSubject<DbConnection[]> = new Rx.BehaviorSubject<DbConnection[]>(new Array());\n\n  private subscription: Rx.Subscription;\n\n  constructor(@Inject(HttpClient) private http: HttpClient,\n              private messagingBusService: MessagingBusService,\n              private config: Config) {\n    this.url = config.api+'/bot-monitoring/tasks';\n    this.dataBasesUrl = config.api+'/db-connections';\n    this.botsUrl = config.api+'/bots';\n\n    this.requestDataBases();\n    this.requestBots();\n\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n        if (message.channel == Channel.BOTS_WERE_UPDATED) {\n            this.requestBots();\n        }else if (message.channel == Channel.DB_CONNECTIONS_WERE_UPDATED) {\n            this.requestDataBases();\n        }\n    });\n  }\n\n  requestDataBases(){\n   this.http.get<DbConnection[]>(this.dataBasesUrl, this.headers)\n       .subscribe(dbs => {\n           this.dataBasesSubject.next(dbs);\n   });\n  }\n\n  requestBots() {\n      this.http.get<Bot[]>(this.botsUrl, this.headers)\n          .subscribe(bots => {\n              this.botsSubject.next(bots);\n              this.slackBotsSubject.next(\n                  bots.filter(function (b) {return b.type == 'SLACK_BOT'})\n              );\n      });\n  }\n\n\n  add(command:BotMonitoringTask): Rx.Observable<BotMonitoringTask> {\n   return this.http\n      .post<BotMonitoringTask>(this.url, command, this.headers);\n  }\n\n  getAll(): Rx.Observable<BotMonitoringTask[]>{\n    return this.http.get<BotMonitoringTask[]>(this.url,this.headers);\n  }\n\n  get(commandId: string): Rx.Observable<BotMonitoringTask> {\n    return this.http\n      .get<BotMonitoringTask>(this.url+`/${commandId}`);\n  }\n\n  delete(commandId: string): Rx.Observable<any> {\n    return this.http\n      .delete(this.url+`/${commandId}`);\n  }\n\n  update(command:BotMonitoringTask): Rx.Observable<BotMonitoringTask> {\n    return this.http\n      .put<BotMonitoringTask>(this.url+`/${command.id}`, command, this.headers);\n  }\n\n\n}\n","import {Injectable} from \"@angular/core\";\n\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Config{\n  api: string;\n  root: string;\n  constructor(){\n    if (environment.production) {\n      this.root = '';\n      this.api = '/api';\n    }else{\n      this.root = 'http://localhost:8080';\n      this.api = 'http://localhost:8080/api';\n    }\n  }\n}\n\n","export class Message {\n  channel: string;\n  data?: any;\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MessagingBusService} from \"./messaging-bus.service\";\n\nexport * from './messaging-bus.service';\nexport {Message} from './Message';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MessagingBusService\n  ],\n  exports: [\n    MessagingBusService\n  ]\n})\nexport class UiCoreModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: UiCoreModule,\n      providers: [MessagingBusService]\n    };\n  }\n}\n","import {Observable, Subject} from \"rxjs\";\n\n\nexport interface Message {\n  channel: string;\n  data?: any;\n}\n\n\nexport class MessagingBusService {\n\n  private message$: Subject<Message>;\n\n  constructor(){\n    this.message$ = new Subject<Message>();\n  }\n\n  sendMessage(message: Message) {\n    this.message$.next(message);\n  }\n\n  getMessage(): Observable<any> {\n    return this.message$.asObservable();\n  }\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Новый API бот</h2>\\n  <button mat-icon-button matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content>\\n  <bot-form (onSubmitEvent)=\\\"addBot($event)\\\"\\n                      submitButtonText=\\\"Добавить\\\">\\n  </bot-form>\\n</mat-dialog-content>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvYm90cy9hZGQtYm90L2FkZC1ib3QuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport {BotsService} from \"../services/bots.service\";\nimport Bot from \"../models/Bot\";\n\n@Component({\n  selector: 'add-bot-connection',\n  templateUrl: './add-bot.component.html',\n  styleUrls: ['./add-bot.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class AddBotComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddBotComponent>,\n              private botsService: BotsService,\n              private snackBar: MatSnackBar ) { }\n\n  addBot(bot: Bot ):void{\n    this.botsService.add(bot)\n      .subscribe( bot => {\n        this.dialogRef.close();\n        this.snackBar.open(\"API бот добавлен\",'',{\n          duration: 3000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n      });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Список пользователей бота</h2>\\n  <button mat-icon-button (click)=\\\"close()\\\" matTooltip=\\\"Закрыть окно\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close\\n    </mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content style=\\\"padding: 5px; background-color: #f1f1f1;\\\"\\n                    *ngIf=\\\"joinRequests\\\">\\n\\n    <div style=\\\"margin: 5px;\\\" *ngFor=\\\"let join of joinRequests\\\" >\\n      <mat-card class=\\\"card\\\">\\n        <mat-card-header>\\n          <mat-icon style=\\\"font-size: 40px;\\\" mat-card-avatar>account_circle</mat-icon>\\n          <mat-card-title>{{join.firstName}} {{join.lastName}}</mat-card-title>\\n          <mat-card-subtitle>\\n             accountId: {{join.accountId}}\\n             <span style=\\\"color: blueviolet;\\\" *ngIf=\\\"join.state == 'IS_AWAITING_APPROVAL'\\\">, ОЖИДАЕТ ПОДТВЕРЖДЕНИЯ</span>\\n             <span style=\\\"color: green;\\\" *ngIf=\\\"join.state == 'APPROVED'\\\">, ОДОБРЕН</span>\\n          </mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-actions>\\n          <span fxFlex=\\\"100%\\\"></span>\\n          <button mat-raised-button color=\\\"primary\\\"\\n                  *ngIf=\\\"join.state == 'IS_AWAITING_APPROVAL'\\\" fxFlex=\\\"25%\\\" (click)=\\\"accept(join.id)\\\">Принять</button>\\n          <button mat-raised-button color=\\\"warn\\\"\\n                  *ngIf=\\\"join.state == 'IS_AWAITING_APPROVAL'\\\" fxFlex=\\\"25%\\\" (click)=\\\"denied(join.id)\\\">Отказать</button>\\n          <button mat-raised-button color=\\\"warn\\\"\\n                  *ngIf=\\\"join.state == 'APPROVED'\\\" fxFlex=\\\"25%\\\" (click)=\\\"denied(join.id)\\\">Отменить</button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </div>\\n\\n</mat-dialog-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvYm90cy9ib3QtYWNjZXNzLWxpc3QvYm90LWFjY2Vzcy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport {BotsService} from \"../services/bots.service\";\nimport JoinRequest from \"../models/JoinRequest\";\n\n@Component({\n  selector: 'bot-access-list',\n  templateUrl: './bot-access-list.component.html',\n  styleUrls: ['./bot-access-list.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotAccessListComponent {\n\n  private botId: string;\n  private joinRequests: JoinRequest[];\n\n  constructor(public dialogRef: MatDialogRef<BotAccessListComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private botsService: BotsService,\n              private snackBar: MatSnackBar) {\n    this.botId = data.botId;\n    this.refreshBot();\n  }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n\n  accept(joinId: string) {\n    this.botsService.accept(this.botId, joinId)\n      .subscribe(res => {\n        this.snackBar.open(\"Пользователь одобрен\", '', {\n          duration: 3000,\n          panelClass: 'colorGreen',\n          horizontalPosition: 'right'\n        });\n        this.refreshBot();\n      });\n  }\n\n  denied(joinId: string) {\n    this.botsService.denied(this.botId, joinId)\n      .subscribe(res => {\n        this.snackBar.open(\"Пользователь отклонен\", '', {\n          duration: 3000,\n          panelClass: 'colorGreen',\n          horizontalPosition: 'right'\n        });\n        this.refreshBot();\n      });\n  }\n\n  refreshBot(){\n    this.botsService.get(this.botId)\n      .subscribe(bot => {\n        this.joinRequests = bot.joinRequests;\n      });\n  }\n\n}\n","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #botForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Наименование бота\\\"\\n           id=\\\"label\\\" name=\\\"label\\\"\\n           [(ngModel)]=\\\"bot.label\\\"\\n           required\\n           #label=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"label.errors && (label.dirty || label.touched) && label.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Тип бот API\\\"\\n                id=\\\"type\\\" name=\\\"type\\\"\\n                [(ngModel)]=\\\"bot.type\\\"\\n                required #type=\\\"ngModel\\\">\\n      <mat-option *ngFor=\\\"let t of botTypes\\\" [value]=\\\"t.type\\\">\\n        {{ t.name }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"type.errors && (type.dirty || type.touched) && type.errors.required\\\">Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <telegram-bot-form *ngIf=\\\"bot.type == 'TELEGRAM_BOT'\\\"\\n                             [bot]=\\\"bot\\\"></telegram-bot-form>\\n\\n  <slack-bot-form *ngIf=\\\"bot.type == 'SLACK_BOT'\\\"\\n                               [bot]=\\\"bot\\\"></slack-bot-form>\\n\\n  <div fxLayout fxFlexAlign=\\\"center\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\n              [disabled]=\\\"!botForm.form.valid\\\">{{submitButtonText}}</button>\\n    <ng-content select=\\\".ng-content-bottom-buttons\\\"></ng-content>\\n\\n  </div>\\n\\n</form>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvYm90cy9ib3QtZm9ybS9ib3QtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport Bot from \"../models/Bot\";\nimport BotType from \"../models/BotType\";\nimport {BotsService} from \"../services/bots.service\";\nimport {MatSnackBar} from \"@angular/material\";\n\n\n@Component({\n  selector: 'bot-form',\n  templateUrl: './bot-form.component.html',\n  styleUrls: ['./bot-form.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotFormComponent {\n\n  @Output() onSubmitEvent: EventEmitter<Bot> = new EventEmitter();\n  @Input()  initial: Bot;\n  @Input()  submitButtonText: string;\n\n  private bot: Bot = new Bot();\n  private botTypes: BotType[];\n\n  constructor(private botsService: BotsService,\n              private snackBar: MatSnackBar) {\n    this.botsService.getBotTypes().subscribe(botTypes => {\n      this.botTypes = botTypes;\n    });\n  }\n\n  onSubmit(): void {\n    this.onSubmitEvent.emit(this.bot);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['initial']) {\n      if (this.initial != null && this.initial != undefined) {\n        this.bot = this.initial;\n      }\n    }\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Токен из xoxb**\\\"\\n           id=\\\"token\\\" name=\\\"token\\\"\\n           [(ngModel)]=\\\"bot.token\\\"\\n           required\\n           #token=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"token.errors && (token.dirty || token.touched) && token.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Прослушиваемый канал\\\"\\n           id=\\\"channel\\\" name=\\\"channel\\\"\\n           [(ngModel)]=\\\"bot.channel\\\"\\n           required\\n           #channel=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"channel.errors && (channel.dirty || channel.touched) && channel.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n</div>\\n\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport SlackBot from \"../../models/SlackBot\";\nimport {ControlContainer, NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'slack-bot-form',\n  templateUrl: './slack-bot-form.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class SlackBotFormComponent {\n  @Input() bot: SlackBot;\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Название в @BotFather\\\"\\n           id=\\\"name\\\" name=\\\"name\\\"\\n           [(ngModel)]=\\\"bot.name\\\"\\n           required\\n           #name=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"name.errors && (name.dirty || name.touched) && name.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Токен из @BotFather\\\"\\n           id=\\\"token\\\" name=\\\"token\\\"\\n           [(ngModel)]=\\\"bot.token\\\"\\n           required\\n           #token=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"token.errors && (token.dirty || token.touched) && token.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n</div>\\n\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport TelegramBot from \"../../models/TelegramBot\";\nimport {ControlContainer, NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'telegram-bot-form',\n  templateUrl: './telegram-bot-form.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class TelegramBotFormComponent {\n  @Input() bot: TelegramBot;\n}\n","module.exports = \"<mat-list-item style=\\\"background-color: #fff;\\\">\\n  <span matLine> <b>{{bot.label}}</b></span>\\n  <button mat-icon-button (click)=\\\"accessList()\\\">\\n    <mat-icon aria-label=\\\"Список пользователе\\\">account_box</mat-icon>\\n    <span class=\\\"accessLabel\\\"\\n          *ngIf=\\\"awaitingRequests > '0'\\\">{{awaitingRequests}}</span>\\n  </button>\\n  <button mat-icon-button (click)=\\\"edit()\\\">\\n    <mat-icon aria-label=\\\"Редактировать\\\">edit</mat-icon>\\n  </button>\\n</mat-list-item>\\n<mat-divider></mat-divider>\\n\"","module.exports = \".padding0 {\\n  padding: 0 !important; }\\n\\nmat-card-title {\\n  margin: 0 0 0 16px; }\\n\\n.accessLabel {\\n  position: relative;\\n  right: 7px;\\n  color: red;\\n  font-size: 21px;\\n  top: 6px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGVrc2FuZHJzZXJkdWtvdi9wcm9qZWN0cy9zdXBwb3J0LXRlcm1pbmFsLWRldi9zdXBwb3J0LXRlcm1pbmFsL3VpL3NyYy9hcHAvY29yZS9ib3RzL2JvdHMtbGlzdC9ib3QtaXRlbS9ib3QtaXRlbS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFvQixFQUFBOztBQUd0QjtFQUNFLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsVUFBVTtFQUNWLGVBQWU7RUFDZixRQUFRLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb3JlL2JvdHMvYm90cy1saXN0L2JvdC1pdGVtL2JvdC1pdGVtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZGRpbmcwe1xuICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbn1cblxubWF0LWNhcmQtdGl0bGV7XG4gIG1hcmdpbjogMCAwIDAgMTZweDtcbn1cblxuLmFjY2Vzc0xhYmVse1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHJpZ2h0OiA3cHg7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMjFweDtcbiAgdG9wOiA2cHg7XG59XG4iXX0= */\"","import {Component, Input, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport Bot from \"../../models/Bot\";\n\nimport Channel from \"../../../bus/Сhannel\";\nimport {MessagingBusService} from \"../../../api\";\n\n\n@Component({\n  selector: 'bot-item',\n  templateUrl: './bot-item.component.html',\n  styleUrls: ['./bot-item.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotItemComponent{\n\n  @Input() bot: Bot;\n  awaitingRequests: number = 0;\n\n  constructor(private messagingBusService: MessagingBusService) {\n\n  }\n\n  edit(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_EDIT_BOT_DIALOG, data:{botId: this.bot.id}});\n  }\n\n  accessList(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_BOT_ACCESS_LIST_DIALOG, data:{botId: this.bot.id}});\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['bot']) {\n      if(this.bot != null && this.bot != undefined){\n        this.bot.joinRequests.forEach((v)=>{\n          if(v.state == 'IS_AWAITING_APPROVAL'){\n            this.awaitingRequests++;\n          }\n        });\n      }\n    }\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Список ботов</span>\\n      <span fxFlex=\\\"100%\\\"></span>\\n      <span fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"end\\\">\\n        <button mat-button (click)=\\\"add()\\\">\\n          <mat-icon aria-label=\\\"Добавить нового бота\\\">playlist_add</mat-icon>\\n           Добавить нового бота\\n        </button>\\n      </span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-list>\\n    <bot-item *ngFor=\\\"let bot of botsList\\\" [bot]=\\\"bot\\\"></bot-item>\\n  </mat-list>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvYm90cy9ib3RzLWxpc3QvYm90cy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnDestroy, ViewEncapsulation} from '@angular/core';\n\nimport {Subscription} from \"rxjs\";\n\n\nimport Bot from \"../models/Bot\";\nimport Channel from \"../../bus/Сhannel\";\nimport {BotsService} from \"../services/bots.service\";\nimport {MessagingBusService} from \"../../api\";\n\n\n@Component({\n  selector: 'bots-list',\n  templateUrl: './bots-list.component.html',\n  styleUrls: ['./bots-list.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class BotsListComponent implements OnDestroy{\n\n  private botsList: Bot[] = new Array();\n  private botsListSubscription: Subscription;\n\n  constructor(private messagingBusService: MessagingBusService,\n              private telegramBotsService: BotsService) {\n\n    this.getBotsList();\n    this.botsListSubscription = this.messagingBusService.getMessage().subscribe(message => {\n      if(message.channel == Channel.BOTS_WERE_UPDATED){\n        this.getBotsList();\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.botsListSubscription.unsubscribe();\n  }\n\n  add(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_ADD_BOT_DIALOG});\n  }\n\n  getBotsList(){\n    this.telegramBotsService.getAll().subscribe(bots => {\n      this.botsList = bots;\n    });\n  }\n\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Редактировать: {{bot.name}} </h2>\\n  <button mat-icon-button matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content *ngIf=\\\"bot\\\">\\n\\n  <mat-slide-toggle\\n    color=\\\"primary\\\"\\n    (change)=\\\"changeCommandState($event)\\\"\\n    [checked]=\\\"bot.state == 'ENABLED'\\\">\\n    <span *ngIf=\\\"bot.state == 'ENABLED'\\\">Включен</span>\\n    <span *ngIf=\\\"bot.state != 'ENABLED'\\\">Выключен</span>\\n  </mat-slide-toggle>\\n\\n  <bot-form (onSubmitEvent)=\\\"edit($event)\\\"\\n                      [initial]=\\\"bot\\\"\\n                      submitButtonText=\\\"Сохранить изменения\\\">\\n\\n    <div class=\\\"ng-content-bottom-buttons\\\">\\n      <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"delete()\\\">Удалить бота</button>\\n    </div>\\n\\n  </bot-form>\\n</mat-dialog-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvYm90cy9lZGl0LWJvdC9lZGl0LWJvdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from \"@angular/material\";\n\nimport Bot from '../models/Bot';\nimport {BotsService} from \"../services/bots.service\";\n\n@Component({\n  selector: 'edit-bot',\n  templateUrl: './edit-bot.component.html',\n  styleUrls: ['./edit-bot.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class EditBotComponent {\n\n  private bot: Bot;\n  constructor(public dialogRef: MatDialogRef<EditBotComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private botsService: BotsService,\n              private snackBar: MatSnackBar) {\n       this.bot = data.bot;\n  }\n\n  edit(bot: Bot ):void{\n    this.botsService.update(bot)\n      .subscribe( bot => {\n        this.snackBar.open(\"Изменения сохранены\",'',{\n          duration: 3000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n      });\n  }\n\n  delete(){\n    this.botsService.delete(this.bot.id)\n      .subscribe( db => {\n      this.dialogRef.close();\n        this.snackBar.open(\"Бот удален\",'',{\n          duration: 3000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n    });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n  changeCommandState(changeEvent: any) {\n    if(changeEvent.checked){\n      this.bot.state = 'ENABLED';\n    }else{\n      this.bot.state = 'DISABLED';\n    }\n  }\n\n}\n","import JoinRequest from \"./JoinRequest\";\n\nexport default class Bot {\n  id: string;\n  label: string;\n  state: string;\n  joinRequests: JoinRequest[];\n}\n","import Bot from \"./Bot\";\n\nexport default class SlackBot extends Bot{\n  name: string;\n  token: string;\n}\n","import Bot from \"./Bot\";\n\nexport default class TelegramBot extends Bot{\n  name: string;\n  token: string;\n}\n","import {MatDialog} from \"@angular/material\";\n\nimport {Subscription} from 'rxjs';\nimport Channel from \"../../bus/Сhannel\";\n\n\nimport {BotsService} from \"./bots.service\";\nimport {AddBotComponent} from \"../add-bot/add-bot.component\";\nimport {EditBotComponent} from \"../edit-bot/edit-bot.component\";\nimport {BotAccessListComponent} from \"../bot-access-list/bot-access-list.component\";\nimport {MessagingBusService} from \"../../api\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class BotsBus {\n\n  subscription: Subscription;\n\n  constructor(@Inject(MatDialog) public dialog: MatDialog,\n              private messagingBusService: MessagingBusService,\n              private botsService: BotsService) {\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n\n      if(message.channel == Channel.OPEN_ADD_BOT_DIALOG){\n        this.openAddBotDialog();\n      }else if(message.channel == Channel.OPEN_EDIT_BOT_DIALOG){\n          this.openEditBotDialog(message.data.botId);\n      }else if(message.channel == Channel.OPEN_BOT_ACCESS_LIST_DIALOG){\n          this.openAccessListDialog(message.data.botId);\n      }\n\n    });\n  }\n\n  openAddBotDialog(): void {\n    let dialogRef = this.dialog.open(AddBotComponent, {\n      width: '700px',\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.messagingBusService.sendMessage({channel: Channel.BOTS_WERE_UPDATED})\n    });\n  }\n\n\n  openEditBotDialog(botId:string): void {\n    this.botsService.get(botId)\n      .subscribe(bot => {\n        let dialogRef = this.dialog.open(EditBotComponent, {\n          width: '700px',\n          data:{bot: bot}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          this.messagingBusService.sendMessage({channel: Channel.BOTS_WERE_UPDATED})\n        });\n\n      });\n  }\n\n  openAccessListDialog(botId:string): void {\n    this.botsService.get(botId)\n      .subscribe(bot => {\n        let dialogRef = this.dialog.open(BotAccessListComponent, {\n          width: '600px',\n          data:{botId: bot.id}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          this.messagingBusService.sendMessage({channel: Channel.BOTS_WERE_UPDATED})\n        });\n\n      });\n  }\n\n\n}\n","import Bot from \"../models/Bot\";\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\n\nimport BotType from \"../models/BotType\";\nimport {Config} from \"../../../config\";\nimport {Inject} from \"@angular/core\";\nimport {MatDialog} from \"@angular/material\";\n\n\nexport class BotsService {\n\n  private headers = {headers:new HttpHeaders({'Content-Type': 'application/json'})};\n  private url;\n\n  constructor(@Inject(HttpClient) private http: HttpClient,\n              private config: Config) {\n    this.url = config.api+'/bots';\n  }\n\n  add(bot:Bot): Observable<Bot> {\n   return this.http\n      .post<Bot>(this.url, bot, this.headers);\n  }\n\n  getAll(): Observable<Bot[]>{\n    return this.http.get<Bot[]>(this.url,this.headers);\n  }\n\n  get(botId: string): Observable<Bot> {\n    return this.http\n      .get<Bot>(this.url+`/${botId}`);\n  }\n\n  delete(botId: string): Observable<any> {\n    return this.http\n      .delete(this.url+`/${botId}`);\n  }\n\n  update(bot:Bot): Observable<Bot> {\n    return this.http\n      .put<Bot>(this.url+`/${bot.id}`, bot, this.headers);\n  }\n\n  denied(botId:string, joinId:string): Observable<any> {\n    return this.http\n      .put(this.url+`/${botId}/join/${joinId}/denied`, {},this.headers);\n  }\n\n  accept(botId:string, joinId:string): Observable<any> {\n    return this.http\n      .put(this.url+`/${botId}/join/${joinId}/accept`, {}, this.headers);\n  }\n\n  getBotTypes(): Observable<BotType[]>{\n    return this.http.get<BotType[]>(this.url+\"/types\",this.headers);\n  }\n\n\n}\n","class Channel{\n  public static OPEN_ADD_DB_CONNECTION_DIALOG = \"OPEN_ADD_DB_CONNECTION_DIALOG\";\n  public static OPEN_EDIT_DB_CONNECTION_DIALOG = \"OPEN_EDIT_DB_CONNECTION_DIALOG\";\n  public static DB_CONNECTIONS_WERE_UPDATED = \"DB_CONNECTIONS_WERE_UPDATED\";\n\n  public static OPEN_ADD_WEB_USER_DIALOG = \"OPEN_ADD_WEB_USER_DIALOG\";\n  public static OPEN_EDIT_WEB_USER_DIALOG = \"OPEN_EDIT_WEB_USER_DIALOG\";\n  public static WEB_USERS_WERE_UPDATED = \"WEB_USERS_WERE_UPDATED\";\n\n  public static OPEN_ADD_TEXT_HANDLER_PROCESSOR_DIALOG = \"OPEN_ADD_TEXT_HANDLER_PROCESSOR_DIALOG\";\n  public static OPEN_EDIT_TEXT_HANDLER_PROCESSOR_DIALOG = \"OPEN_EDIT_TEXT_HANDLER_PROCESSOR_DIALOG\";\n  public static TEXT_HANDLER_PROCESSORS_WERE_UPDATED = \"TEXT_HANDLER_PROCESSORS_WERE_UPDATED\";\n\n\n\n  public static BOTS_WERE_UPDATED = \"BOTS_WERE_UPDATED\";\n  public static OPEN_ADD_BOT_DIALOG = \"OPEN_ADD_BOT_DIALOG\";\n  public static OPEN_EDIT_BOT_DIALOG = \"OPEN_EDIT_BOT_DIALOG\";\n  public static OPEN_BOT_ACCESS_LIST_DIALOG = \"OPEN_BOT_ACCESS_LIST_DIALOG\";\n\n}\n\nexport default Channel;\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {DbsListComponent} from \"./dbs/dbs-list/dbs-list.component\";\nimport {BotsListComponent} from \"./bots/bots-list/bots-list.component\";\nimport {AuthGuard} from \"../login/auth.guard\";\nimport {MainComponent} from \"../main.component\";\nimport {SettingsComponent} from \"./settings/settings.component\";\nimport {WebUsersListComponent} from \"./web-users/web-users-list/web-users-list.component\";\nimport {TextProcessorsHandlersListComponent} from \"./processor/text/text-processor-handlers-list/text-processors-handlers-list.component\";\nimport {ExecuteTextHandlerComponent} from \"./processor/text/execute-text-handler/execute-text-handler.component\";\nimport {TextProcessHandlerResolver} from \"./processor/text/services/text-process-handler.resolver\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:  MainComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'text-processor-handlers-list', component: TextProcessorsHandlersListComponent},\n      { path: 'text-processor-handlers-list/:id/execute',\n        resolve: {textProcessorHandler: TextProcessHandlerResolver},\n        component: ExecuteTextHandlerComponent },\n\n      { path: 'dbs-list', component: DbsListComponent },\n      { path: 'web-users-list', component: WebUsersListComponent },\n      { path: 'bots-list', component: BotsListComponent },\n      { path: 'settings', component: SettingsComponent }\n    ]\n  }\n];\n\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {CoreRoutingModule} from './core-routing.module';\n\nimport {DbsListComponent} from \"./dbs/dbs-list/dbs-list.component\";\nimport {AddDbConnectionComponent} from \"./dbs/add-db-connection/add-db-connection.component\";\nimport {DbConnectionsService} from \"./dbs/services/db-connections.service\";\nimport {DbConnectionsBus} from \"./dbs/services/db-connections.bus\";\nimport {AngularMaterialModule} from \"../angular.material.module\";\nimport {DbItemComponent} from \"./dbs/dbs-list/db-item/db-item.component\";\nimport {DbConnectionFormComponent} from \"./dbs/db-connection-form/db-connection-form.component\";\nimport {EditDbConnectionComponent} from \"./dbs/edit-db-connection/edit-db-connection.component\";\nimport {BotsListComponent} from \"./bots/bots-list/bots-list.component\";\nimport {AddBotComponent} from \"./bots/add-bot/add-bot.component\";\nimport {EditBotComponent} from \"./bots/edit-bot/edit-bot.component\";\nimport {BotFormComponent} from \"./bots/bot-form/bot-form.component\";\nimport {BotItemComponent} from \"./bots/bots-list/bot-item/bot-item.component\";\nimport {BotsBus} from \"./bots/services/bots.bus\";\nimport {BotsService} from \"./bots/services/bots.service\";\nimport {PostgresDbConnectionFormComponent} from \"./dbs/db-connection-form/postgres-form/postgres-db-connection-form.component\";\nimport {OracleDbConnectionFormComponent} from \"./dbs/db-connection-form/oracle-form/oracle-db-connection-form.component\";\nimport {BotAccessListComponent} from \"./bots/bot-access-list/bot-access-list.component\";\nimport {SettingsComponent} from \"./settings/settings.component\";\nimport {SettingsService} from \"./settings/settings.service\";\nimport {TelegramBotFormComponent} from \"./bots/bot-form/telegram-form/telegram-bot-form.component\";\nimport {SlackBotFormComponent} from \"./bots/bot-form/slack-form/slack-bot-form.component\";\nimport {AddWebUserComponent} from \"./web-users/add-web-user/add-web-user.component\";\nimport {EditWebUserComponent} from \"./web-users/edit-web-user/edit-web-user.component\";\nimport {WebUsersListComponent} from \"./web-users/web-users-list/web-users-list.component\";\nimport {WebUsersBus} from \"./web-users/services/web-users.bus\";\nimport {WebUserFormComponent} from \"./web-users/web-user-form/web-user-form.component\";\nimport {WebUserItemComponent} from \"./web-users/web-users-list/web-user-item/web-user-item.component\";\nimport {WebUsersService} from \"./web-users/services/web-users.service\";\nimport {MysqlDbConnectionFormComponent} from \"./dbs/db-connection-form/mysql-form/mysql-db-connection-form.component\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material\";\nimport {MessagingBusService} from \"./api\";\nimport {TextProcessorHandlerFormComponent} from \"./processor/text/text-processor-handler-form/text-processor-handler-form.component\";\nimport {AddTextProcessorHandlerComponent} from \"./processor/text/add-text-processor-handler/add-text-processor-handler.component\";\nimport {TextProcessorsHandlersListComponent} from \"./processor/text/text-processor-handlers-list/text-processors-handlers-list.component\";\nimport {TextProcessorHandlerItemComponent} from \"./processor/text/text-processor-handlers-list/text-processor-item/text-processor-item.component\";\nimport {TextProcessorsHandlersService} from \"./processor/text/services/text-processors-handlers.service\";\nimport {TextProcessorsHandlersBus} from \"./processor/text/services/text-processors-handlers.bus\";\nimport {EditTextProcessorHandlerComponent} from \"./processor/text/edit-text-processor-handler/edit-text-processor-handler.component\";\nimport {TextProcessorFindByKeyComponent} from \"./processor/text/text-processor-handler-form/text-processor-find-by-key/text-processor-find-by-key.component\";\nimport {TextProcessorAddDelimiterComponent} from \"./processor/text/text-processor-handler-form/text-processor-add-delimiter/text-processor-add-delimiter.component\";\nimport {TextProcessorFindNumbersWithPrefixComponent} from \"./processor/text/text-processor-handler-form/text-processor-find-numbers-with-prefix/text-processor-find-numbers-with-prefix.component\";\nimport {ExecuteTextHandlerComponent} from \"./processor/text/execute-text-handler/execute-text-handler.component\";\nimport {TextProcessHandlerResolver} from \"./processor/text/services/text-process-handler.resolver\";\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\n\n\n@NgModule({\n  imports: [\n\n    CommonModule,\n    AngularMaterialModule,\n    CoreRoutingModule,\n    ScrollingModule\n  ],\n  entryComponents: [\n    AddTextProcessorHandlerComponent,\n    EditTextProcessorHandlerComponent,\n    AddDbConnectionComponent,\n    EditDbConnectionComponent,\n    AddBotComponent,\n    EditBotComponent,\n    BotAccessListComponent,\n    AddWebUserComponent,\n    EditWebUserComponent,\n  ],\n  declarations: [\n    DbsListComponent,\n    AddDbConnectionComponent,\n    EditDbConnectionComponent,\n\n    DbConnectionFormComponent,\n    PostgresDbConnectionFormComponent,\n    MysqlDbConnectionFormComponent,\n    OracleDbConnectionFormComponent,\n    DbItemComponent,\n\n    BotsListComponent,\n    AddBotComponent,\n    EditBotComponent,\n    BotFormComponent,\n    BotItemComponent,\n    SlackBotFormComponent,\n    TelegramBotFormComponent,\n\n    WebUsersListComponent,\n    WebUserItemComponent,\n    AddWebUserComponent,\n    EditWebUserComponent,\n    WebUserFormComponent,\n\n    AddTextProcessorHandlerComponent,\n    EditTextProcessorHandlerComponent,\n    TextProcessorsHandlersListComponent,\n    TextProcessorHandlerItemComponent,\n    TextProcessorHandlerFormComponent,\n\n    TextProcessorFindByKeyComponent,\n    TextProcessorAddDelimiterComponent,\n    TextProcessorFindNumbersWithPrefixComponent,\n    ExecuteTextHandlerComponent,\n\n    BotAccessListComponent,\n    SettingsComponent\n  ],\n  providers: [\n    MatDialog,\n    HttpClient,\n    DbConnectionsService,\n    DbConnectionsBus,\n    WebUsersBus,\n    WebUsersService,\n    BotsBus,\n    BotsService,\n    TextProcessHandlerResolver,\n    TextProcessorsHandlersService,\n    TextProcessorsHandlersBus,\n    SettingsService]\n})\nexport class CoreModule {\n\n  constructor(private messagingBusService: MessagingBusService,\n              private dbConnectionsBus: DbConnectionsBus,\n              private webUsersBus: WebUsersBus,\n              private textProcessorsHandlersBus: TextProcessorsHandlersBus,\n              private botsBus: BotsBus) {\n  }\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Новая база данных</h2>\\n  <button mat-icon-button matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content>\\n  <db-connection-form (onSubmitEvent)=\\\"addDbConnection($event)\\\"\\n                      submitButtonText=\\\"Сохранить базу данных\\\">\\n  </db-connection-form>\\n</mat-dialog-content>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZGJzL2FkZC1kYi1jb25uZWN0aW9uL2FkZC1kYi1jb25uZWN0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport {DbConnectionsService} from \"../services/db-connections.service\";\nimport DbConnection from '../models/DbConnection';\n\n@Component({\n  selector: 'add-db-connection',\n  templateUrl: './add-db-connection.component.html',\n  styleUrls: ['./add-db-connection.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class AddDbConnectionComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddDbConnectionComponent>,\n              private dbConnectionsService: DbConnectionsService,\n              private snackBar: MatSnackBar) { }\n\n  addDbConnection(dbConnection: DbConnection):void{\n    this.dbConnectionsService.add(dbConnection)\n      .subscribe( db => {\n        this.dialogRef.close();\n        this.snackBar.open(\"Соединение добавлено\",'',{\n          duration: 3000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n      });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #dbConnectionForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Наименование соединения с базой данных\\\"\\n           id=\\\"name\\\" name=\\\"name\\\"\\n           [(ngModel)]=\\\"dbConnection.name\\\"\\n           required\\n           #name=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"name.errors && (name.dirty || name.touched) && name.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Тип базы данных\\\"\\n                id=\\\"type\\\" name=\\\"type\\\"\\n                [(ngModel)]=\\\"dbConnection.type\\\"\\n                required #type=\\\"ngModel\\\">\\n      <mat-option *ngFor=\\\"let t of dbTypes\\\" [value]=\\\"t.type\\\">\\n        {{ t.name }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"type.errors && (type.dirty || type.touched) && type.errors.required\\\">Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <oracle-db-connection-form *ngIf=\\\"dbConnection.type == 'ORACLE'\\\"\\n                             [dbConnection]=\\\"dbConnection\\\"></oracle-db-connection-form>\\n\\n  <postgres-db-connection-form *ngIf=\\\"dbConnection.type == 'POSTGRES'\\\"\\n                               [dbConnection]=\\\"dbConnection\\\"></postgres-db-connection-form>\\n\\n  <mysql-db-connection-form *ngIf=\\\"dbConnection.type == 'MYSQL'\\\"\\n                               [dbConnection]=\\\"dbConnection\\\"></mysql-db-connection-form>\\n\\n\\n  <div fxLayout fxFlexAlign=\\\"center\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"button\\\" (click)=\\\"checkConnection()\\\" mat-raised-button [disabled]=\\\"!dbConnectionForm.form.valid\\\">Проверить соединение</button>\\n\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\n              [disabled]=\\\"!dbConnectionForm.form.valid\\\">{{submitButtonText}}</button>\\n    <ng-content select=\\\".ng-content-bottom-buttons\\\"></ng-content>\\n  </div>\\n\\n</form>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZGJzL2RiLWNvbm5lY3Rpb24tZm9ybS9kYi1jb25uZWN0aW9uLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, Input, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {DbConnectionsService} from \"../services/db-connections.service\";\nimport DbConnection from '../models/DbConnection';\nimport DbType from \"../models/DbType\";\nimport {MatSnackBar} from \"@angular/material\";\n\n@Component({\n  selector: 'db-connection-form',\n  templateUrl: './db-connection-form.component.html',\n  styleUrls: ['./db-connection-form.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class DbConnectionFormComponent {\n\n  @Output() onSubmitEvent: EventEmitter<DbConnection> = new EventEmitter();\n  @Input()  initial: DbConnection;\n  @Input()  submitButtonText: string;\n\n  private dbConnection: DbConnection = new DbConnection();\n  private dbTypes: DbType[];\n\n  constructor(private dbConnectionsService: DbConnectionsService,\n              private snackBar: MatSnackBar) {\n    this.dbConnectionsService.getDbTypes().subscribe(dbTypes => {\n       this.dbTypes = dbTypes;\n    });;\n  }\n\n  onSubmit(): void {\n    this.onSubmitEvent.emit(this.dbConnection);\n  }\n\n  checkConnection(): void {\n    this.dbConnectionsService.checkConnection(this.dbConnection)\n    .subscribe( res => {\n      if(res.success){\n        this.snackBar.open('Удачно','',{\n          duration: 5000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n      }else{\n        this.snackBar.open('Не удалось установить соединение','',{\n          duration: 5000,\n          panelClass:'colorRed',\n          horizontalPosition:'right'\n        });\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['initial']) {\n      if(this.initial != null && this.initial != undefined){\n        this.dbConnection = this.initial;\n      }\n    }\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Хост\\\"\\n           id=\\\"host\\\" name=\\\"host\\\"\\n           [(ngModel)]=\\\"dbConnection.host\\\"\\n           required #host=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"host.errors && (host.dirty || host.touched) && host.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Порт\\\"\\n           id=\\\"port\\\" name=\\\"port\\\"\\n           [(ngModel)]=\\\"dbConnection.port\\\"\\n           required #port=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"port.errors && (port.dirty || port.touched) && port.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"База данных\\\"\\n           id=\\\"dbName\\\" name=\\\"dbName\\\"\\n           [(ngModel)]=\\\"dbConnection.dbName\\\"\\n           required #dbName=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"dbName.errors && (dbName.dirty || dbName.touched) && dbName.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Пользователь\\\"\\n           id=\\\"user\\\" name=\\\"user\\\"\\n           [(ngModel)]=\\\"dbConnection.user\\\"\\n           required #user=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"user.errors && (user.dirty || user.touched) && user.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Пароль\\\"\\n           [type]=\\\"show ?'text':'password'\\\"\\n           id=\\\"password\\\" name=\\\"password\\\"\\n           [(ngModel)]=\\\"dbConnection.password\\\"\\n           required #password=\\\"ngModel\\\"/>\\n    <mat-icon matSuffix (click)=\\\"show = !show\\\">{{show ?'visibility_off': 'visibility' }}</mat-icon>\\n    <mat-error *ngIf=\\\"password.errors && (password.dirty || password.touched) && password.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n</div>\\n\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport DbConnection from \"../../models/DbConnection\";\nimport {ControlContainer, NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'mysql-db-connection-form',\n  templateUrl: './mysql-db-connection-form.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class MysqlDbConnectionFormComponent{\n  @Input() dbConnection: DbConnection;\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Хост\\\"\\n           id=\\\"host\\\" name=\\\"host\\\"\\n           [(ngModel)]=\\\"dbConnection.host\\\"\\n           required #host=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"host.errors && (host.dirty || host.touched) && host.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Порт\\\"\\n           id=\\\"port\\\" name=\\\"port\\\"\\n           [(ngModel)]=\\\"dbConnection.port\\\"\\n           required #port=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"port.errors && (port.dirty || port.touched) && port.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"SID\\\"\\n           id=\\\"sid\\\" name=\\\"sid\\\"\\n           [(ngModel)]=\\\"dbConnection.sid\\\"\\n           required #sid=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"sid.errors && (sid.dirty || sid.touched) && sid.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Пользователь\\\"\\n           id=\\\"user\\\" name=\\\"user\\\"\\n           [(ngModel)]=\\\"dbConnection.user\\\"\\n           required #user=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"user.errors && (user.dirty || user.touched) && user.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Пароль\\\"\\n           [type]=\\\"show ?'text':'password'\\\"\\n           id=\\\"password\\\" name=\\\"password\\\"\\n           [(ngModel)]=\\\"dbConnection.password\\\"\\n           required #password=\\\"ngModel\\\"/>\\n    <mat-icon matSuffix (click)=\\\"show = !show\\\">{{show ?'visibility_off': 'visibility' }}</mat-icon>\\n    <mat-error *ngIf=\\\"password.errors && (password.dirty || password.touched) && password.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n</div>\\n\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport DbConnection from \"../../models/DbConnection\";\nimport {ControlContainer, NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'oracle-db-connection-form',\n  templateUrl: './oracle-db-connection-form.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class OracleDbConnectionFormComponent {\n  @Input() dbConnection: DbConnection;\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Хост\\\"\\n           id=\\\"host\\\" name=\\\"host\\\"\\n           [(ngModel)]=\\\"dbConnection.host\\\"\\n           required #host=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"host.errors && (host.dirty || host.touched) && host.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Порт\\\"\\n           id=\\\"port\\\" name=\\\"port\\\"\\n           [(ngModel)]=\\\"dbConnection.port\\\"\\n           required #port=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"port.errors && (port.dirty || port.touched) && port.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"База данных\\\"\\n           id=\\\"dbName\\\" name=\\\"dbName\\\"\\n           [(ngModel)]=\\\"dbConnection.dbName\\\"\\n           required #dbName=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"dbName.errors && (dbName.dirty || dbName.touched) && dbName.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Пользователь\\\"\\n           id=\\\"user\\\" name=\\\"user\\\"\\n           [(ngModel)]=\\\"dbConnection.user\\\"\\n           required #user=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"user.errors && (user.dirty || user.touched) && user.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Пароль\\\"\\n           [type]=\\\"show ?'text':'password'\\\"\\n           id=\\\"password\\\" name=\\\"password\\\"\\n           [(ngModel)]=\\\"dbConnection.password\\\"\\n           required #password=\\\"ngModel\\\"/>\\n    <mat-icon matSuffix (click)=\\\"show = !show\\\">{{show ?'visibility_off': 'visibility' }}</mat-icon>\\n    <mat-error *ngIf=\\\"password.errors && (password.dirty || password.touched) && password.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n</div>\\n\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport DbConnection from \"../../models/DbConnection\";\nimport {ControlContainer, NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'postgres-db-connection-form',\n  templateUrl: './postgres-db-connection-form.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class PostgresDbConnectionFormComponent{\n  @Input() dbConnection: DbConnection;\n}\n","module.exports = \"<mat-list-item style=\\\"background-color: #fff;\\\">\\n  <span matLine> <b>{{dbConnection.name}}</b></span>\\n  <button mat-icon-button (click)=\\\"edit()\\\">\\n    <mat-icon aria-label=\\\"Редактировать\\\">edit</mat-icon>\\n  </button>\\n</mat-list-item>\\n<mat-divider></mat-divider>\\n\"","module.exports = \".padding0 {\\n  padding: 0 !important; }\\n\\nmat-card-title {\\n  margin: 0 0 0 16px; }\\n\\n.semafor {\\n  font-size: 17px;\\n  color: #1acb1e; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGVrc2FuZHJzZXJkdWtvdi9wcm9qZWN0cy9zdXBwb3J0LXRlcm1pbmFsLWRldi9zdXBwb3J0LXRlcm1pbmFsL3VpL3NyYy9hcHAvY29yZS9kYnMvZGJzLWxpc3QvZGItaXRlbS9kYi1pdGVtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQW9CLEVBQUE7O0FBR3RCO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsZUFBZTtFQUNmLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZGJzL2Ricy1saXN0L2RiLWl0ZW0vZGItaXRlbS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYWRkaW5nMHtcbiAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG59XG5cbm1hdC1jYXJkLXRpdGxle1xuICBtYXJnaW46IDAgMCAwIDE2cHg7XG59XG5cbi5zZW1hZm9ye1xuICBmb250LXNpemU6IDE3cHg7XG4gIGNvbG9yOiAjMWFjYjFlO1xufVxuIl19 */\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport DbConnection from \"../../models/DbConnection\";\n\nimport Channel from \"../../../bus/Сhannel\";\nimport {MessagingBusService} from \"../../../api\";\n\n\n@Component({\n  selector: 'db-item',\n  templateUrl: './db-item.component.html',\n  styleUrls: ['./db-item.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class DbItemComponent{\n\n  @Input() dbConnection: DbConnection;\n\n  constructor(private messagingBusService: MessagingBusService) {\n\n  }\n\n  edit(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_EDIT_DB_CONNECTION_DIALOG, data:{dbConnectionId: this.dbConnection.id}});\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Список баз данных</span>\\n      <span fxFlex=\\\"100%\\\"></span>\\n      <span fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"end\\\">\\n        <button mat-button (click)=\\\"add()\\\">\\n          <mat-icon aria-label=\\\"Добавить базу данных\\\">playlist_add</mat-icon>\\n          Добавить базу данных\\n        </button>\\n      </span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-list>\\n    <db-item *ngFor=\\\"let dbConnection of dbskList\\\" [dbConnection]=\\\"dbConnection\\\"></db-item>\\n  </mat-list>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZGJzL2Ricy1saXN0L2Ricy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnDestroy, ViewEncapsulation} from '@angular/core';\n\nimport {Subscription} from \"rxjs\";\n\n\nimport DbConnection from \"../models/DbConnection\";\nimport Channel from \"../../bus/Сhannel\";\nimport {DbConnectionsService} from \"../services/db-connections.service\";\nimport {MessagingBusService} from \"../../api\";\n\n\n@Component({\n  selector: 'dbs-list',\n  templateUrl: './dbs-list.component.html',\n  styleUrls: ['./dbs-list.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class DbsListComponent implements OnDestroy{\n\n  private dbskList: DbConnection[];\n  private dbskListSubscription: Subscription;\n\n  constructor(private messagingBusService: MessagingBusService,\n              private dbConnectionsService: DbConnectionsService) {\n\n    this.getDbsList();\n    this.dbskListSubscription = this.messagingBusService.getMessage().subscribe(message => {\n      if(message.channel == Channel.DB_CONNECTIONS_WERE_UPDATED){\n        this.getDbsList();\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.dbskListSubscription.unsubscribe();\n  }\n\n  add(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_ADD_DB_CONNECTION_DIALOG});\n  }\n\n  getDbsList(){\n    this.dbConnectionsService.getAll().subscribe(dbs => {\n      this.dbskList = dbs;\n    });\n  }\n\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Редактировать: {{dbConnection.name}} </h2>\\n  <button mat-icon-button matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content *ngIf=\\\"dbConnection\\\">\\n  <db-connection-form (onSubmitEvent)=\\\"editDbConnection($event)\\\"\\n                      [initial]=\\\"dbConnection\\\"\\n                      submitButtonText=\\\"Сохранить изменения\\\">\\n    <div class=\\\"ng-content-bottom-buttons\\\">\\n      <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"deleteDb()\\\">Удалить базу данных</button>\\n    </div>\\n\\n  </db-connection-form>\\n</mat-dialog-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZGJzL2VkaXQtZGItY29ubmVjdGlvbi9lZGl0LWRiLWNvbm5lY3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport {DbConnectionsService} from \"../services/db-connections.service\";\nimport DbConnection from '../models/DbConnection';\n\n@Component({\n  selector: 'edit-db-connection',\n  templateUrl: './edit-db-connection.component.html',\n  styleUrls: ['./edit-db-connection.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class EditDbConnectionComponent {\n\n  private dbConnection: DbConnection;\n  constructor(public dialogRef: MatDialogRef<EditDbConnectionComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private dbConnectionsService: DbConnectionsService,\n              private snackBar: MatSnackBar) {\n       this.dbConnection = data.dbConnection;\n  }\n\n  editDbConnection(dbConnection: DbConnection ):void{\n    this.dbConnectionsService.update(dbConnection)\n      .subscribe( db => {\n        this.snackBar.open(\"Изменения сохранены\",'',{\n          duration: 3000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n      });\n  }\n\n  deleteDb(){\n    this.dbConnectionsService.delete(this.dbConnection.id)\n      .subscribe( db => {\n      this.dialogRef.close();\n      this.snackBar.open(\"База данных удалена\",'',{\n        duration: 3000,\n        panelClass:'colorGreen',\n        horizontalPosition:'right'\n      });\n    });;\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n}\n","export default class DbConnection {\n  id: string;\n  name: string;\n  type: string;\n  host: string;\n  port: string;\n  dbName?: string;\n  sid?: string;\n  user: string;\n  password:string;\n}\n","import {MatDialog} from \"@angular/material\";\nimport {AddDbConnectionComponent} from \"../add-db-connection/add-db-connection.component\";\nimport {Subscription} from 'rxjs';\nimport Channel from \"../../bus/Сhannel\";\n\nimport {DbConnectionsService} from \"./db-connections.service\";\nimport {EditDbConnectionComponent} from \"../edit-db-connection/edit-db-connection.component\";\nimport {MessagingBusService} from \"../../api\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class DbConnectionsBus {\n\n  subscription: Subscription;\n\n  constructor(@Inject(MatDialog) public dialog: MatDialog,\n              private messagingBusService: MessagingBusService,\n              private dbConnectionsService: DbConnectionsService) {\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n\n      if(message.channel == Channel.OPEN_ADD_DB_CONNECTION_DIALOG){\n\n        this.openAddDbConnectionDialog();\n\n      }else if(message.channel == Channel.OPEN_EDIT_DB_CONNECTION_DIALOG){\n\n          this.openEditDbConnectionDialog(message.data.dbConnectionId);\n\n      }\n\n    });\n  }\n\n  openAddDbConnectionDialog(): void {\n    let dialogRef = this.dialog.open(AddDbConnectionComponent, {\n      width: '700px',\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.messagingBusService.sendMessage({channel: Channel.DB_CONNECTIONS_WERE_UPDATED})\n    });\n  }\n\n\n  openEditDbConnectionDialog(dbConnectionId:string): void {\n    this.dbConnectionsService.get(dbConnectionId)\n      .subscribe(db => {\n        let dialogRef = this.dialog.open(EditDbConnectionComponent, {\n          width: '700px',\n          data:{dbConnection: db}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          this.messagingBusService.sendMessage({channel: Channel.DB_CONNECTIONS_WERE_UPDATED})\n        });\n\n      });\n  }\n\n\n}\n","import DbConnection from \"../models/DbConnection\";\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\n\nimport DbType from \"../models/DbType\";\nimport CheckDbConnection from \"../models/CheckDbConnection\";\nimport {Config} from \"../../../config\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class DbConnectionsService {\n\n  private headers = {headers:new HttpHeaders({'Content-Type': 'application/json'})};\n  private urlDbConnections;\n\n  constructor(@Inject(HttpClient) private http: HttpClient,\n              private config: Config) {\n    this.urlDbConnections = config.api+'/db-connections';\n  }\n\n  add(db:DbConnection): Observable<DbConnection> {\n   return this.http\n      .post<DbConnection>(this.urlDbConnections, db, this.headers);\n  }\n\n  checkConnection(db:DbConnection): Observable<CheckDbConnection> {\n   return this.http\n      .post<CheckDbConnection>(this.urlDbConnections+\"/check\", db, this.headers);\n  }\n\n  getAll(): Observable<DbConnection[]>{\n    return this.http.get<DbConnection[]>(this.urlDbConnections,this.headers);\n  }\n\n  getDbTypes(): Observable<DbType[]>{\n    return this.http.get<DbType[]>(this.urlDbConnections+\"/types\",this.headers);\n  }\n\n  get(dbConnectionId: string): Observable<DbConnection> {\n    return this.http\n      .get<DbConnection>(this.urlDbConnections+`/${dbConnectionId}`);\n  }\n\n  delete(dbConnectionId: string): Observable<any> {\n    return this.http\n      .delete(this.urlDbConnections+`/${dbConnectionId}`);\n  }\n\n  update(db:DbConnection): Observable<DbConnection> {\n    return this.http\n      .put<DbConnection>(this.urlDbConnections+`/${db.id}`, db, this.headers);\n  }\n\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Новый обработчик текста</h2>\\n  <button mat-icon-button (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltip=\\\"Закрыть окно\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content>\\n  <text-processor-handler-form (onSubmitEvent)=\\\"add($event)\\\"\\n                      submitButtonText=\\\"Добавить обработчик\\\">\\n  </text-processor-handler-form>\\n</mat-dialog-content>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvcHJvY2Vzc29yL3RleHQvYWRkLXRleHQtcHJvY2Vzc29yLWhhbmRsZXIvYWRkLXRleHQtcHJvY2Vzc29yLWhhbmRsZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport {TextProcessorsHandlersService} from \"../services/text-processors-handlers.service\";\nimport TextProcessorHandler from \"../models/TextProcessorHandler\";\n\n\n@Component({\n  selector: 'add-text-processor-handler',\n  templateUrl: './add-text-processor-handler.component.html',\n  styleUrls: ['./add-text-processor-handler.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class AddTextProcessorHandlerComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddTextProcessorHandlerComponent>,\n              private textProcessorsHandlersService: TextProcessorsHandlersService,\n              private snackBar: MatSnackBar) { }\n\n  add(textProcessorHandler: TextProcessorHandler):void{\n    this.textProcessorsHandlersService.add(textProcessorHandler)\n      .subscribe( handler => {\n        this.dialogRef.close();\n        this.snackBar.open(\"Обработчик добавлен\",'',{\n          duration: 3000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n      });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Редактировать: {{textProcessorHandler.name}} </h2>\\n  <button mat-icon-button matTooltip=\\\"Закрыть окно\\\" (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content *ngIf=\\\"textProcessorHandler\\\">\\n\\n  <text-processor-handler-form (onSubmitEvent)=\\\"edit($event)\\\"\\n                      [initial]=\\\"textProcessorHandler\\\"\\n                      submitButtonText=\\\"Сохранить изменения\\\">\\n\\n    <div class=\\\"ng-content-bottom-buttons\\\">\\n      <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"delete()\\\">Удалить обработчик</button>\\n    </div>\\n\\n  </text-processor-handler-form>\\n</mat-dialog-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvcHJvY2Vzc29yL3RleHQvZWRpdC10ZXh0LXByb2Nlc3Nvci1oYW5kbGVyL2VkaXQtdGV4dC1wcm9jZXNzb3ItaGFuZGxlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport TextProcessorHandler from \"../models/TextProcessorHandler\";\nimport {TextProcessorsHandlersService} from \"../services/text-processors-handlers.service\";\n\n\n@Component({\n    selector: 'edit-bot-command',\n    templateUrl: './edit-text-processor-handler.component.html',\n    styleUrls: ['./edit-text-processor-handler.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class EditTextProcessorHandlerComponent {\n\n    private textProcessorHandler: TextProcessorHandler;\n\n    constructor(public dialogRef: MatDialogRef<EditTextProcessorHandlerComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any,\n                private textProcessorsHandlersService: TextProcessorsHandlersService,\n                private snackBar: MatSnackBar) {\n        this.textProcessorHandler = data.textProcessorHandler;\n    }\n\n    edit(textProcessorHandler: TextProcessorHandler): void {\n        this.textProcessorsHandlersService.update(textProcessorHandler)\n            .subscribe(command => {\n                this.snackBar.open(\"Изменения сохранены\", '', {\n                    duration: 3000,\n                    panelClass: 'colorGreen',\n                    horizontalPosition: 'right'\n                });\n            });\n    }\n\n\n    delete() {\n        console.log(\"delete\")\n        this.textProcessorsHandlersService.delete(this.textProcessorHandler.id)\n            .subscribe(command => {\n                this.dialogRef.close();\n                this.snackBar.open(\"Удалено\", '', {\n                    duration: 3000,\n                    panelClass: 'colorGreen',\n                    horizontalPosition: 'right'\n                });\n            });\n    }\n\n    close() {\n        this.dialogRef.close();\n    }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Обработчик: {{textProcessorHandler.name}}</span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-card fxLayout=\\\"column\\\">\\n  <form [formGroup]=\\\"executionRequestForm\\\" (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\">\\n    <mat-form-field>\\n      <mat-label>Текст</mat-label>\\n      <textarea matInput\\n                cdkTextareaAutosize\\n                cdkAutosizeMinRows=\\\"15\\\"\\n                cdkAutosizeMaxRows=\\\"30\\\"\\n                id=\\\"text\\\" name=\\\"text\\\"\\n                formControlName=\\\"text\\\"></textarea>\\n      <mat-error *ngIf=\\\"(executionRequestForm.controls['text'].dirty || executionRequestForm.controls['text'].touched)\\n                       && executionRequestForm.controls['text'].errors && executionRequestForm.controls['text'].errors.required\\\">\\n        Необходимое значение\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <div fxLayout fxFlexAlign=\\\"end\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\n              [disabled]=\\\"executionRequestForm.invalid\\\">Выполнить\\n      </button>\\n    </div>\\n\\n\\n\\n    <div fxLayout=\\\"column\\\">\\n      <mat-form-field>\\n        <mat-label>Результат</mat-label>\\n        <textarea matInput\\n                  cdkTextareaAutosize\\n                  cdkAutosizeMinRows=\\\"15\\\"\\n                  cdkAutosizeMaxRows=\\\"30\\\"\\n\\n        > {{resultText}}</textarea>\\n      </mat-form-field>\\n\\n    </div>\\n\\n  </form>\\n\\n\\n  </mat-card>\\n</div>\\n\\n\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvcHJvY2Vzc29yL3RleHQvZXhlY3V0ZS10ZXh0LWhhbmRsZXIvZXhlY3V0ZS10ZXh0LWhhbmRsZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, NgZone, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\n\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {TextProcessorsHandlersService} from \"../services/text-processors-handlers.service\";\nimport TextProcessorHandler from \"../models/TextProcessorHandler\";\nimport {CdkTextareaAutosize} from \"@angular/cdk/text-field\";\n\nimport {take} from 'rxjs/operators';\n\n@Component({\n  selector: 'execute-text-handler',\n  templateUrl: './execute-text-handler.component.html',\n  styleUrls: ['./execute-text-handler.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ExecuteTextHandlerComponent {\n\n  private textProcessorHandler: TextProcessorHandler;\n  private executionRequestForm: FormGroup;\n  private resultText: string;\n\n  constructor(private route: ActivatedRoute,\n              private textProcessorsHandlersService: TextProcessorsHandlersService,\n              private fb: FormBuilder) {\n    this.textProcessorHandler = route.snapshot.data['textProcessorHandler'];\n\n    this.executionRequestForm = this.fb.group({\n      text: ['', Validators.required],\n      handlerId: [this.textProcessorHandler.id, Validators.required],\n    });\n\n  }\n\n  onSubmit(): void {\n\n    this.textProcessorsHandlersService.execute(this.executionRequestForm.value)\n      .subscribe(executionResult => {\n        this.resultText = executionResult.result\n      });\n  }\n\n}\n","export default class TextProcessorAddDelimiter {\n  type: string;\n  prefix: string;\n  delimiter: string;\n  suffix: string;\n}\n","export default class TextProcessorFindByKey {\n  type: string;\n  key: string;\n}\n","export default class TextProcessorFindNumberWithPrefix {\n  type: string;\n  prefix: string;\n}\n","export default class TextProcessorHandler {\n  id: string;\n  name: string;\n  processors: any[] = [];\n}\n","import {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {Inject} from \"@angular/core\";\nimport {TextProcessorsHandlersService} from \"./text-processors-handlers.service\";\nimport TextProcessorHandler from \"../models/TextProcessorHandler\";\n\n\nexport class TextProcessHandlerResolver implements Resolve<TextProcessorHandler> {\n\n\n  constructor(@Inject(TextProcessorsHandlersService)\n              private textProcessorsHandlersService: TextProcessorsHandlersService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): any {\n      let id = route.paramMap.get('id');\n      return new Promise((resolve, reject) => {\n          this.textProcessorsHandlersService.get(id).subscribe(handler => {\n              resolve(handler);\n          });\n      });\n  }\n\n}\n","import {MatDialog} from \"@angular/material\";\nimport {Subscription} from 'rxjs';\n\nimport {TextProcessorsHandlersService} from \"./text-processors-handlers.service\";\n\nimport {Inject} from \"@angular/core\";\nimport {MessagingBusService} from \"../../../api\";\nimport Channel from \"../../../bus/Сhannel\";\nimport {AddTextProcessorHandlerComponent} from \"../add-text-processor-handler/add-text-processor-handler.component\";\nimport {EditTextProcessorHandlerComponent} from \"../edit-text-processor-handler/edit-text-processor-handler.component\";\n\n\nexport class TextProcessorsHandlersBus {\n\n  subscription: Subscription;\n\n  constructor(@Inject(MatDialog)public dialog: MatDialog,\n              private messagingBusService: MessagingBusService,\n              private textProcessorsHandlersService: TextProcessorsHandlersService) {\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n      if(message.channel == Channel.OPEN_ADD_TEXT_HANDLER_PROCESSOR_DIALOG){\n        this.openAddDialog();\n      }else if(message.channel == Channel.OPEN_EDIT_TEXT_HANDLER_PROCESSOR_DIALOG){\n        this.openEditDialog(message.data.textHandlerId);\n      }\n    });\n  }\n\n  openAddDialog(): void {\n    let dialogRef = this.dialog.open(AddTextProcessorHandlerComponent, {\n      width: '700px',\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.messagingBusService.sendMessage({channel: Channel.TEXT_HANDLER_PROCESSORS_WERE_UPDATED})\n    });\n  }\n\n  openEditDialog(id:string): void {\n    this.textProcessorsHandlersService.get(id)\n      .subscribe(textProcessorHandler => {\n        let dialogRef = this.dialog.open(EditTextProcessorHandlerComponent, {\n          width: '700px',\n          data:{\n            textProcessorHandler: textProcessorHandler\n          }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          this.messagingBusService.sendMessage({channel: Channel.TEXT_HANDLER_PROCESSORS_WERE_UPDATED})\n        });\n\n      });\n  }\n\n\n\n\n}\n\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {Inject} from \"@angular/core\";\nimport {Config} from \"../../../../config\";\nimport TextProcessorHandler from \"../models/TextProcessorHandler\";\nimport TextProcessorHandlerExecute from \"../models/TextProcessorHandlerExecute\";\n\nexport class TextProcessorsHandlersService {\n\n  private headers = {headers:new HttpHeaders({'Content-Type': 'application/json'})};\n  private url;\n\n  constructor(@Inject(HttpClient) private http: HttpClient,\n             private config: Config) {\n    this.url = config.api+'/text/process/handlers';\n  }\n\n  add(handler:TextProcessorHandler): Observable<TextProcessorHandler> {\n   return this.http\n      .post<TextProcessorHandler>(this.url, handler, this.headers);\n  }\n\n  execute(request:TextProcessorHandlerExecute): Observable<any> {\n   return this.http\n      .post<any>(this.url+\"/execute\", request, this.headers);\n  }\n\n  getAll(): Observable<TextProcessorHandler[]>{\n    return this.http.get<TextProcessorHandler[]>(this.url,this.headers);\n  }\n\n  get(id: string): Observable<TextProcessorHandler> {\n    return this.http\n      .get<TextProcessorHandler>(this.url+`/${id}`);\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http\n      .delete(this.url+`/${id}`);\n  }\n\n  update(db:TextProcessorHandler): Observable<TextProcessorHandler> {\n    return this.http\n      .put<TextProcessorHandler>(this.url+`/${db.id}`, db, this.headers);\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\" *ngIf=\\\"processorForm\\\" [formGroup]=\\\"processorForm\\\">\\n  <mat-card-title>Добавить разделитель между строк</mat-card-title>\\n  <mat-card-content>\\n    <mat-form-field fxFlex>\\n      <input matInput placeholder=\\\"В начало строки\\\"\\n             id=\\\"prefix\\\" name=\\\"prefix\\\"\\n             formControlName=\\\"prefix\\\"/>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex>\\n      <input matInput placeholder=\\\"Разделитель строк\\\"\\n             id=\\\"delimiter\\\" name=\\\"delimiter\\\"\\n             formControlName=\\\"delimiter\\\"/>\\n      <mat-error *ngIf=\\\"(processorForm.controls['delimiter'].dirty || processorForm.controls['delimiter'].touched)\\n                       && processorForm.controls['delimiter'].errors && processorForm.controls['delimiter'].errors.required\\\">\\n        Необходимое значение\\n      </mat-error>\\n    </mat-form-field>\\n\\n\\n    <mat-form-field fxFlex>\\n      <input matInput placeholder=\\\"В конец строки\\\"\\n             id=\\\"suffix\\\" name=\\\"suffix\\\"\\n             formControlName=\\\"suffix\\\"/>\\n    </mat-form-field>\\n\\n\\n    <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n      <button type=\\\"submit\\\" mat-button color=\\\"warn\\\" (click)=\\\"submitRemoveMe()\\\">\\n        Убрать\\n      </button>\\n    </mat-card-actions>\\n  </mat-card-content>\\n\\n</mat-card>\\n\"","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport TextProcessorAddDelimiter from \"../../models/TextProcessorAddDelimiter\";\nimport TextProcessorFindByKey from \"../../models/TextProcessorFindByKey\";\n\n@Component({\n  selector: 'text-processor-add-delimiter',\n  templateUrl: './text-processor-add-delimiter.component.html',\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class TextProcessorAddDelimiterComponent implements OnChanges {\n\n  @Input() processorModel: TextProcessorAddDelimiter;\n  private initial: TextProcessorAddDelimiter;\n  @Input() processorForm: FormGroup;\n  @Output() removeMeEvent: EventEmitter<number> = new EventEmitter();\n\n\n  constructor(private fb: FormBuilder) {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['processorForm']) {\n      this.processorForm.addControl('prefix',  this.fb.control(''));\n      this.processorForm.addControl('delimiter',  this.fb.control('', [Validators.required]));\n      this.processorForm.addControl('suffix',  this.fb.control(''));\n      this.processorForm.addControl('type',  this.fb.control('', [Validators.required]));\n   }\n    if (changes['processorModel']) {\n      if (this.processorModel != null) {\n        this.processorForm.patchValue(this.processorModel);\n      }\n    }\n  }\n  submitRemoveMe(): void {\n    this.removeMeEvent.emit();\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\" *ngIf=\\\"processorForm\\\" [formGroup]=\\\"processorForm\\\">\\n  <mat-card-title>Фильтровать строки по ключевому слову</mat-card-title>\\n  <mat-card-content>\\n    <mat-form-field fxFlex>\\n      <input matInput placeholder=\\\"Ключевая фраза имени файла\\\"\\n             id=\\\"key\\\" name=\\\"key\\\"\\n             formControlName=\\\"key\\\"/>\\n      <mat-error *ngIf=\\\"(processorForm.controls['key'].dirty || processorForm.controls['key'].touched)\\n                       && processorForm.controls['key'].errors && processorForm.controls['key'].errors.required\\\">\\n        Необходимое значение\\n      </mat-error>\\n    </mat-form-field>\\n\\n\\n    <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n      <button type=\\\"submit\\\" mat-button color=\\\"warn\\\" (click)=\\\"submitRemoveMe()\\\">\\n        Убрать\\n      </button>\\n    </mat-card-actions>\\n\\n  </mat-card-content>\\n</mat-card>\\n\"","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport TextProcessorFindByKey from \"../../models/TextProcessorFindByKey\";\n\n@Component({\n  selector: 'text-processor-find-by-key',\n  templateUrl: './text-processor-find-by-key.component.html',\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class TextProcessorFindByKeyComponent implements OnChanges {\n\n  @Input() processorModel: TextProcessorFindByKey;\n  private initial: TextProcessorFindByKey;\n  @Input() processorForm: FormGroup;\n  @Output() removeMeEvent: EventEmitter<number> = new EventEmitter();\n\n  constructor(private fb: FormBuilder) {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['processorForm']) {\n      this.processorForm.addControl('key',  this.fb.control('', [Validators.required]));\n      this.processorForm.addControl('type',  this.fb.control('', [Validators.required]));\n   }\n    if (changes['processorModel']) {\n      if (this.processorModel != null) {\n        this.processorForm.patchValue(this.processorModel);\n      }\n    }\n  }\n\n  submitRemoveMe(): void {\n    this.removeMeEvent.emit();\n  }\n\n\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\" *ngIf=\\\"processorForm\\\" [formGroup]=\\\"processorForm\\\">\\n  <mat-card-title>Поиск номеров с префиксом</mat-card-title>\\n  <mat-card-content>\\n    <mat-form-field fxFlex>\\n      <input matInput placeholder=\\\"Префикс номера\\\"\\n             id=\\\"prefix\\\" name=\\\"prefix\\\"\\n             formControlName=\\\"prefix\\\"/>\\n    </mat-form-field>\\n    <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n      <button type=\\\"submit\\\" mat-button color=\\\"warn\\\" (click)=\\\"submitRemoveMe()\\\">\\n        Убрать\\n      </button>\\n    </mat-card-actions>\\n\\n  </mat-card-content>\\n\\n\\n</mat-card>\\n\"","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport TextProcessorFindNumberWithPrefix from \"../../models/TextProcessorFindNumberWithPrefix\";\nimport TextProcessorAddDelimiter from \"../../models/TextProcessorAddDelimiter\";\n\n@Component({\n  selector: 'text-processor-find-numbers-with-prefix',\n  templateUrl: './text-processor-find-numbers-with-prefix.component.html',\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class TextProcessorFindNumbersWithPrefixComponent implements OnChanges {\n\n  @Input() processorModel: TextProcessorFindNumberWithPrefix;\n  @Input() processorForm: FormGroup;\n  @Output() removeMeEvent: EventEmitter<number> = new EventEmitter();\n\n  constructor(private fb: FormBuilder) {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['processorForm']) {\n      this.processorForm.addControl('prefix',  this.fb.control(''));\n      this.processorForm.addControl('type',  this.fb.control('', [Validators.required]));\n   }\n    if (changes['processorModel']) {\n      if (this.processorModel != null) {\n        this.processorForm.patchValue(this.processorModel);\n      }\n    }\n  }\n\n  submitRemoveMe(): void {\n    this.removeMeEvent.emit();\n  }\n\n\n}\n","module.exports = \"<form [formGroup]=\\\"textProcessorHandlerForm\\\" (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\">\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Название обработчика\\\"\\n           id=\\\"name\\\" name=\\\"name\\\"\\n           formControlName=\\\"name\\\"/>\\n    <mat-error *ngIf=\\\" (textProcessorHandlerForm.controls['name'].dirty || textProcessorHandlerForm.controls['name'].touched)\\n                       && textProcessorHandlerForm.controls['name'].errors && textProcessorHandlerForm.controls['name'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n    <h3>Обработки</h3>\\n    <div>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"\\n              [matMenuTriggerFor]=\\\"processingTypesMenu\\\">Добавить обработку\\n      </button>\\n      <mat-menu #processingTypesMenu=\\\"matMenu\\\">\\n        <button type=\\\"button\\\" *ngFor=\\\"let processingType of processingTypes\\\"\\n                (click)=\\\"addProcessor(processingType.type)\\\"\\n                mat-menu-item>{{processingType.name}}\\n        </button>\\n      </mat-menu>\\n    </div>\\n    <br/>\\n\\n    <div *ngFor=\\\"let processorForm of this.textProcessorHandlerForm.controls['processors'].controls;\\n     let i = index\\\" >\\n      <text-processor-find-by-key *ngIf=\\\"processorForm.value.type == 'FILTER_BY_KEY'\\\"\\n                                 [processorForm]=\\\"processorForm\\\"\\n                                  [processorModel]=\\\"processorForm.value\\\"\\n                                  (removeMeEvent)=\\\"dropProcessor(i)\\\">\\n      </text-processor-find-by-key>\\n\\n      <text-processor-add-delimiter *ngIf=\\\"processorForm.value.type == 'ADD_DELIMITER'\\\"\\n                                 [processorForm]=\\\"processorForm\\\"\\n                                    [processorModel]=\\\"processorForm.value\\\"\\n                                    (removeMeEvent)=\\\"dropProcessor(i)\\\">\\n      </text-processor-add-delimiter>\\n\\n      <text-processor-find-numbers-with-prefix *ngIf=\\\"processorForm.value.type == 'FIND_NUMBERS_WITH_PREFIX'\\\"\\n                                 [processorForm]=\\\"processorForm\\\"\\n                                 [processorModel]=\\\"processorForm.value\\\"\\n                                    (removeMeEvent)=\\\"dropProcessor(i)\\\">\\n      </text-processor-find-numbers-with-prefix>\\n\\n    </div>\\n\\n\\n  <div fxLayout fxFlexAlign=\\\"center\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\n            [disabled]=\\\"textProcessorHandlerForm.invalid\\\">{{submitButtonText}}</button>\\n    <ng-content select=\\\".ng-content-bottom-buttons\\\"></ng-content>\\n  </div>\\n</form>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvcHJvY2Vzc29yL3RleHQvdGV4dC1wcm9jZXNzb3ItaGFuZGxlci1mb3JtL3RleHQtcHJvY2Vzc29yLWhhbmRsZXItZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport TextProcessorHandler from \"../models/TextProcessorHandler\";\nimport {TextProcessorsHandlersService} from \"../services/text-processors-handlers.service\";\n\n@Component({\n  selector: 'text-processor-handler-form',\n  templateUrl: './text-processor-handler-form.component.html',\n  styleUrls: ['./text-processor-handler-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class TextProcessorHandlerFormComponent{\n\n  @Output() onSubmitEvent: EventEmitter<TextProcessorHandler> = new EventEmitter();\n  @Input() initial: TextProcessorHandler;\n  @Input() submitButtonText: string;\n\n\n  private textProcessorHandler: TextProcessorHandler = new TextProcessorHandler();\n  private textProcessorHandlerForm: FormGroup;\n\n  constructor(private textProcessorsHandlersService: TextProcessorsHandlersService,\n              private fb: FormBuilder) {\n    this.initForm();\n  }\n\n  initForm() {\n    this.textProcessorHandlerForm = this.fb.group({\n      name: ['', Validators.required],\n      processors: this.fb.array([]),\n    });\n  }\n\n  onSubmit(): void {\n    this.textProcessorHandler = this.textProcessorHandlerForm.value;\n    this.onSubmitEvent.emit(this.textProcessorHandler);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['initial']) {\n      if (this.initial != null) {\n        this.textProcessorHandler = this.initial;\n        let id = <FormArray>this.textProcessorHandlerForm.controls['id']\n        if (id == null) {\n          this.textProcessorHandlerForm.addControl('id', this.fb.control({}));\n        }\n        this.textProcessorHandlerForm.controls['id'].setValue(this.textProcessorHandler.id);\n        this.textProcessorHandlerForm.controls['name'].setValue(this.textProcessorHandler.name);\n\n        if (Array.isArray(this.textProcessorHandler.processors)) {\n          this.textProcessorHandler.processors.forEach((processor) => {\n            (<FormArray>this.textProcessorHandlerForm.controls['processors'])\n              .push(this.fb.group( processor ))\n          })\n        }\n\n      }\n    }\n  }\n\n  addProcessor(type: string) {\n    (<FormArray>this.textProcessorHandlerForm.controls['processors']).push(this.fb.group({\n      type: [type, Validators.required],\n    }))\n  }\n\n  dropProcessor(index: number) {\n    if ((<FormArray>this.textProcessorHandlerForm.controls['processors']).length != 0) {\n      (<FormArray>this.textProcessorHandlerForm.controls['processors']).removeAt(index);\n    }\n  }\n\n\n  processingTypes = [\n    {name: 'Фильтровать строки по ключевому слову', type: 'FILTER_BY_KEY'},\n    {name: 'Поиск номеров с префиксом', type: 'FIND_NUMBERS_WITH_PREFIX'},\n    {name: 'Добавить разделитель между строк', type: 'ADD_DELIMITER'},\n  ];\n\n\n}\n","module.exports = \"<mat-list-item style=\\\"background-color: #fff;\\\">\\n  <span matLine>\\n    <a [routerLink]=\\\"textProcessorHandler.id+'/execute'\\\" >  <b>{{textProcessorHandler.name}}</b>\\n    </a>\\n  </span>\\n  <button mat-icon-button (click)=\\\"edit()\\\">\\n    <mat-icon aria-label=\\\"Редактировать\\\">edit</mat-icon>\\n  </button>\\n</mat-list-item>\\n<mat-divider></mat-divider>\\n\"","module.exports = \".padding0 {\\n  padding: 0 !important; }\\n\\nmat-card-title {\\n  margin: 0 0 0 16px; }\\n\\n.semafor {\\n  font-size: 17px;\\n  color: #1acb1e; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGVrc2FuZHJzZXJkdWtvdi9wcm9qZWN0cy9zdXBwb3J0LXRlcm1pbmFsLWRldi9zdXBwb3J0LXRlcm1pbmFsL3VpL3NyYy9hcHAvY29yZS9wcm9jZXNzb3IvdGV4dC90ZXh0LXByb2Nlc3Nvci1oYW5kbGVycy1saXN0L3RleHQtcHJvY2Vzc29yLWl0ZW0vdGV4dC1wcm9jZXNzb3ItaXRlbS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFvQixFQUFBOztBQUd0QjtFQUNFLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGVBQWU7RUFDZixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb3JlL3Byb2Nlc3Nvci90ZXh0L3RleHQtcHJvY2Vzc29yLWhhbmRsZXJzLWxpc3QvdGV4dC1wcm9jZXNzb3ItaXRlbS90ZXh0LXByb2Nlc3Nvci1pdGVtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZGRpbmcwe1xuICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbn1cblxubWF0LWNhcmQtdGl0bGV7XG4gIG1hcmdpbjogMCAwIDAgMTZweDtcbn1cblxuLnNlbWFmb3J7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgY29sb3I6ICMxYWNiMWU7XG59XG4iXX0= */\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport TextProcessorHandler from \"../../models/TextProcessorHandler\";\nimport Channel from \"../../../../bus/Сhannel\";\nimport {MessagingBusService} from \"../../../../api\";\n\n\n@Component({\n  selector: 'text-processor-handler-item',\n  templateUrl: './text-processor-item.component.html',\n  styleUrls: ['./text-processor-item.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class TextProcessorHandlerItemComponent{\n\n  @Input() textProcessorHandler: TextProcessorHandler;\n\n  constructor(private messagingBusService: MessagingBusService) {\n\n  }\n\n  edit(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_EDIT_TEXT_HANDLER_PROCESSOR_DIALOG,\n      data:{textHandlerId: this.textProcessorHandler.id}});\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Список обработчиков текста</span>\\n      <span fxFlex=\\\"100%\\\"></span>\\n      <span fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"end\\\">\\n        <button mat-button (click)=\\\"add()\\\">\\n          <mat-icon aria-label=\\\"Добавить обработчик\\\">playlist_add</mat-icon>\\n          Добавить обработчик\\n        </button>\\n      </span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-list>\\n    <text-processor-handler-item *ngFor=\\\"let textProcessorHandler of textProcessorHandlers\\\"\\n                   [textProcessorHandler]=\\\"textProcessorHandler\\\"></text-processor-handler-item>\\n  </mat-list>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvcHJvY2Vzc29yL3RleHQvdGV4dC1wcm9jZXNzb3ItaGFuZGxlcnMtbGlzdC90ZXh0LXByb2Nlc3NvcnMtaGFuZGxlcnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnDestroy, ViewEncapsulation} from '@angular/core';\n\nimport {Subscription} from \"rxjs\";\nimport {TextProcessorsHandlersService} from \"../services/text-processors-handlers.service\";\nimport TextProcessorHandler from \"../models/TextProcessorHandler\";\nimport {MessagingBusService} from \"../../../api\";\nimport Channel from \"../../../bus/Сhannel\";\n\n@Component({\n  selector: 'text-processors-list',\n  templateUrl: './text-processors-handlers-list.component.html',\n  styleUrls: ['./text-processors-handlers-list.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class TextProcessorsHandlersListComponent implements OnDestroy{\n\n  private textProcessorHandlers: TextProcessorHandler[];\n  private textProcessorHandlersSubscriprion: Subscription;\n\n  constructor(private messagingBusService: MessagingBusService,\n              private textProcessorsHandlersService: TextProcessorsHandlersService) {\n\n    this.getList();\n    this.textProcessorHandlersSubscriprion = this.messagingBusService.getMessage().subscribe(message => {\n      if(message.channel == Channel.TEXT_HANDLER_PROCESSORS_WERE_UPDATED){\n        this.getList();\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.textProcessorHandlersSubscriprion.unsubscribe();\n  }\n\n  add(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_ADD_TEXT_HANDLER_PROCESSOR_DIALOG});\n  }\n\n  getList(){\n    this.textProcessorsHandlersService.getAll().subscribe(handlers => {\n      this.textProcessorHandlers = handlers;\n    });\n  }\n\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Настройки</span>\\n      <span fxFlex=\\\"100%\\\"></span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-card *ngIf=\\\"version != null\\\">\\n    <mat-card-title>Версия</mat-card-title>\\n    <mat-card-content>\\n      {{version}}\\n    </mat-card-content>\\n  </mat-card>\\n\\n  <mat-card>\\n    <mat-card-title>Автоматическое обновление</mat-card-title>\\n    <mat-card-content>\\n      Вы можете принудительно запустить процесс обновления.\\n      Приложение попытается скачать новую версию и самостоятельно обновиться.\\n      Во время процесса обновления, приложение временно будет недоступно.\\n      Есть <b>риск</b>, что приложение <b>НЕ</b> сможет пройти все шаги обновления и его <b>придется запустить в ручную</b>\\n    </mat-card-content>\\n    <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"update()\\\" fxLayoutAlign=\\\"start\\\">\\n        <mat-icon aria-label=\\\"Обновить\\\">system_update_alt</mat-icon>\\n        Запустить обновление\\n      </button>\\n    </mat-card-actions>\\n  </mat-card>\\n\\n\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input} from '@angular/core';\nimport {SettingsService} from \"./settings.service\";\n\n\n@Component({\n  selector: 'settings-component',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent {\n\n  private version: string;\n\n  constructor(private settingsService: SettingsService) {\n    settingsService.info().subscribe(res => {\n      this.version = res.build.version;\n    });\n  }\n\n  public update():void {\n    this.settingsService.updateApplication().subscribe(res => {\n      console.log(res)\n    });\n  }\n\n\n}\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {Config} from \"../../config\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class SettingsService {\n\n  private headers = {headers:new HttpHeaders({'Content-Type': 'application/json'})};\n  private url;\n  private actuator;\n\n  constructor(@Inject(HttpClient) private http: HttpClient,\n              private config: Config) {\n    this.url = config.api;\n    this.actuator = config.root+'/actuator/info';\n  }\n\n  updateApplication(): Observable<any> {\n   return this.http\n      .post(this.url+'/run-auto-update', {}, this.headers);\n  }\n\n  info(): Observable<any> {\n    return this.http.get(this.actuator, this.headers);\n  }\n\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Новый веб-пользователь</h2>\\n  <button mat-icon-button (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltip=\\\"Закрыть окно\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content>\\n  <web-user-form (onSubmitEvent)=\\\"addWebUser($event)\\\"\\n                      submitButtonText=\\\"Добавить веб-пользователя\\\">\\n  </web-user-form>\\n</mat-dialog-content>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvd2ViLXVzZXJzL2FkZC13ZWItdXNlci9hZGQtd2ViLXVzZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport {WebUsersService} from \"../services/web-users.service\";\nimport WebUser from \"../models/WebUser\";\n\n\n@Component({\n  selector: 'add-web-user',\n  templateUrl: './add-web-user.component.html',\n  styleUrls: ['./add-web-user.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class AddWebUserComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddWebUserComponent>,\n              private webUsersService: WebUsersService,\n              private snackBar: MatSnackBar) { }\n\n  addWebUser(webUser: WebUser):void{\n    this.webUsersService.add(webUser)\n      .subscribe( user => {\n        this.dialogRef.close();\n        this.snackBar.open(\"Пользователь добавлен\",'',{\n          duration: 3000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n      });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Редактировать: {{webUser.name}} </h2>\\n  <button mat-icon-button (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltip=\\\"Закрыть окно\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content *ngIf=\\\"webUser\\\">\\n  <web-user-form (onSubmitEvent)=\\\"editWebUser($event)\\\"\\n                      [initial]=\\\"webUser\\\"\\n                      submitButtonText=\\\"Сохранить изменения\\\">\\n    <div class=\\\"ng-content-bottom-buttons\\\">\\n      <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"deleteWebUser()\\\">Удалить пользователя</button>\\n    </div>\\n\\n  </web-user-form>\\n</mat-dialog-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvd2ViLXVzZXJzL2VkaXQtd2ViLXVzZXIvZWRpdC13ZWItdXNlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport {WebUsersService} from \"../services/web-users.service\";\nimport WebUser from '../models/WebUser';\n\n@Component({\n  selector: 'edit-web-user',\n  templateUrl: './edit-web-user.component.html',\n  styleUrls: ['./edit-web-user.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class EditWebUserComponent {\n\n  private webUser: WebUser;\n  constructor(public dialogRef: MatDialogRef<EditWebUserComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private webUsersService: WebUsersService,\n              private snackBar: MatSnackBar) {\n       this.webUser = data.dbConnection;\n  }\n\n  editWebUser(webUser: WebUser ):void{\n    this.webUsersService.update(webUser)\n      .subscribe( user => {\n        this.snackBar.open(\"Изменения сохранены\",'',{\n          duration: 3000,\n          panelClass:'colorGreen',\n          horizontalPosition:'right'\n        });\n      });\n  }\n\n  deleteWebUser(){\n    this.webUsersService.delete(this.webUser.id)\n      .subscribe( user => {\n      this.dialogRef.close();\n      this.snackBar.open(\"Пользователь удален\",'',{\n        duration: 3000,\n        panelClass:'colorGreen',\n        horizontalPosition:'right'\n      });\n    });;\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n}\n","export default class WebUser {\n  id: string;\n  name: string;\n  username: string;\n  password:string;\n}\n","import {MatDialog} from \"@angular/material\";\nimport {AddWebUserComponent} from \"../add-web-user/add-web-user.component\";\nimport {Subscription} from 'rxjs';\nimport Channel from \"../../bus/Сhannel\";\n\nimport {EditWebUserComponent} from \"../edit-web-user/edit-web-user.component\";\nimport {WebUsersService} from \"./web-users.service\";\nimport {MessagingBusService} from \"../../api\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class WebUsersBus {\n\n  subscription: Subscription;\n\n  constructor(@Inject(MatDialog)public dialog: MatDialog,\n              private messagingBusService: MessagingBusService,\n              private webUsersService: WebUsersService) {\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n\n      if(message.channel == Channel.OPEN_ADD_WEB_USER_DIALOG){\n        this.openAddUserDialog();\n      }else if(message.channel == Channel.OPEN_EDIT_WEB_USER_DIALOG){\n          this.openEditUserDialog(message.data.webUserId);\n      }\n\n    });\n  }\n\n  openAddUserDialog(): void {\n    let dialogRef = this.dialog.open(AddWebUserComponent, {\n      width: '700px',\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.messagingBusService.sendMessage({channel: Channel.WEB_USERS_WERE_UPDATED})\n    });\n  }\n\n\n  openEditUserDialog(webUserId:string): void {\n    this.webUsersService.get(webUserId)\n      .subscribe(db => {\n        let dialogRef = this.dialog.open(EditWebUserComponent, {\n          width: '700px',\n          data:{dbConnection: db}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          this.messagingBusService.sendMessage({channel: Channel.WEB_USERS_WERE_UPDATED})\n        });\n\n      });\n  }\n\n\n}\n","import WebUser from \"../models/WebUser\";\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {Config} from \"../../../config\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class WebUsersService {\n\n  private headers = {headers:new HttpHeaders({'Content-Type': 'application/json'})};\n  private urlWebUsers;\n\n  constructor(@Inject(HttpClient) private http: HttpClient,\n             private config: Config) {\n    this.urlWebUsers = config.api+'/web-users';\n  }\n\n  add(db:WebUser): Observable<WebUser> {\n   return this.http\n      .post<WebUser>(this.urlWebUsers, db, this.headers);\n  }\n\n  getAll(): Observable<WebUser[]>{\n    return this.http.get<WebUser[]>(this.urlWebUsers,this.headers);\n  }\n\n  get(userId: string): Observable<WebUser> {\n    return this.http\n      .get<WebUser>(this.urlWebUsers+`/${userId}`);\n  }\n\n  delete(userId: string): Observable<any> {\n    return this.http\n      .delete(this.urlWebUsers+`/${userId}`);\n  }\n\n  update(db:WebUser): Observable<WebUser> {\n    return this.http\n      .put<WebUser>(this.urlWebUsers+`/${db.id}`, db, this.headers);\n  }\n\n}\n","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #webUserForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Фаимилия Имя пользователя\\\"\\n           id=\\\"name\\\" name=\\\"name\\\"\\n           [(ngModel)]=\\\"webUser.name\\\"\\n           required\\n           #name=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"name.errors && (name.dirty || name.touched) && name.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Login пользователя\\\"\\n           id=\\\"username\\\" name=\\\"username\\\"\\n           [(ngModel)]=\\\"webUser.username\\\"\\n           required\\n           #username=\\\"ngModel\\\"/>\\n    <mat-error *ngIf=\\\"username.errors && (username.dirty || username.touched) && username.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Пароль\\\"\\n           [type]=\\\"show ?'text':'password'\\\"\\n           id=\\\"password\\\" name=\\\"password\\\"\\n           [(ngModel)]=\\\"webUser.password\\\"\\n           required #password=\\\"ngModel\\\"/>\\n    <mat-icon matSuffix (click)=\\\"show = !show\\\">{{show ?'visibility_off': 'visibility' }}</mat-icon>\\n    <mat-error *ngIf=\\\"password.errors && (password.dirty || password.touched) && password.errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <div fxLayout fxFlexAlign=\\\"center\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\n              [disabled]=\\\"!webUserForm.form.valid\\\">{{submitButtonText}}</button>\\n    <ng-content select=\\\".ng-content-bottom-buttons\\\"></ng-content>\\n  </div>\\n\\n</form>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvd2ViLXVzZXJzL3dlYi11c2VyLWZvcm0vd2ViLXVzZXItZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport WebUser from '../models/WebUser';\n\n@Component({\n  selector: 'web-user-form',\n  templateUrl: './web-user-form.component.html',\n  styleUrls: ['./web-user-form.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class WebUserFormComponent {\n\n  @Output() onSubmitEvent: EventEmitter<WebUser> = new EventEmitter();\n  @Input()  initial: WebUser;\n  @Input()  submitButtonText: string;\n\n  private webUser: WebUser = new WebUser();\n\n  constructor() {\n  }\n\n  onSubmit(): void {\n    this.onSubmitEvent.emit(this.webUser);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['initial']) {\n      if(this.initial != null && this.initial != undefined){\n        this.webUser = this.initial;\n      }\n    }\n  }\n\n}\n","module.exports = \"<mat-list-item style=\\\"background-color: #fff;\\\">\\n  <span matLine> <b>{{webUser.name}}</b></span>\\n  <button mat-icon-button (click)=\\\"edit()\\\">\\n    <mat-icon aria-label=\\\"Редактировать\\\">edit</mat-icon>\\n  </button>\\n</mat-list-item>\\n<mat-divider></mat-divider>\\n\"","module.exports = \".padding0 {\\n  padding: 0 !important; }\\n\\nmat-card-title {\\n  margin: 0 0 0 16px; }\\n\\n.semafor {\\n  font-size: 17px;\\n  color: #1acb1e; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGVrc2FuZHJzZXJkdWtvdi9wcm9qZWN0cy9zdXBwb3J0LXRlcm1pbmFsLWRldi9zdXBwb3J0LXRlcm1pbmFsL3VpL3NyYy9hcHAvY29yZS93ZWItdXNlcnMvd2ViLXVzZXJzLWxpc3Qvd2ViLXVzZXItaXRlbS93ZWItdXNlci1pdGVtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQW9CLEVBQUE7O0FBR3RCO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsZUFBZTtFQUNmLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvcmUvd2ViLXVzZXJzL3dlYi11c2Vycy1saXN0L3dlYi11c2VyLWl0ZW0vd2ViLXVzZXItaXRlbS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYWRkaW5nMHtcbiAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG59XG5cbm1hdC1jYXJkLXRpdGxle1xuICBtYXJnaW46IDAgMCAwIDE2cHg7XG59XG5cbi5zZW1hZm9ye1xuICBmb250LXNpemU6IDE3cHg7XG4gIGNvbG9yOiAjMWFjYjFlO1xufVxuIl19 */\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport Channel from \"../../../bus/Сhannel\";\nimport WebUser from \"../../models/WebUser\";\nimport {MessagingBusService} from \"../../../api\";\n\n\n@Component({\n  selector: 'web-user-item',\n  templateUrl: './web-user-item.component.html',\n  styleUrls: ['./web-user-item.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class WebUserItemComponent{\n\n  @Input() webUser: WebUser;\n\n  constructor(private messagingBusService: MessagingBusService) {\n\n  }\n\n  edit(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_EDIT_WEB_USER_DIALOG, data:{webUserId: this.webUser.id}});\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Список веб пользователей</span>\\n      <span fxFlex=\\\"100%\\\"></span>\\n      <span fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"end\\\">\\n        <button mat-button (click)=\\\"add()\\\">\\n          <mat-icon aria-label=\\\"Добавить веб-пользователя\\\">playlist_add</mat-icon>\\n          Добавить веб-пользователя\\n        </button>\\n      </span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-list>\\n    <web-user-item *ngFor=\\\"let webUser of webUsersList\\\" [webUser]=\\\"webUser\\\"></web-user-item>\\n  </mat-list>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvd2ViLXVzZXJzL3dlYi11c2Vycy1saXN0L3dlYi11c2Vycy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnDestroy, ViewEncapsulation} from '@angular/core';\n\nimport {Subscription} from \"rxjs\";\n\n\nimport WebUser from \"../models/WebUser\";\nimport Channel from \"../../bus/Сhannel\";\nimport {WebUsersService} from \"../services/web-users.service\";\nimport {MessagingBusService} from \"../../api\";\n\n\n@Component({\n  selector: 'web-users-list',\n  templateUrl: './web-users-list.component.html',\n  styleUrls: ['./web-users-list.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class WebUsersListComponent implements OnDestroy{\n\n  private webUsersList: WebUser[];\n  private webUsersListSubscription: Subscription;\n\n  constructor(private messagingBusService: MessagingBusService,\n              private webUsersService: WebUsersService) {\n\n    this.getDbsList();\n    this.webUsersListSubscription = this.messagingBusService.getMessage().subscribe(message => {\n      if(message.channel == Channel.WEB_USERS_WERE_UPDATED){\n        this.getDbsList();\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.webUsersListSubscription.unsubscribe();\n  }\n\n  add(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_ADD_WEB_USER_DIALOG});\n  }\n\n  getDbsList(){\n    this.webUsersService.getAll().subscribe(users => {\n      this.webUsersList = users;\n    });\n  }\n\n\n}\n","class Channel{\n\n    public static OPEN_ADD_DATA_FORM_DIALOG = \"OPEN_ADD_DATA_FORM_DIALOG\";\n    public static OPEN_EDIT_DATA_FORM_DIALOG = \"OPEN_EDIT_DATA_FORM_DIALOG\";\n    public static DATA_FORMS_WERE_UPDATED = \"DATA_FORMS_WERE_UPDATED\";\n    public static DB_CONNECTIONS_WERE_UPDATED = \"DB_CONNECTIONS_WERE_UPDATED\";\n\n}\n\nexport default Channel;\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ExecuteDataFormComponent} from \"./forms/execute-data-form/execute-data-form.component\";\nimport {DataFormResolver} from \"./forms/services/data-form.resolver\";\nimport {MainComponent} from \"../main.component\";\nimport {AuthGuard} from \"../login/auth.guard\";\nimport {DataFormsListComponent} from \"./forms/data-forms-list/data-forms-list.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:  MainComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'data-forms', component: DataFormsListComponent,\n        children: [\n          { path: ':formId/execute',\n            resolve: {dataForm: DataFormResolver},\n            component: ExecuteDataFormComponent }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DataFormsRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n\nimport {DataFormsListComponent} from \"./forms/data-forms-list/data-forms-list.component\";\nimport {DataFormsService} from \"./forms/services/data-forms.service\";\nimport {DataFormsRoutingModule} from \"./data-forms-routing.module\";\nimport {DataFormItemComponent} from \"./forms/data-forms-list/data-form-item/data-form-item.component\";\nimport {AddDataFromComponent} from \"./forms/add-data-form/add-data-form.component\";\nimport {EditDataFormComponent} from \"./forms/edit-data-form/edit-data-form.component\";\nimport {DataFormsBus} from \"./forms/services/data-forms.bus\";\nimport {DataFormFormComponent} from \"./forms/data-form-form/data-form-form.component\";\n\nimport {CodemirrorModule} from '@ctrl/ngx-codemirror';\nimport {DataFormParametersComponent} from \"./forms/data-form-form/parameters/data-form-parameters.component\";\nimport {DataFormParameterItemComponent} from \"./forms/data-form-form/parameters/data-form-parameter-item.component\";\nimport {DataFormStepItemComponent} from \"./forms/data-form-form/steps/data-form-step-item.component\";\nimport {DataFormStepsComponent} from \"./forms/data-form-form/steps/data-form-steps.component\";\nimport {ExecuteDataFormComponent} from \"./forms/execute-data-form/execute-data-form.component\";\nimport {DataFormResolver} from \"./forms/services/data-form.resolver\";\nimport {DataFormExecuteParametersComponent} from \"./forms/execute-data-form/parameters-values/data-form-execute-parameters.component\";\nimport {StringParameterFieldComponent} from \"./forms/execute-data-form/parameters-values/string-parameter-field.component\";\nimport {DataFormResultsComponent} from \"./forms/data-form-form/results/data-form-results.component\";\nimport {TableResultsComponent} from \"./forms/data-form-form/results/types/data-form-table-results.component\";\nimport {DataFormViewResultsComponent} from \"./forms/execute-data-form/results/data-form-view-results.component\";\nimport {AngularMaterialModule} from \"../angular.material.module\";\n\n\n@NgModule({\n  imports: [\n    CodemirrorModule,\n    CommonModule,\n    DataFormsRoutingModule,\n    AngularMaterialModule\n  ],\n  providers: [DataFormsService, DataFormResolver, DataFormsBus, DataFormsService],\n  declarations: [\n    AddDataFromComponent, DataFormFormComponent, EditDataFormComponent,\n    DataFormParametersComponent, DataFormParameterItemComponent, DataFormStepsComponent,\n    DataFormStepItemComponent, DataFormResultsComponent, TableResultsComponent,\n    ExecuteDataFormComponent,\n    DataFormViewResultsComponent,\n    DataFormsListComponent,\n    DataFormItemComponent,\n    DataFormExecuteParametersComponent,\n    StringParameterFieldComponent\n  ],\n  entryComponents: [AddDataFromComponent, EditDataFormComponent]\n})\nexport class DataFormsModule {\n  constructor(private dataFormsBus: DataFormsBus) {\n  }\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Новая форма запроса</h2>\\n  <button mat-icon-button (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltip=\\\"Закрыть окно\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content>\\n  <data-form-form (onSubmitEvent)=\\\"add($event)\\\"\\n                      submitButtonText=\\\"Добавить форму\\\">\\n  </data-form-form>\\n</mat-dialog-content>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGEtZm9ybXMvZm9ybXMvYWRkLWRhdGEtZm9ybS9hZGQtZGF0YS1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport DataForm from \"../models/DataForm\";\nimport {DataFormsService} from \"../services/data-forms.service\";\n\n@Component({\n  selector: 'add-data-form',\n  templateUrl: './add-data-form.component.html',\n  styleUrls: ['./add-data-form.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class AddDataFromComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddDataFromComponent>,\n              private dataFormsService: DataFormsService,\n              private snackBar: MatSnackBar ) { }\n\n  add(form: DataForm):void{\n    this.dataFormsService.add(form)\n      .subscribe( command => {\n        this.dialogRef.close();\n          this.snackBar.open(\"Форма добавлена\", '', {\n              duration: 3000,\n              panelClass: 'colorGreen',\n              horizontalPosition: 'right'\n          });\n      });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n\n}\n","module.exports = \"<form [formGroup]=\\\"dataFormForm\\\" (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\">\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Наименование формы\\\"\\n           id=\\\"name\\\" name=\\\"name\\\"\\n           formControlName=\\\"name\\\"/>\\n    <mat-error *ngIf=\\\" (dataFormForm.controls['name'].dirty || dataFormForm.controls['name'].touched)\\n    && dataFormForm.controls['name'].errors && dataFormForm.controls['name'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex>\\n    <input matInput placeholder=\\\"Описание формы\\\"\\n           id=\\\"description\\\" name=\\\"description\\\"\\n           formControlName=\\\"description\\\"/>\\n    <mat-error *ngIf=\\\" (dataFormForm.controls['description'].dirty || dataFormForm.controls['description'].touched)\\n    && dataFormForm.controls['description'].errors && dataFormForm.controls['description'].errors.required\\\">\\n      Необходимое значение\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <!--Добавление параметров пользователя-->\\n  <data-form-parameters [parametersForms]=\\\"dataFormForm.controls['parameters']\\\"></data-form-parameters>\\n\\n  <!--  Добавление шагов формы-->\\n  <data-form-steps [stepsForms]=\\\"dataFormForm.controls['steps']\\\"></data-form-steps>\\n\\n  <!--  Добавление способа получения ответа -->\\n  <data-form-results [resultDescriptors]=\\\"dataFormForm.controls['resultDescriptors']\\\"></data-form-results>\\n\\n  <div fxLayout fxFlexAlign=\\\"center\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\n              [disabled]=\\\"dataFormForm.invalid\\\">{{submitButtonText}}</button>\\n    <ng-content select=\\\".ng-content-bottom-buttons\\\"></ng-content>\\n  </div>\\n\\n</form>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGEtZm9ybXMvZm9ybXMvZGF0YS1mb3JtLWZvcm0vZGF0YS1mb3JtLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, Input, OnDestroy, Output, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport DataForm from \"../models/DataForm\";\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n    selector: 'data-form-form',\n    templateUrl: './data-form-form.component.html',\n    styleUrls: ['./data-form-form.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormFormComponent implements OnDestroy {\n\n    @Output() onSubmitEvent: EventEmitter<DataForm> = new EventEmitter();\n    @Input() initial: DataForm;\n    @Input() submitButtonText: string;\n\n    private dataFormModel: DataForm = new DataForm();\n    private dataFormForm: FormGroup;\n\n\n    constructor(private fb: FormBuilder) {\n        this.initForm();\n    }\n\n    onSubmit(): void {\n        this.dataFormModel.name = this.dataFormForm.value.name;\n        this.dataFormModel.description = this.dataFormForm.value.description;\n        this.dataFormModel.parameters = this.dataFormForm.value.parameters;\n        this.dataFormModel.steps = this.dataFormForm.value.steps;\n        this.dataFormModel.resultDescriptors = this.dataFormForm.value.resultDescriptors;\n        this.onSubmitEvent.emit(this.dataFormModel);\n    }\n\n    initForm() {\n        this.dataFormForm = this.fb.group({\n            name: ['', Validators.required ],\n            description: ['', Validators.required ],\n            parameters: this.fb.array([]),\n            steps: this.fb.array([]),\n            resultDescriptors: this.fb.array([])\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['initial']) {\n            if (this.initial != null && this.initial != undefined) {\n                this.dataFormModel = this.initial;\n\n                let parametersFormsArray: FormArray = this.fb.array([])\n\n                if( Array.isArray(this.dataFormModel.parameters)\n                    && this.dataFormModel.parameters.length > 0){\n                    this.dataFormModel.parameters.forEach((v) => {\n                        parametersFormsArray.push(this.fb.group({\n                            label: [v.label, Validators.required ],  type: [ v.type, Validators.required ]\n                        }))\n                    })\n                }\n\n                let stepsFormsArray: FormArray = this.fb.array([])\n\n                if( Array.isArray(this.dataFormModel.steps)\n                    && this.dataFormModel.steps.length > 0){\n                    this.dataFormModel.steps.forEach((step) => {\n                        stepsFormsArray.push(this.fb.group({\n                            order: [step.order, Validators.required ],\n                            type: [step.type, Validators.required ],\n                            dataBaseId: [step.dataBaseId, Validators.required ],\n                            sql: [step.sql, Validators.required ]\n                        }))\n                    })\n                }\n\n\n                let resultsFormsArray: FormArray = this.fb.array([]);\n                if( Array.isArray(this.dataFormModel.resultDescriptors)\n                    && this.dataFormModel.resultDescriptors.length > 0){\n                    this.dataFormModel.resultDescriptors.forEach((result) => {\n\n                        let columns = this.fb.array([]);\n                        if( Array.isArray(result.columns)){\n                            result.columns.forEach((col) => {\n                                columns.push(this.fb.group({\n                                    order: [col.order],\n                                    header: [col.header, Validators.required],\n                                    resultPath: [col.resultPath, Validators.required],\n                                    joinRule: [col.joinRule, Validators.required]\n                                }));\n                            });\n                        }\n\n                        resultsFormsArray.push(this.fb.group({\n                            order: [result.order],\n                            type: [result.type, Validators.required ],\n                            columns: columns,\n                        }))\n                    })\n                }\n\n\n                this.dataFormForm = this.fb.group({\n                    name: [this.initial.name, Validators.required ],\n                    description: [this.initial.description, Validators.required ],\n                    parameters: parametersFormsArray,\n                    steps: stepsFormsArray,\n                    resultDescriptors: resultsFormsArray\n                });\n            }\n        }\n    }\n\n    ngOnDestroy() {\n\n    }\n\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\" [formGroup]=\\\"parameterForm\\\" >\\n\\n    <mat-card-content fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n\\n        <mat-form-field fxFlex=\\\"50%\\\">\\n            <input matInput placeholder=\\\"Наименование\\\"\\n                   id=\\\"parameterLabel\\\" name=\\\"parameterLabel\\\"\\n                   formControlName=\\\"label\\\"/>\\n            <mat-error *ngIf=\\\"(parameterForm.controls['label'].dirty || parameterForm.controls['label'].touched)\\n                     && parameterForm.controls['label'].errors && parameterForm.controls['label'].errors.required\\\">\\n                Необходимое значение\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"40%\\\">\\n            <mat-select placeholder=\\\"Тип\\\"\\n                        id=\\\"type\\\" name=\\\"type\\\"\\n                        formControlName=\\\"type\\\">\\n                <mat-option *ngFor=\\\"let parameterType of parametersTypes\\\" [value]=\\\"parameterType.type\\\">\\n                    {{ parameterType.name }}\\n                </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"(parameterForm.controls['type'].dirty || parameterForm.controls['type'].touched)\\n                     && parameterForm.controls['type'].errors && parameterForm.controls['type'].errors.required\\\">\\n                Необходимое значение\\n            </mat-error>\\n        </mat-form-field>\\n\\n    </mat-card-content>\\n\\n    <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n        <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"submitRemoveMe()\\\">\\n            Убрать\\n        </button>\\n    </mat-card-actions>\\n\\n</mat-card>\\n\"","import {Component, EventEmitter, Input, Output, ViewEncapsulation} from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'data-form-parameter-item',\n    templateUrl: './data-form-parameter-item.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormParameterItemComponent {\n\n    @Output() removeMeEvent: EventEmitter<number> = new EventEmitter();\n    @Input() parameterForm: FormGroup;\n\n    parametersTypes = [\n        {name: 'Строка', type: 'STRING_PARAMETER'},\n     //   {name: 'Число', type: 'INTEGER_PARAMETER'},\n    //    {name: 'Дата', type: 'DATE_PARAMETER'},\n  //      {name: 'Выборка из значений', type: 'SELECT_PARAMETER'},\n    ];\n\n    submitRemoveMe(): void {\n        this.removeMeEvent.emit();\n    }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n    <fieldset>\\n        <legend>Параметры запроса данных</legend>\\n        <div>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"\\n                    (click)=\\\"addParameter()\\\">\\n                Добавить параметр\\n            </button>\\n        </div>\\n        <br/>\\n\\n      <data-form-parameter-item\\n                *ngFor=\\\"let p of parametersForms.controls; let i = index\\\"\\n                (removeMeEvent)=\\\"dropParameter(i)\\\" [parameterForm]=\\\"p\\\">\\n        </data-form-parameter-item>\\n    </fieldset>\\n</div>\\n\\n\\n\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {FormArray, FormBuilder, Validators} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'data-form-parameters',\n    templateUrl: './data-form-parameters.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormParametersComponent {\n\n    @Input() parametersForms: FormArray;\n\n    constructor(private fb: FormBuilder) {\n\n    }\n\n    addParameter() {\n        this.parametersForms.push(this.fb.group({\n            label: ['', Validators.required ],  type: ['', Validators.required ]\n        }))\n    }\n\n    dropParameter(index: number) {\n        if (this.parametersForms.length > 0) {\n            this.parametersForms.removeAt(index);\n        }\n    }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n    <fieldset>\\n        <legend>В каком виде предоставлять результаты выполнения запроса</legend>\\n\\n        <div>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" [matMenuTriggerFor]=\\\"resultTypesMenu\\\">\\n                Добавить результат\\n            </button>\\n            <mat-menu #resultTypesMenu=\\\"matMenu\\\">\\n                <button type=\\\"button\\\" *ngFor=\\\"let resultType of resultsTypes\\\" (click)=\\\"addResult(resultType.type)\\\"\\n                        mat-menu-item>{{resultType.name}}\\n                </button>\\n            </mat-menu>\\n        </div>\\n        <br/>\\n\\n\\n        <mat-card class=\\\"mat-elevation-z4\\\" *ngFor=\\\"let resultForm of resultDescriptors.controls; let i = index\\\">\\n\\n            <!--строковый параметр-->\\n            <data-form-table-results *ngIf=\\\"resultForm.controls['type'].value == 'TABLE_DATE_FORM_RESULT'\\\"\\n                                    [tableResultForm]=\\\"resultForm\\\">\\n\\n            </data-form-table-results>\\n\\n                <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n                    <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"dropResult(i)\\\">\\n                        Удалить формат результата\\n                    </button>\\n                </mat-card-actions>\\n        </mat-card>\\n\\n\\n\\n    </fieldset>\\n</div>\\n\\n\\n\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {FormArray, FormBuilder, Validators} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'data-form-results',\n    templateUrl: './data-form-results.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\n\n//FIXME  это Result Descriptor\nexport class DataFormResultsComponent {\n\n    @Input() resultDescriptors: FormArray;\n\n    constructor(private fb: FormBuilder) {\n\n    }\n\n    resultsTypes = [\n        {name: 'В виде таблицы', type: 'TABLE_DATE_FORM_RESULT'}\n    ];\n\n    addResult(type: string){\n        this.resultDescriptors.push(this.fb.group({\n            order: [this.resultDescriptors.length+1, Validators.required ],\n            type: [type, Validators.required ]\n        }))\n    }\n\n    dropResult(index: number) {\n        if (this.resultDescriptors.length > 0) {\n            this.resultDescriptors.removeAt(index);\n        }\n    }\n\n}\n","module.exports = \"    <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" [formGroup]=\\\"tableResultForm\\\">\\n        <mat-card-title>Вернуть результат в ввиде таблицы</mat-card-title>\\n        <div>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"\\n                    (click)=\\\"addColumn()\\\">\\n                Добавить колонку\\n            </button>\\n        </div>\\n        <br/>\\n\\n        <div fxLayout=\\\"row\\\" *ngIf=\\\"tableResultForm.get('columns')\\\">\\n\\n            <div *ngFor=\\\"let column of tableResultForm.get('columns').controls; let i = index\\\" fxLayout=\\\"column\\\"  [formGroup]=\\\"column\\\">\\n\\n                <mat-form-field fxFlex=\\\"25%\\\">\\n                    <input matInput placeholder=\\\"Заголовок\\\"\\n                           id=\\\"header\\\" name=\\\"header\\\"\\n                           formControlName=\\\"header\\\"/>\\n                    <mat-error *ngIf=\\\"(column.controls['header'].dirty || column.controls['header'].touched)\\n                     && column.controls['header'].errors && column.controls['header'].errors.required\\\">\\n                        Необходимо указать\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field fxFlex=\\\"25%\\\">\\n                    <input matInput placeholder=\\\"Путь к значению\\\"\\n                           id=\\\"resultPath\\\" name=\\\"resultPath\\\"\\n                           formControlName=\\\"resultPath\\\"/>\\n                    <mat-error *ngIf=\\\"(column.controls['resultPath'].dirty || column.controls['resultPath'].touched)\\n                     && column.controls['resultPath'].errors && column.controls['resultPath'].errors.required\\\">\\n                        Необходимо указать\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field fxFlex=\\\"25%\\\">\\n                    <input matInput placeholder=\\\"Правило Join\\\"\\n                           id=\\\"joinRule\\\" name=\\\"joinRule\\\"\\n                           formControlName=\\\"joinRule\\\"/>\\n                    <mat-error *ngIf=\\\"(column.controls['joinRule'].dirty || column.controls['joinRule'].touched)\\n                     && column.controls['joinRule'].errors && column.controls['joinRule'].errors.required\\\">\\n                        Необходимо указать\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <div fxFlex=\\\"25%\\\">\\n                    <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"dropColumn(i)\\\">\\n                        Убрать\\n                    </button>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n    </mat-card-content>\\n\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'data-form-table-results',\n    templateUrl: './data-form-table-results.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class TableResultsComponent {\n\n    @Input() tableResultForm: FormGroup;\n\n    constructor(private fb: FormBuilder) {\n\n    }\n\n    addColumn() {\n       let columns = <FormArray>this.tableResultForm.controls['columns']\n       if(columns == null){\n            columns =  this.fb.array([]);\n            this.tableResultForm.addControl('columns', columns);\n       }\n       columns.push(this.fb.group({\n            order: [columns.length+1, Validators.required ],\n            header: ['', Validators.required ],\n            resultPath: ['', Validators.required ],\n            joinRule: ['', Validators.required ]\n       }));\n    }\n\n    dropColumn(index: number) {\n        let columns: FormArray = <FormArray>this.tableResultForm.get('columns');\n        if (columns.length > 0) {\n            columns.removeAt(index);\n        }\n    }\n\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\" [formGroup]=\\\"stepForm\\\" >\\n\\n    <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\n\\n        <!--TODO нужно это перенести в отдельные компоненты, который сами по себе несут поля для конкретных шагов, по аналогии с DataFOrmResult-->\\n        <mat-card-title>{{stepForm.get('type').value}}</mat-card-title>\\n\\n        <mat-form-field>\\n            <mat-select placeholder=\\\"База данных\\\"\\n                        id=\\\"dataBaseId\\\" name=\\\"dataBaseId\\\"\\n                        formControlName=\\\"dataBaseId\\\">\\n                <mat-option *ngFor=\\\"let bd of dataBases\\\" [value]=\\\"bd.id\\\">\\n                    {{ bd.name }}\\n                </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"(stepForm.controls['dataBaseId'].dirty || stepForm.controls['dataBaseId'].touched)\\n                     && stepForm.controls['dataBaseId'].errors && stepForm.controls['dataBaseId'].errors.required\\\">\\n                Необходимое значение\\n            </mat-error>\\n        </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-codemirror formControlName=\\\"sql\\\"\\n                        id=\\\"sql\\\" name=\\\"sql\\\"\\n                        required\\n                        [options]=\\\"{\\n          theme: 'idea',\\n          mode: 'text/x-sql'\\n        }\\\" placeholder=\\\"Sql select\\\"></mat-codemirror>\\n        <mat-error *ngIf=\\\"(stepForm.controls['sql'].dirty || stepForm.controls['sql'].touched)\\n                     && stepForm.controls['sql'].errors && stepForm.controls['sql'].errors.required\\\">\\n          Необходимое значение\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </mat-card-content>\\n\\n    <mat-card-actions fxLayoutAlign=\\\"end\\\">\\n        <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"submitRemoveMe()\\\">\\n            Убрать\\n        </button>\\n    </mat-card-actions>\\n\\n</mat-card>\\n\"","import {Component, EventEmitter, Input, Output, ViewEncapsulation} from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport DbConnection from \"../../models/DbConnection\";\n\n\n@Component({\n    selector: 'data-form-step-item',\n    templateUrl: './data-form-step-item.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormStepItemComponent {\n\n    @Output() removeMeEvent: EventEmitter<number> = new EventEmitter();\n    @Input() stepForm: FormGroup;\n    @Input() dataBases: DbConnection[];\n\n\n    submitRemoveMe(): void {\n        this.removeMeEvent.emit();\n    }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n    <fieldset>\\n        <legend>Шаги выполнения запроса</legend>\\n\\n        <div>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" [matMenuTriggerFor]=\\\"stepsTypesMenu\\\">\\n                Добавить шаг\\n            </button>\\n            <mat-menu #stepsTypesMenu=\\\"matMenu\\\">\\n                <button type=\\\"button\\\" *ngFor=\\\"let stepType of stepsTypes\\\" (click)=\\\"addStep(stepType.type)\\\"\\n                        mat-menu-item>{{stepType.name}}\\n                </button>\\n            </mat-menu>\\n        </div>\\n        <br/>\\n        <data-form-step-item [dataBases]=\\\"dataBases\\\"\\n                *ngFor=\\\"let s of stepsForms.controls; let i = index\\\"\\n                (removeMeEvent)=\\\"dropStep(i)\\\" [stepForm]=\\\"s\\\">\\n        </data-form-step-item>\\n    </fieldset>\\n</div>\\n\\n\\n\"","import {Component, Input, OnDestroy, ViewEncapsulation} from '@angular/core';\nimport {FormArray, FormBuilder, Validators} from \"@angular/forms\";\nimport {DataFormsService} from \"../../services/data-forms.service\";\nimport DbConnection from \"../../models/DbConnection\";\nimport * as Rx from \"rxjs\";\n\n@Component({\n    selector: 'data-form-steps',\n    templateUrl: './data-form-steps.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormStepsComponent implements OnDestroy{\n\n    @Input() stepsForms: FormArray;\n\n    private dataBaseSubscription: Rx.Subscription;\n    private dataBases: DbConnection[] = new Array();\n\n    constructor(private fb: FormBuilder,\n                private dataFormsService: DataFormsService) {\n        this.dataBaseSubscription = this.dataFormsService.dataBasesSubject.subscribe((dbs)=>{\n            this.dataBases = dbs;\n        });\n    }\n\n    stepsTypes = [\n        {name: 'Выполнить SQL селект', type: 'SQL_REQUEST_DATE_FORM_STEP'}\n    ];\n\n    addStep(type: string){\n        this.stepsForms.push(this.fb.group({\n            order: [this.stepsForms.length+1, Validators.required ],\n            type: [type, Validators.required ],\n            dataBaseId: ['', Validators.required ],\n            sql: ['', Validators.required ]\n        }))\n    }\n\n\n    dropStep(index: number) {\n        if (this.stepsForms.length > 0) {\n            this.stepsForms.removeAt(index);\n        }\n    }\n\n    ngOnDestroy() {\n        this.dataBaseSubscription.unsubscribe();\n    }\n}\n","module.exports = \"<mat-list-item style=\\\"background-color: #fff;\\\">\\n  <span matLine> <a [routerLink]=\\\"dataForm.id+'/execute'\\\" > {{dataForm.name}} </a></span>\\n  <button mat-icon-button (click)=\\\"edit()\\\">\\n    <mat-icon aria-label=\\\"Редактировать\\\">edit</mat-icon>\\n  </button>\\n</mat-list-item>\\n<mat-divider></mat-divider>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGEtZm9ybXMvZm9ybXMvZGF0YS1mb3Jtcy1saXN0L2RhdGEtZm9ybS1pdGVtL2RhdGEtZm9ybS1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport Channel from \"../../../bus/Сhannel\";\nimport DataForm from \"../../models/DataForm\";\nimport {MessagingBusService} from \"../../../../core/api\";\n\n\n@Component({\n  selector: 'data-form-item',\n  templateUrl: './data-form-item.component.html',\n  styleUrls: ['./data-form-item.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormItemComponent{\n\n  @Input() dataForm: DataForm;\n\n  constructor(private messagingBusService: MessagingBusService) {\n\n  }\n\n  edit(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_EDIT_DATA_FORM_DIALOG, data:{id: this.dataForm.id}});\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Список форм запроса данных</span>\\n      <span fxFlex=\\\"100%\\\"></span>\\n      <span fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"end\\\">\\n        <button mat-button (click)=\\\"add()\\\">\\n          <mat-icon aria-label=\\\"Добавить форму\\\">playlist_add</mat-icon>\\n          Добавить новую форму\\n        </button>\\n      </span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-list>\\n    <data-form-item *ngFor=\\\"let dataForm of dataFormsList\\\" [dataForm]=\\\"dataForm\\\"></data-form-item>\\n  </mat-list>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGEtZm9ybXMvZm9ybXMvZGF0YS1mb3Jtcy1saXN0L2RhdGEtZm9ybXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnDestroy, ViewEncapsulation} from '@angular/core';\n\nimport {Subscription} from \"rxjs\";\n\n\nimport DataForm from \"../models/DataForm\";\nimport Channel from \"../../bus/Сhannel\";\nimport {DataFormsService} from \"../services/data-forms.service\";\nimport {MessagingBusService} from \"../../../core/api\";\n\n\n@Component({\n  selector: 'data-forms-list',\n  templateUrl: './data-forms-list.component.html',\n  styleUrls: ['./data-forms-list.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormsListComponent implements OnDestroy{\n\n  private dataFormsList: DataForm[];\n  private dataFormsSubscription: Subscription;\n\n  constructor(private messagingBusService: MessagingBusService,\n              private dataFormsService: DataFormsService) {\n\n    this.getDataFormsList();\n    this.dataFormsSubscription = this.messagingBusService.getMessage().subscribe(message => {\n      if(message.channel == Channel.DATA_FORMS_WERE_UPDATED){\n        this.getDataFormsList();\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.dataFormsSubscription.unsubscribe();\n  }\n\n  add(){\n    this.messagingBusService.sendMessage({channel:Channel.OPEN_ADD_DATA_FORM_DIALOG});\n  }\n\n  getDataFormsList(){\n    this.dataFormsService.getAll().subscribe(dataForms => {\n      this.dataFormsList = dataForms;\n    });\n  }\n\n\n}\n","module.exports = \"<div fxLayout fxLayoutAlign=\\\"start center\\\">\\n  <h2 fxFlex=\\\"100%\\\" mat-dialog-title>Редактировать: {{dataForm.name}} </h2>\\n  <button mat-icon-button (click)=\\\"close()\\\">\\n    <mat-icon aria-label=\\\"Закрыть\\\"\\n              matTooltip=\\\"Закрыть окно\\\"\\n              matTooltipPosition=\\\"above\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-dialog-content *ngIf=\\\"dataForm\\\">\\n\\n  <mat-slide-toggle\\n          color=\\\"primary\\\"\\n          (change)=\\\"changeState($event)\\\"\\n          [checked]=\\\"dataForm.state == 'ENABLED'\\\">\\n   <span *ngIf=\\\"dataForm.state == 'ENABLED'\\\">Включен</span>\\n   <span *ngIf=\\\"dataForm.state != 'ENABLED'\\\">Выключен</span>\\n  </mat-slide-toggle>\\n\\n  <data-form-form (onSubmitEvent)=\\\"edit($event)\\\"\\n                      [initial]=\\\"dataForm\\\"\\n                      submitButtonText=\\\"Сохранить изменения\\\">\\n\\n    <div class=\\\"ng-content-bottom-buttons\\\">\\n      <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"delete()\\\">Удалить форму</button>\\n    </div>\\n\\n  </data-form-form>\\n</mat-dialog-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGEtZm9ybXMvZm9ybXMvZWRpdC1kYXRhLWZvcm0vZWRpdC1kYXRhLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from \"@angular/material\";\nimport DataForm from \"../models/DataForm\";\nimport {DataFormsService} from \"../services/data-forms.service\";\n\n\n@Component({\n    selector: 'edit-data-form',\n    templateUrl: './edit-data-form.component.html',\n    styleUrls: ['./edit-data-form.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class EditDataFormComponent {\n\n    private dataForm: DataForm;\n\n    constructor(public dialogRef: MatDialogRef<EditDataFormComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any,\n                private dataFormsService: DataFormsService,\n                private snackBar: MatSnackBar) {\n        this.dataForm = data.dataForm;\n    }\n\n    edit(dataForm: DataForm): void {\n        console.log(dataForm);\n        this.dataFormsService.update(dataForm)\n            .subscribe(dataForm => {\n                this.snackBar.open(\"Изменения сохранены\", '', {\n                    duration: 3000,\n                    panelClass: 'colorGreen',\n                    horizontalPosition: 'right'\n                });\n            });\n    }\n\n    changeState(changeEvent: any) {\n        if(changeEvent.checked){\n            this.dataForm.state = 'ENABLED';\n        }else{\n            this.dataForm.state = 'DISABLED';\n        }\n    }\n\n    delete() {\n        this.dataFormsService.delete(this.dataForm.id)\n            .subscribe(command => {\n                this.dialogRef.close();\n                this.snackBar.open(\"Удалено\", '', {\n                    duration: 3000,\n                    panelClass: 'colorGreen',\n                    horizontalPosition: 'right'\n                });\n            });\n    }\n\n    close() {\n        this.dialogRef.close();\n    }\n\n}\n","module.exports = \"<form [formGroup]=\\\"executionRequestForm\\\" (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\">\\n\\n\\n\\n  <mat-accordion>\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          <h3>{{dataForm.name}}</h3>\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      {{dataForm.description}}\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n\\n   <!-- Заполняем вхдные параметры формы -->\\n  <data-form-execute-parameters\\n          *ngIf=\\\"executionRequestForm\\\"\\n          [parametersValues]=\\\"executionRequestForm.controls['parametersValues']\\\">\\n  </data-form-execute-parameters>\\n\\n  <div fxLayout fxFlexAlign=\\\"end\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!waitProccingFlag\\\"\\n            [disabled]=\\\"executionRequestForm.invalid\\\">Выполнить</button>\\n\\n    <button type=\\\"button\\\" *ngIf=\\\"waitProccingFlag\\\" (click)=\\\"stopRequest()\\\" mat-raised-button>Отменить запрос</button>\\n  </div>\\n\\n</form>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"waitProccingFlag\\\" >\\n  <mat-spinner  [diameter]=\\\"50\\\"></mat-spinner>\\n  <div>Запрос выполняется...</div>\\n</div>\\n<div fxLayout=\\\"column\\\">\\n  <data-form-view-results [dataForExecution]=\\\"dataForExecution\\\" style=\\\"margin: 10px;\\\"></data-form-view-results>\\n</div>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGEtZm9ybXMvZm9ybXMvZXhlY3V0ZS1kYXRhLWZvcm0vZXhlY3V0ZS1kYXRhLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\n\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {DataFormsService} from \"../services/data-forms.service\";\nimport DataFormExecuteRequest from \"../models/DataFormExecuteRequest\";\nimport {MatSnackBar} from \"@angular/material\";\nimport DataFormParameterValue from \"../models/DataFormParameterValue\";\nimport DataForExecution from \"../models/DataForExecution\";\nimport DataForm from \"../models/DataForm\";\n\n@Component({\n    selector: 'execute-data-form',\n    templateUrl: './execute-data-form.component.html',\n    styleUrls: ['./execute-data-form.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class ExecuteDataFormComponent {\n\n    private dataForm: DataForm;\n    private executionRequestForm: FormGroup;\n    private dataForExecution: DataForExecution;\n\n    private waitProccingFlag: boolean;\n\n    constructor(private route: ActivatedRoute,\n                private dataFormsService: DataFormsService,\n                private fb: FormBuilder,\n                private snackBar: MatSnackBar ) {\n        this.dataForm = route.snapshot.data['dataForm'];\n\n\n        let parametersValues: FormArray = this.fb.array([])\n\n        if( Array.isArray(this.dataForm.parameters)\n            && this.dataForm.parameters.length > 0){\n            this.dataForm.parameters.forEach((v) => {\n                parametersValues.push(this.fb.group({\n                    label: [v.label, Validators.required],\n                    value: ['', Validators.required],\n                    type: [v.type, Validators.required]\n                }));\n            });\n        }\n\n        this.executionRequestForm = this.fb.group({\n            parametersValues: parametersValues,\n        });\n\n    }\n\n\n    stopRequest(): void {\n        this.waitProccingFlag = false;\n    }\n\n\n    onSubmit(): void {\n        let request: DataFormExecuteRequest = new DataFormExecuteRequest();\n\n\n        let parametersValues: DataFormParameterValue[] = [];\n\n        if( Array.isArray(this.executionRequestForm.value.parametersValues)\n            && this.executionRequestForm.value.parametersValues.length > 0){\n            this.executionRequestForm.value.parametersValues.forEach((v) => {\n                parametersValues.push(\n                    new DataFormParameterValue(v.label, v.type, v.value)\n                );\n            });\n        }\n        request.parametersValues = parametersValues;\n        this.dataFormsService.execute(this.dataForm.id, request).subscribe( execution => {\n            this.snackBar.open(\"Запущено исполнение\", '', {\n                duration: 3000,\n                panelClass: 'colorGreen',\n                horizontalPosition: 'right'\n            });\n            //start cycle wait\n            this.waitProccingFlag = true;\n            this.waitResult(execution.id);\n        });;\n    }\n\n    waitResult(executionId:string,): void {\n        if(! this.waitProccingFlag){\n            return;\n        }\n        this.dataFormsService.getExecutionById(executionId).subscribe( execution => {\n            this.dataForExecution = execution;\n            if(execution.endStatus != 'OK'){\n                setTimeout(()=>{\n                    this.waitResult(execution.id);\n                }, 3000);\n            }else {\n                this.stopRequest();\n            }\n        });\n    }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" style=\\\"margin-top: 20px;\\\">\\n      <div *ngFor=\\\"let parameterValue of parametersValues.controls; let i = index\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" style=\\\"margin:10px;\\\">\\n             <!--строковый параметр-->\\n             <string-parameter-field *ngIf=\\\"parameterValue.controls['type'].value == 'STRING_PARAMETER'\\\"\\n                                     [stringParameter]=\\\"parameterValue\\\"></string-parameter-field>\\n      </div>\\n</div>\\n\\n\\n\"","import {Component, Input, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {FormArray, FormBuilder} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'data-form-execute-parameters',\n    templateUrl: './data-form-execute-parameters.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormExecuteParametersComponent {\n\n    @Input() parametersValues: FormArray;\n\n    constructor(private fb: FormBuilder) {\n        console.log(this.parametersValues);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n       console.log(changes);\n       console.log(this.parametersValues);\n    }\n\n}\n","module.exports = \"\\n<div *ngIf=\\\"stringParameter\\\" [formGroup]=\\\"stringParameter\\\">\\n   <label for=\\\"value\\\" style=\\\"font-size: 16px; font-weight: bolder; margin: 10px; \\\" >{{stringParameter.controls['label'].value }}</label>\\n   <input style=\\\"font-size: 16px;padding: 10px;\\\" id=\\\"value\\\" name=\\\"value\\\" formControlName=\\\"value\\\"/>\\n   <mat-error *ngIf=\\\"(stringParameter.controls['value'].dirty || stringParameter.controls['value'].touched)\\n                     && stringParameter.controls['value'].errors && stringParameter.controls['value'].errors.required\\\">\\n      Необходимое значение\\n   </mat-error>\\n</div>\"","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'string-parameter-field',\n    templateUrl: './string-parameter-field.component.html',\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class StringParameterFieldComponent {\n\n    @Input() stringParameter: FormGroup;\n\n    constructor(private fb: FormBuilder) {\n\n    }\n\n}\n","module.exports = \"<div class=\\\"divTable minimalistBlack\\\" *ngIf=\\\"showTable\\\">\\n    <div class=\\\"divTableHeading\\\">\\n        <div class=\\\"divTableRow\\\">\\n            <div class=\\\"divTableHead\\\"\\n                 *ngFor=\\\"let header of dataForExecution.dataFormExecutionResults[0].headers;\\\">{{header}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"divTableBody\\\">\\n        <div class=\\\"divTableRow\\\" *ngFor=\\\"let row of dataForExecution.dataFormExecutionResults[0].rows;\\\">\\n            <div class=\\\"divTableCell\\\" *ngFor=\\\"let v of row;\\\" >{{v}}</div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"div.minimalistBlack {\\n  border: 1px solid #333;\\n  width: 100%;\\n  text-align: left;\\n  border-collapse: collapse; }\\n\\n.divTable.minimalistBlack .divTableCell, .divTable.minimalistBlack .divTableHead {\\n  border: 1px solid #333;\\n  padding: 5px 4px; }\\n\\n.divTable.minimalistBlack .divTableBody .divTableCell {\\n  font-size: 13px; }\\n\\n.divTable.minimalistBlack .divTableHeading {\\n  background: #CFCFCF;\\n  background: -webkit-gradient(linear, left top, left bottom, from(#dbdbdb), color-stop(66%, #d3d3d3), to(#CFCFCF));\\n  background: linear-gradient(to bottom, #dbdbdb 0%, #d3d3d3 66%, #CFCFCF 100%);\\n  border-bottom: 1px solid #333; }\\n\\n.divTable.minimalistBlack .divTableHeading .divTableHead {\\n  font-size: 15px;\\n  font-weight: bold;\\n  color: #333;\\n  text-align: left; }\\n\\n.minimalistBlack .tableFootStyle {\\n  font-size: 14px;\\n  font-weight: bold;\\n  color: #111;\\n  border-top: 1px solid #333; }\\n\\n.minimalistBlack .tableFootStyle {\\n  font-size: 14px; }\\n\\n/* DivTable.com */\\n\\n.divTable {\\n  display: table; }\\n\\n.divTableRow {\\n  display: table-row; }\\n\\n.divTableHeading {\\n  display: table-header-group; }\\n\\n.divTableCell, .divTableHead {\\n  display: table-cell; }\\n\\n.divTableHeading {\\n  display: table-header-group; }\\n\\n.divTableFoot {\\n  display: table-footer-group; }\\n\\n.divTableBody {\\n  display: table-row-group; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGVrc2FuZHJzZXJkdWtvdi9wcm9qZWN0cy9zdXBwb3J0LXRlcm1pbmFsLWRldi9zdXBwb3J0LXRlcm1pbmFsL3VpL3NyYy9hcHAvZGF0YS1mb3Jtcy9mb3Jtcy9leGVjdXRlLWRhdGEtZm9ybS9yZXN1bHRzL2RhdGEtZm9ybS12aWV3LXJlc3VsdHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQix5QkFBeUIsRUFBQTs7QUFFM0I7RUFDRSxzQkFBc0I7RUFDdEIsZ0JBQWdCLEVBQUE7O0FBRWxCO0VBQ0UsZUFBZSxFQUFBOztBQUVqQjtFQUNFLG1CQUFtQjtFQUduQixpSEFBNkU7RUFBN0UsNkVBQTZFO0VBQzdFLDZCQUE2QixFQUFBOztBQUUvQjtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsV0FBVztFQUNYLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsV0FBVztFQUNYLDBCQUEwQixFQUFBOztBQUU1QjtFQUNFLGVBQWUsRUFBQTs7QUFFakIsaUJBQUE7O0FBQ0E7RUFBVyxjQUFjLEVBQUE7O0FBQ3pCO0VBQWUsa0JBQWtCLEVBQUE7O0FBQ2pDO0VBQW1CLDJCQUEyQixFQUFBOztBQUM5QztFQUErQixtQkFBbUIsRUFBQTs7QUFDbEQ7RUFBbUIsMkJBQTJCLEVBQUE7O0FBQzlDO0VBQWdCLDJCQUEyQixFQUFBOztBQUMzQztFQUFnQix3QkFBd0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RhdGEtZm9ybXMvZm9ybXMvZXhlY3V0ZS1kYXRhLWZvcm0vcmVzdWx0cy9kYXRhLWZvcm0tdmlldy1yZXN1bHRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2Lm1pbmltYWxpc3RCbGFjayB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMzMzM7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuLmRpdlRhYmxlLm1pbmltYWxpc3RCbGFjayAuZGl2VGFibGVDZWxsLCAuZGl2VGFibGUubWluaW1hbGlzdEJsYWNrIC5kaXZUYWJsZUhlYWQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjMzMzO1xuICBwYWRkaW5nOiA1cHggNHB4O1xufVxuLmRpdlRhYmxlLm1pbmltYWxpc3RCbGFjayAuZGl2VGFibGVCb2R5IC5kaXZUYWJsZUNlbGwge1xuICBmb250LXNpemU6IDEzcHg7XG59XG4uZGl2VGFibGUubWluaW1hbGlzdEJsYWNrIC5kaXZUYWJsZUhlYWRpbmcge1xuICBiYWNrZ3JvdW5kOiAjQ0ZDRkNGO1xuICBiYWNrZ3JvdW5kOiAtbW96LWxpbmVhci1ncmFkaWVudCh0b3AsICNkYmRiZGIgMCUsICNkM2QzZDMgNjYlLCAjQ0ZDRkNGIDEwMCUpO1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICNkYmRiZGIgMCUsICNkM2QzZDMgNjYlLCAjQ0ZDRkNGIDEwMCUpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZGJkYmRiIDAlLCAjZDNkM2QzIDY2JSwgI0NGQ0ZDRiAxMDAlKTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzM7XG59XG4uZGl2VGFibGUubWluaW1hbGlzdEJsYWNrIC5kaXZUYWJsZUhlYWRpbmcgLmRpdlRhYmxlSGVhZCB7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjMzMzO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLm1pbmltYWxpc3RCbGFjayAudGFibGVGb290U3R5bGUge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzExMTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMzMzM7XG59XG4ubWluaW1hbGlzdEJsYWNrIC50YWJsZUZvb3RTdHlsZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi8qIERpdlRhYmxlLmNvbSAqL1xuLmRpdlRhYmxleyBkaXNwbGF5OiB0YWJsZTsgfVxuLmRpdlRhYmxlUm93IHsgZGlzcGxheTogdGFibGUtcm93OyB9XG4uZGl2VGFibGVIZWFkaW5nIHsgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO31cbi5kaXZUYWJsZUNlbGwsIC5kaXZUYWJsZUhlYWQgeyBkaXNwbGF5OiB0YWJsZS1jZWxsO31cbi5kaXZUYWJsZUhlYWRpbmcgeyBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7fVxuLmRpdlRhYmxlRm9vdCB7IGRpc3BsYXk6IHRhYmxlLWZvb3Rlci1ncm91cDt9XG4uZGl2VGFibGVCb2R5IHsgZGlzcGxheTogdGFibGUtcm93LWdyb3VwO30iXX0= */\"","import {Component, Input, OnDestroy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport DataForExecution from \"../../models/DataForExecution\";\n\n\n@Component({\n    selector: 'data-form-view-results',\n    templateUrl: './data-form-view-results.component.html',\n    styleUrls: ['./data-form-view-results.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class DataFormViewResultsComponent implements OnDestroy {\n\n    @Input() dataForExecution: DataForExecution;\n    private showTable: boolean = false;\n\n    constructor() {\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['dataForExecution']) {\n            if (this.dataForExecution != null\n                && this.dataForExecution != undefined\n                && this.dataForExecution.endStatus == 'OK') {\n                this.showTable = true;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n\n    }\n\n}\n","export default class DataForExecution {\n    id: string;\n    endStatus: string;\n    dataFormExecutionResults: any;\n\n}\n","import DataFormResult from \"./DataFormResult\";\nimport DataFormStep from \"./DataFormStep\";\nimport DataFormParameter from \"./DataFormParameter\";\n\nexport default class DataForm {\n    id: string;\n    name: string;\n    description: string;\n    state: string;\n    parameters: DataFormParameter[];\n    steps: DataFormStep[];\n    resultDescriptors: DataFormResult[];\n}\n","import DataFormParameterValue from \"./DataFormParameterValue\";\n\nexport default class DataFormExecuteRequest {\n    parametersValues: DataFormParameterValue[];\n}\n","export default class DataFormParameterValue {\n    label: string;\n    type: string;\n\n    value: string;\n\n    constructor(label: string, type: string, value: string) {\n        this.label = label;\n        this.type = type;\n        this.value = value;\n    }\n}\n","import {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport DataForm from \"../models/DataForm\";\nimport {DataFormsService} from \"./data-forms.service\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class DataFormResolver implements Resolve<DataForm> {\n\n\n  constructor(@Inject(DataFormsService) private dataFormsService: DataFormsService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): any {\n      let formId = route.paramMap.get('formId');\n      return new Promise((resolve, reject) => {\n          this.dataFormsService.get(formId).subscribe(dataForm => {\n              resolve(dataForm);\n          });\n      });\n  }\n\n}\n","import {MatDialog} from \"@angular/material\";\n\nimport {Subscription} from 'rxjs';\nimport Channel from \"../../bus/Сhannel\";\n\n\nimport {DataFormsService} from \"./data-forms.service\";\nimport {AddDataFromComponent} from \"../add-data-form/add-data-form.component\";\nimport {EditDataFormComponent} from \"../edit-data-form/edit-data-form.component\";\nimport {MessagingBusService} from \"../../../core/api\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class DataFormsBus {\n\n  private subscription: Subscription;\n\n\n  constructor(@Inject(MatDialog) public dialog: MatDialog,\n              private messagingBusService: MessagingBusService,\n              private dataFormsService: DataFormsService) {\n    this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n\n      if(message.channel == Channel.OPEN_ADD_DATA_FORM_DIALOG){\n        this.openAddDialog();\n      }else if(message.channel == Channel.OPEN_EDIT_DATA_FORM_DIALOG){\n          this.openEditDialog(message.data.id);\n      }\n    });\n  }\n\n  openAddDialog(): void {\n    let dialogRef = this.dialog.open(AddDataFromComponent, {\n      width: '1000px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.messagingBusService.sendMessage({channel: Channel.DATA_FORMS_WERE_UPDATED})\n    });\n  }\n\n\n  openEditDialog(id:string): void {\n    this.dataFormsService.get(id)\n      .subscribe(dataForm => {\n        let dialogRef = this.dialog.open(EditDataFormComponent, {\n          width: '1000px',\n          data:{\n              dataForm: dataForm\n          }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          this.messagingBusService.sendMessage({channel: Channel.DATA_FORMS_WERE_UPDATED})\n        });\n\n      });\n  }\n\n}\n","import DataForm from \"../models/DataForm\";\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport * as Rx from \"rxjs\";\nimport {Observable} from \"rxjs\";\n\n\nimport DbConnection from \"../models/DbConnection\";\nimport Channel from \"../../bus/Сhannel\";\nimport DataFormExecuteRequest from \"../models/DataFormExecuteRequest\";\nimport DataForExecution from \"../models/DataForExecution\";\nimport {MessagingBusService} from \"../../../core/api\";\nimport {Config} from \"../../../config\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class DataFormsService {\n\n    private headers = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    private url;\n    private dataBasesUrl;\n\n    public dataBasesSubject: Rx.BehaviorSubject<DbConnection[]> = new Rx.BehaviorSubject<DbConnection[]>(new Array());\n\n    private subscription: Rx.Subscription;\n\n    constructor(@Inject(HttpClient) private http: HttpClient,\n                private messagingBusService: MessagingBusService,\n                private config: Config) {\n        this.url = config.api + '/data-forms/forms';\n        this.dataBasesUrl = config.api + '/db-connections';\n\n        this.requestDataBases();\n\n        this.subscription = this.messagingBusService.getMessage().subscribe(message => {\n            if (message.channel == Channel.DB_CONNECTIONS_WERE_UPDATED) {\n                this.requestDataBases();\n            }\n        });\n    }\n\n    requestDataBases() {\n        this.http.get<DbConnection[]>(this.dataBasesUrl, this.headers)\n            .subscribe(dbs => {\n                this.dataBasesSubject.next(dbs);\n            });\n    }\n\n    add(dataForm: DataForm): Observable<DataForm> {\n        return this.http\n            .post<DataForm>(this.url, dataForm, this.headers);\n    }\n\n    execute(formId:string, request: DataFormExecuteRequest): Observable<DataForExecution> {\n        return this.http\n            .post<DataForExecution>(`${this.url}/${formId}/executions`, request, this.headers);\n    }\n\n\n    getExecutionById(executionId: string): Observable<DataForExecution> {\n        return this.http\n            .get<DataForExecution>(this.url + `/executions/${executionId}`);\n    }\n\n    getAll(): Observable<DataForm[]> {\n        return this.http.get<DataForm[]>(this.url, this.headers);\n    }\n\n    get(datFormId: string): Observable<DataForm> {\n        return this.http\n            .get<DataForm>(this.url + `/${datFormId}`);\n    }\n\n    delete(datFormId: string): Observable<any> {\n        return this.http\n            .delete(this.url + `/${datFormId}`);\n    }\n\n    update(dataForm: DataForm): Observable<DataForm> {\n        return this.http\n            .put<DataForm>(this.url + `/${dataForm.id}`, dataForm, this.headers);\n    }\n\n\n}\n","module.exports = \"<div style=\\\"color:#666;margin: 7px;\\\">Уведомления:</div>\\n<div *ngFor=\\\"let event of applicationEvents\\\" style=\\\"margin: 7px; color:#555;\\\">\\n      {{event.date  | date:'yyyy-MM-dd HH:mm:ss'}} - {{event.text}}\\n</div>\\n\\n\\n\"","module.exports = \"/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 6px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 11.62px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 9.38px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 56px;\\n  letter-spacing: -0.05em; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.02em; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.005em; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 500; }\\n.mat-card-header .mat-card-title {\\n  font-size: 20px; }\\n.mat-card-subtitle,\\n.mat-card-content {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n@media print {\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n    -webkit-transform: translateY(-1.28122em) scale(0.75);\\n            transform: translateY(-1.28122em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.28121em) scale(0.75);\\n            transform: translateY(-1.28121em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.2812em) scale(0.75);\\n            transform: translateY(-1.2812em) scale(0.75); } }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-sub-label-error {\\n  font-weight: normal; }\\n.mat-step-label-error {\\n  font-size: 14px; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 8px;\\n  padding-bottom: 8px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-base .mat-list-item {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-list-option {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list-base[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden;\\n  position: relative; }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  -webkit-transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n@media (-ms-high-contrast: active) {\\n    .mat-ripple-element {\\n      display: none; } }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: -webkit-box;\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: -webkit-box;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  -webkit-transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.32); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@-webkit-keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@-webkit-keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation-name: cdk-text-field-autofill-start;\\n          animation-name: cdk-text-field-autofill-start; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation-name: cdk-text-field-autofill-end;\\n          animation-name: cdk-text-field-autofill-end; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #1565c0;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #ff5252;\\n    color: white; }\\n.mat-toolbar.mat-warn {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, OnDestroy} from '@angular/core';\nimport ApplicationEvent from \"./models/ApplicationEvent\";\nimport {EventsService} from \"./services/events.service\";\nimport {Subscription} from \"rxjs\";\n\n\n@Component({\n  selector: 'events-console',\n  styleUrls: ['./events-console.component.scss'],\n  templateUrl: './events-console.component.html'\n})\nexport class EventsConsoleComponent implements OnDestroy {\n\n  private subscription: Subscription;\n  private applicationEvents: ApplicationEvent[];\n\n  constructor(private eventsService: EventsService){\n    this.subscription = this.eventsService.applicationEventsSubject.subscribe((arr)=>{\n     this.applicationEvents = arr;\n   });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","import * as Stomp from 'stompjs';\nimport * as SockJS from 'sockjs-client';\n\nimport ApplicationEvent from \"../models/ApplicationEvent\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {Config} from \"../../config\";\nimport {Inject} from \"@angular/core\";\n\n\nexport class EventsService {\n\n  private applicationEvents: ApplicationEvent[] = new Array() ;\n  public applicationEventsSubject: BehaviorSubject<ApplicationEvent[]> = new BehaviorSubject(this.applicationEvents);\n\n  private stompClient;\n  private MAX_COUNT_ENETS:number = 100;\n\n  constructor(@Inject(Config) private config: Config){\n      var socket = new SockJS(config.api+'/websocket');\n      this.stompClient = Stomp.over(socket);\n      this.stompClient.debug = null\n      this.stompClient.connect({}, (frame) => {\n        this.stompClient.subscribe(\"/topic/ui/events\", (message) => {\n          this.applicationEvents.push(JSON.parse(message.body));\n          if(this.applicationEvents.length > this.MAX_COUNT_ENETS){\n            this.applicationEvents = this.lastN(this.applicationEvents, this.MAX_COUNT_ENETS);\n          }\n          this.applicationEventsSubject.next(this.applicationEvents);\n        });\n      });\n  }\n\n  lastN(array, n) {\n    if (array == null)\n      return void 0;\n    if (n == null)\n      return array[array.length - 1];\n    return array.slice(Math.max(array.length - n, 0));\n  };\n\n\n}\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from 'ng2-ui-auth';\nimport {Inject, Injectable} from \"@angular/core\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(@Inject(AuthService) private auth: AuthService,\n                private router: Router) {}\n    canActivate(\n        next:  ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ) {\n        if (this.auth.isAuthenticated()) { return true; }\n        this.router.navigateByUrl('login');\n        return false;\n    }\n}\n","import {Component} from '@angular/core';\nimport {AuthService} from \"ng2-ui-auth\";\nimport {Router} from \"@angular/router\";\nimport {Login} from \"./login\";\nimport {Config} from \"../config\";\nimport {first} from \"rxjs/operators\";\n\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.html',\n  styleUrls: ['./login.scss'],\n})\nexport class LoginComponent {\n\n  loginData = new Login()\n\n  public submitted:boolean = false;\n  private url:string;\n\n  constructor(private auth: AuthService,\n              private router: Router,\n              private config: Config) {\n    this.url = config.api +'/authenticate';\n  }\n\n  public onSubmit(form: any):void {\n      this.submitted = true;\n      this.auth.removeToken();\n\n      this.auth.login(this.loginData, this.url) .subscribe({\n        error: (err: any) => console.log(err),\n        complete: () => this.router.navigateByUrl('/')\n      });\n\n  }\n}\n","module.exports = \"<div style=\\\"height: 100%; background-color: #ececec;\\\" fxLayout=\\\"column\\\">\\n\\n  <div fxFlex=\\\"345px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxFlexOffset=\\\"10%\\\">\\n\\n    <mat-card fxFlex=\\\"500px\\\" fxLayout=\\\"column\\\">\\n      <mat-card-title fxLayoutAlign=\\\"center\\\">\\n        <h3>Вход в терминал</h3>\\n      </mat-card-title>\\n\\n      <form (ngSubmit)=\\\"onSubmit(loginForm)\\\"\\n            #loginForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n\\n        <mat-form-field>\\n          <input matInput #input\\n                 [(ngModel)]=\\\"loginData.username\\\"\\n                 required type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 id=\\\"username-field\\\"\\n                 name=\\\"username\\\"\\n                 placeholder=\\\"Логин\\\"\\n                 #username=\\\"ngModel\\\">\\n        </mat-form-field>\\n\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Пароль\\\"\\n                 [type]=\\\"show ?'text':'password'\\\"\\n                 [(ngModel)]=\\\"loginData.password\\\"\\n                 required class=\\\"form-control\\\"\\n                 id=\\\"password-field\\\"\\n                 name=\\\"password\\\"\\n                 #password=\\\"ngModel\\\">\\n          <mat-icon matSuffix (click)=\\\"show = !show\\\">{{show ?'visibility_off': 'visibility' }}</mat-icon>\\n        </mat-form-field>\\n\\n        <div fxLayout fxFlexAlign=\\\"center\\\" style=\\\"margin: 20px;\\\" fxLayoutGap=\\\"10px\\\">\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n        </div>\\n\\n      </form>\\n    </mat-card>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnNjc3MifQ== */\"","export class Login {\n  username: string;\n  password: string;\n}\n\n","module.exports = \"<div style=\\\"height: 100%\\\" fxLayout=\\\"column\\\">\\n  <mat-toolbar color=\\\"primary\\\" style=\\\"z-index: 2;\\\" class=\\\"mat-elevation-z4\\\" fxFlex=\\\"60px\\\">\\n    <mat-toolbar-row>\\n      <span>Dashboard</span>\\n      <span class=\\\"spacer\\\"></span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  <div class=\\\"under-toolbar\\\" fxFlex=\\\"100%\\\" fxLayout class=\\\"mat-elevation-z5\\\">\\n    <mat-sidenav-container class=\\\"example-container\\\" fxFlex>\\n      <mat-sidenav mode=\\\"side\\\" class=\\\"mat-elevation-z4\\\" opened=\\\"true\\\">\\n\\n        <mat-list>\\n\\n          <mat-list-item>\\n            <button mat-icon-button matTooltip=\\\"Задачи мониторинга\\\"\\n                    routerLink=\\\"/bot-monitoring\\\"\\n                    matTooltipPosition=\\\"right\\\">\\n              <mat-icon>desktop_windows</mat-icon>\\n            </button>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <button mat-icon-button matTooltip=\\\"Формы запросов\\\"\\n                    routerLink=\\\"/data-forms\\\"\\n                    matTooltipPosition=\\\"right\\\">\\n              <mat-icon>pan_tool</mat-icon>\\n            </button>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <button mat-icon-button matTooltip=\\\"Команды ботов\\\"\\n                    routerLink=\\\"/bot-commands\\\"\\n                    matTooltipPosition=\\\"right\\\">\\n              <mat-icon>send</mat-icon>\\n            </button>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <button mat-icon-button matTooltip=\\\"Бот API\\\"\\n                    routerLink=\\\"/bots-list\\\"\\n                    matTooltipPosition=\\\"right\\\">\\n              <mat-icon>android</mat-icon>\\n            </button>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <button mat-icon-button matTooltip=\\\"Базы данных\\\"\\n                    matTooltipPosition=\\\"right\\\" routerLink=\\\"/dbs-list\\\">\\n              <mat-icon>storage</mat-icon>\\n            </button>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <button mat-icon-button matTooltip=\\\"Веб-пользователи\\\"\\n                    matTooltipPosition=\\\"right\\\" routerLink=\\\"/web-users-list\\\">\\n              <mat-icon>face</mat-icon>\\n            </button>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <button mat-icon-button matTooltip=\\\"Обработчики текста\\\"\\n                    matTooltipPosition=\\\"right\\\" routerLink=\\\"/text-processor-handlers-list\\\">\\n              <mat-icon>text_rotation_angledown</mat-icon>\\n            </button>\\n          </mat-list-item>\\n\\n\\n\\n          <mat-list-item>\\n            <button mat-icon-button matTooltip=\\\"Настройки приложения\\\"\\n                    matTooltipPosition=\\\"right\\\" routerLink=\\\"/settings\\\">\\n              <mat-icon>settings</mat-icon>\\n            </button>\\n          </mat-list-item>\\n\\n        </mat-list>\\n\\n      </mat-sidenav>\\n      <mat-sidenav-content>\\n        <as-split direction=\\\"vertical\\\">\\n          <as-split-area size=\\\"90\\\">\\n            <router-outlet></router-outlet>\\n          </as-split-area>\\n          <as-split-area size=\\\"10\\\" #autoScrollMe style=\\\"background-color: #eeeeee;\\\">\\n           <events-console></events-console>\\n          </as-split-area>\\n        </as-split>\\n      </mat-sidenav-content>\\n    </mat-sidenav-container>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\"","module.exports = \"/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 6px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 11.62px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 9.38px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 56px;\\n  letter-spacing: -0.05em; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.02em; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.005em; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 500; }\\n.mat-card-header .mat-card-title {\\n  font-size: 20px; }\\n.mat-card-subtitle,\\n.mat-card-content {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n@media print {\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n    -webkit-transform: translateY(-1.28122em) scale(0.75);\\n            transform: translateY(-1.28122em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.28121em) scale(0.75);\\n            transform: translateY(-1.28121em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.2812em) scale(0.75);\\n            transform: translateY(-1.2812em) scale(0.75); } }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-sub-label-error {\\n  font-weight: normal; }\\n.mat-step-label-error {\\n  font-size: 14px; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 8px;\\n  padding-bottom: 8px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-base .mat-list-item {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-list-option {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list-base[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden;\\n  position: relative; }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  -webkit-transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n@media (-ms-high-contrast: active) {\\n    .mat-ripple-element {\\n      display: none; } }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: -webkit-box;\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: -webkit-box;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  -webkit-transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.32); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@-webkit-keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@-webkit-keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation-name: cdk-text-field-autofill-start;\\n          animation-name: cdk-text-field-autofill-start; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation-name: cdk-text-field-autofill-end;\\n          animation-name: cdk-text-field-autofill-end; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #1565c0;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #ff5252;\\n    color: white; }\\n.mat-toolbar.mat-warn {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {AfterViewChecked, Component, ElementRef, ViewChild} from '@angular/core';\nimport {Config} from \"./config\";\n\n\n@Component({\n  selector: 'main-menu',\n  styleUrls: ['./main.component.scss'],\n  templateUrl: './main.component.html',\n  providers:[Config]\n})\nexport class MainComponent implements AfterViewChecked{\n\n  @ViewChild('autoScrollMe') private autoScrollContainer: ElementRef;\n\n  constructor(private config : Config){\n    console.info(config)\n  }\n\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom(): void {\n    try {\n      this.autoScrollContainer.nativeElement.scrollTop = this.autoScrollContainer.nativeElement.scrollHeight;\n    } catch(err) { }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}